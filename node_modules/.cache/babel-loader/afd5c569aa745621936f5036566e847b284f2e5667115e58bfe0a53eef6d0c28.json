{"ast":null,"code":"import _objectSpread from\"C:/Users/Joem/quickdiff-react/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useCallback,useRef}from'react';import'./App.css';import'./user-guide.css';import Header from'./components/Header';import SettingsPanel from'./components/SettingsPanel';import InputSection from'./components/InputSection';import Controls from'./components/Controls';import Legend from'./components/Legend';import Results from'./components/Results';import ReactUserGuide from'./user-guide.js';import{DiffEngine}from'./utils/DiffEngine';import{ExportUtils}from'./utils/ExportUtils';import{HuggingFaceService}from'./utils/HuggingFaceService';import{GroqService}from'./utils/GroqService';import{LanguageDetector}from'./utils/LanguageDetector';import{NotificationProvider,useNotification}from'./components/NotificationProvider';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function QuickDiffApp(){// State management\nconst[originalText,setOriginalText]=useState('');const[changedText,setChangedText]=useState('');const[diffResult,setDiffResult]=useState(null);const[showResults,setShowResults]=useState(false);const[theme,setTheme]=useState('light');const[contrast,setContrast]=useState('normal');// Settings state\nconst[settings,setSettings]=useState({diffMode:'line',viewMode:'side-by-side',language:'plaintext',autoDetectLanguage:true,ignoreCase:false,ignoreWhitespace:false,ignorePunctuation:false,livePreview:false});// Language detection state\nconst[detectedLanguage,setDetectedLanguage]=useState({language:'plaintext',confidence:'low',method:'default'});// AI state\nconst[aiResults,setAiResults]=useState([]);const[showAiResults,setShowAiResults]=useState(false);const[isGeneratingAI,setIsGeneratingAI]=useState(false);// Navigation state\nconst[changes,setChanges]=useState([]);const[currentChangeIndex,setCurrentChangeIndex]=useState(-1);const[minimapVisible,setMinimapVisible]=useState(false);// Initialize user guide\nuseEffect(()=>{new ReactUserGuide();},[]);// Refs\nconst debounceTimer=useRef(null);const diffEngine=useRef(new DiffEngine());const exportUtils=useRef(new ExportUtils());const hfService=useRef(new HuggingFaceService());const groqService=useRef(new GroqService());const languageDetector=useRef(new LanguageDetector());const{showNotification}=useNotification();// Settings management functions (defined early to avoid hoisting issues)\nconst loadSettings=()=>{try{const savedSettings=localStorage.getItem('quickdiff_react_settings');if(savedSettings){setSettings(prev=>_objectSpread(_objectSpread({},prev),JSON.parse(savedSettings)));}}catch(error){console.error('Error loading settings:',error);}};const saveSettings=useCallback(()=>{try{localStorage.setItem('quickdiff_react_settings',JSON.stringify(settings));}catch(error){console.error('Error saving settings:',error);}},[settings]);const loadTheme=()=>{const savedTheme=localStorage.getItem('quickdiff_theme')||'light';const savedContrast=localStorage.getItem('quickdiff_contrast')||'normal';setTheme(savedTheme);setContrast(savedContrast);document.documentElement.setAttribute('data-theme',savedTheme);document.documentElement.setAttribute('data-contrast',savedContrast);};// Load settings and theme on mount\nuseEffect(()=>{loadSettings();loadTheme();// Debug AI API configurations\nconsole.log('=== QuickDiff App Debug ===');console.log('Environment variables check:');console.log('REACT_APP_GROQ_API_KEY:',process.env.REACT_APP_GROQ_API_KEY?'Found':'Not found');console.log('REACT_APP_HUGGINGFACE_API_KEY:',process.env.REACT_APP_HUGGINGFACE_API_KEY?'Found':'Not found');if(groqService.current){groqService.current.debugConfig();// Make Groq service available globally for testing\nwindow.testGroq=async()=>{console.log('🧪 Testing Groq API...');try{const result=await groqService.current.testConnection();console.log('🧪 Test result:',result);return result;}catch(error){console.error('🧪 Test failed:',error);return{success:false,error:error.message};}};console.log('💡 You can test Groq API by running: testGroq() in console');}if(hfService.current){hfService.current.debugConfig();// Make HF service available globally for testing\nwindow.testHF=async()=>{console.log('🧪 Testing Hugging Face API...');try{const result=await hfService.current.testConnection();console.log('🧪 Test result:',result);return result;}catch(error){console.error('🧪 Test failed:',error);return{success:false,error:error.message};}};console.log('💡 You can test HF API by running: testHF() in console');}console.log('========================');},[]);// Auto-save settings when they change\nuseEffect(()=>{saveSettings();},[settings,saveSettings]);// Collect changes for navigation (defined early to avoid hoisting issues)\nconst collectChanges=useCallback(result=>{if(!result)return;const newChanges=[];// Extract changes from originalLines (DiffEngine returns originalLines and changedLines)\nif(result.originalLines){result.originalLines.forEach((line,index)=>{if(line.type&&line.type!=='unchanged'&&line.type!==''){newChanges.push({lineNumber:index+1,type:line.type,content:line.content||'',originalLineNumber:index+1,changedLineNumber:index+1});}});}// Also check changedLines for additional changes (like added lines)\nif(result.changedLines){result.changedLines.forEach((line,index)=>{if(line.type&&line.type!=='unchanged'&&line.type!==''){// Avoid duplicates by checking if we already have this change\nconst exists=newChanges.some(change=>change.lineNumber===index+1&&change.type===line.type);if(!exists){newChanges.push({lineNumber:index+1,type:line.type,content:line.content||'',originalLineNumber:index+1,changedLineNumber:index+1});}}});}// Sort changes by line number\nnewChanges.sort((a,b)=>a.lineNumber-b.lineNumber);console.log('Collected Changes:',newChanges);// Debug log\nsetChanges(newChanges);setCurrentChangeIndex(newChanges.length>0?0:-1);if(newChanges.length>0){showNotification(\"Found \".concat(newChanges.length,\" changes\"));}else{showNotification('No changes detected');}},[showNotification]);// Main comparison function (defined early to avoid hoisting issues)\nconst performComparison=useCallback(()=>{if(!originalText.trim()&&!changedText.trim()){showNotification('Please enter some text to compare');return;}try{const result=diffEngine.current.performComparison(originalText,changedText,settings);console.log('Diff Result:',result);// Debug log\nsetDiffResult(result);setShowResults(true);collectChanges(result);// Auto-generate AI analysis is disabled to prevent duplicate results\n// Users can manually trigger AI analysis using the AI buttons\n// Auto-scroll to results only if live preview is disabled\nif(!settings.livePreview){setTimeout(()=>{const resultsElement=document.getElementById('results-section');if(resultsElement){resultsElement.scrollIntoView({behavior:'smooth',block:'start'});}},100);}showNotification('Comparison completed');}catch(error){console.error('Comparison error:',error);showNotification('Error performing comparison');}},[originalText,changedText,settings,showNotification,collectChanges]);// Theme management\nconst toggleTheme=()=>{const newTheme=theme==='light'?'dark':'light';setTheme(newTheme);localStorage.setItem('quickdiff_theme',newTheme);document.documentElement.setAttribute('data-theme',newTheme);showNotification(\"Switched to \".concat(newTheme,\" theme\"));};const toggleContrast=()=>{const newContrast=contrast==='normal'?'high':'normal';setContrast(newContrast);localStorage.setItem('quickdiff_contrast',newContrast);document.documentElement.setAttribute('data-contrast',newContrast);showNotification(\"\".concat(newContrast==='high'?'Enabled':'Disabled',\" high contrast mode\"));};// Text manipulation functions\nconst clearAll=()=>{setOriginalText('');setChangedText('');setShowResults(false);setDiffResult(null);setAiResults([]);setShowAiResults(false);showNotification('All content cleared');};const swapTexts=()=>{const temp=originalText;setOriginalText(changedText);setChangedText(temp);showNotification('Texts swapped');if(settings.livePreview&&(originalText.trim()||changedText.trim())){performComparison();}};// File handling\nconst handleFileLoad=(file,target)=>{const reader=new FileReader();reader.onload=e=>{const content=e.target.result;if(target==='original'){setOriginalText(content);}else{setChangedText(content);}// Auto-detect language from filename if enabled\nif(settings.autoDetectLanguage){const detection=languageDetector.current.autoDetect(content,file.name);setDetectedLanguage(detection);if(detection.language!=='plaintext'){setSettings(prev=>_objectSpread(_objectSpread({},prev),{},{language:detection.language}));}showNotification(\"File loaded: \".concat(file.name));}else{showNotification(\"File loaded: \".concat(file.name));}};reader.readAsText(file);};// Export functions\nconst copyResults=()=>{exportUtils.current.copyResults(originalText,changedText,aiResults).then(()=>showNotification('Results copied to clipboard')).catch(()=>showNotification('Failed to copy results'));};const exportToTxt=()=>{exportUtils.current.exportToTxt(originalText,changedText,diffResult,aiResults);showNotification('Exported as TXT file');};const exportToHtml=()=>{exportUtils.current.exportToHtml(originalText,changedText,diffResult,aiResults);showNotification('Exported as HTML file');};const exportToMarkdown=()=>{exportUtils.current.exportToMarkdown(originalText,changedText,diffResult,aiResults);showNotification('Exported as Markdown file');};const exportToPdf=()=>{exportUtils.current.exportToPdf(originalText,changedText,diffResult,aiResults);showNotification('Exported as PDF file');};// AI functions\nconst generateAIAnalysis=async type=>{if(!originalText.trim()&&!changedText.trim()){showNotification('Please enter some text to analyze');return;}// Check if this analysis type already exists to prevent duplicates\nconst existingAnalysis=aiResults.find(result=>result.type===type);if(existingAnalysis){showNotification(\"\".concat(type,\" analysis already exists. Clear AI results first to regenerate.\"));return;}setIsGeneratingAI(true);try{if(groqService.current.isConfigured()){// Use Groq API when configured (PREFERRED)\nshowNotification('Generating AI analysis with Groq...');const analysis=await groqService.current.generateAnalysis(type,originalText,changedText);setAiResults(prev=>[...prev,analysis]);setShowAiResults(true);showNotification('✅ Groq AI analysis completed');}else if(hfService.current.isConfigured()){// Fallback to Hugging Face API\nshowNotification('Generating AI analysis with Hugging Face...');const analysis=await hfService.current.generateAnalysis(type,originalText,changedText);setAiResults(prev=>[...prev,analysis]);setShowAiResults(true);showNotification('✅ Hugging Face AI analysis completed');}else{// Generate local analysis when no API is configured\nshowNotification('Generating local analysis (No AI API configured)');const analysis=await hfService.current.generateLocalAnalysis(type,originalText,changedText);setAiResults(prev=>[...prev,analysis]);setShowAiResults(true);showNotification('Local analysis completed');}}catch(error){console.error('AI Analysis Error:',error);// Try to generate fallback analysis even on error\ntry{if(groqService.current.isConfigured()&&!error.message.includes('Groq')){// If Groq failed, try Hugging Face\nshowNotification('Groq failed, trying Hugging Face...');const fallbackAnalysis=await hfService.current.generateAnalysis(type,originalText,changedText);setAiResults(prev=>[...prev,fallbackAnalysis]);setShowAiResults(true);showNotification('✅ Hugging Face fallback analysis completed');}else{// Generate local analysis as final fallback\nconst fallbackAnalysis=await hfService.current.generateLocalAnalysis(type,originalText,changedText);setAiResults(prev=>[...prev,fallbackAnalysis]);setShowAiResults(true);showNotification('Local analysis completed (AI services unavailable)');}}catch(fallbackError){showNotification(\"Analysis failed: \".concat(error.message));}}finally{setIsGeneratingAI(false);}};const clearAIResults=()=>{setAiResults([]);setShowAiResults(false);showNotification('AI results cleared');};const removeAICard=index=>{setAiResults(prev=>prev.filter((_,i)=>i!==index));showNotification('AI analysis removed');// Hide AI results section if no cards left\nif(aiResults.length<=1){setShowAiResults(false);}};// Navigation functions\nconst navigateToPreviousChange=()=>{console.log('Navigate Previous - Changes:',changes.length,'Current Index:',currentChangeIndex);// Debug log\nif(changes.length===0){showNotification('No changes to navigate');return;}const newIndex=currentChangeIndex>0?currentChangeIndex-1:changes.length-1;setCurrentChangeIndex(newIndex);scrollToChange(newIndex);};const navigateToNextChange=()=>{console.log('Navigate Next - Changes:',changes.length,'Current Index:',currentChangeIndex);// Debug log\nif(changes.length===0){showNotification('No changes to navigate');return;}const newIndex=currentChangeIndex<changes.length-1?currentChangeIndex+1:0;setCurrentChangeIndex(newIndex);scrollToChange(newIndex);};const scrollToChange=index=>{if(index<0||index>=changes.length)return;const change=changes[index];// Try multiple selectors to find the line\nlet lineElement=document.querySelector(\"[data-line-number=\\\"\".concat(change.lineNumber,\"\\\"][data-line-type=\\\"\").concat(change.type,\"\\\"]\"));if(!lineElement){lineElement=document.querySelector(\"[data-original-line=\\\"\".concat(change.lineNumber,\"\\\"]\"));}if(!lineElement){lineElement=document.querySelector(\"[data-line-number=\\\"\".concat(change.lineNumber,\"\\\"]\"));}if(lineElement){// Remove previous highlights\ndocument.querySelectorAll('.current-change').forEach(el=>{el.classList.remove('current-change');});lineElement.scrollIntoView({behavior:'smooth',block:'center'});// Highlight the current change temporarily\nlineElement.classList.add('current-change');setTimeout(()=>{lineElement.classList.remove('current-change');},3000);showNotification(\"Navigated to change \".concat(index+1,\" of \").concat(changes.length,\": \").concat(change.type));}else{showNotification(\"Could not find change \".concat(index+1,\" (line \").concat(change.lineNumber,\")\"));}};const toggleMinimap=()=>{setMinimapVisible(!minimapVisible);showNotification(minimapVisible?'Minimap hidden':'Minimap shown');};// Auto-detect language when text changes\nuseEffect(()=>{if(settings.autoDetectLanguage&&(originalText.trim()||changedText.trim())){const combinedText=originalText+'\\n'+changedText;const detection=languageDetector.current.autoDetect(combinedText);setDetectedLanguage(detection);// Auto-update language setting for any detection that's not plaintext\nif(detection.language!=='plaintext'&&detection.language!==settings.language){setSettings(prev=>_objectSpread(_objectSpread({},prev),{},{language:detection.language}));}}else if(!settings.autoDetectLanguage){// Reset to default when auto-detect is disabled\nsetDetectedLanguage({language:'plaintext',confidence:'low',method:'default'});}},[originalText,changedText,settings.autoDetectLanguage,settings.language]);// Live preview with debouncing\nuseEffect(()=>{if(settings.livePreview&&(originalText.trim()||changedText.trim())){clearTimeout(debounceTimer.current);debounceTimer.current=setTimeout(()=>{performComparison();},500);}return()=>clearTimeout(debounceTimer.current);},[originalText,changedText,settings.livePreview,settings.diffMode,settings.ignoreCase,settings.ignoreWhitespace,settings.ignorePunctuation,performComparison]);// Keyboard shortcuts\nuseEffect(()=>{const handleKeyDown=e=>{// Don't trigger shortcuts when typing in text areas or input fields\nif(e.target.tagName==='TEXTAREA'||e.target.tagName==='INPUT'){return;}if(e.ctrlKey||e.metaKey){switch(e.key.toLowerCase()){case'enter':e.preventDefault();performComparison();showNotification('⌨️ Ctrl+Enter: Comparison started');break;case'k':e.preventDefault();clearAll();showNotification('⌨️ Ctrl+K: All content cleared');break;case's':e.preventDefault();swapTexts();showNotification('⌨️ Ctrl+S: Texts swapped');break;case'c':if(showResults){e.preventDefault();copyResults();showNotification('⌨️ Ctrl+C: Results copied');}break;case'd':e.preventDefault();toggleTheme();showNotification('⌨️ Ctrl+D: Theme toggled');break;case'h':e.preventDefault();toggleContrast();showNotification('⌨️ Ctrl+H: Contrast toggled');break;case'm':e.preventDefault();toggleMinimap();showNotification('⌨️ Ctrl+M: Minimap toggled');break;default:break;}}// Handle other shortcuts\nswitch(e.key){case'Escape':if(showAiResults){clearAIResults();showNotification('⌨️ Escape: AI results cleared');}break;case'ArrowUp':if(e.ctrlKey){e.preventDefault();navigateToPreviousChange();}break;case'ArrowDown':if(e.ctrlKey){e.preventDefault();navigateToNextChange();}break;default:break;}};document.addEventListener('keydown',handleKeyDown);return()=>document.removeEventListener('keydown',handleKeyDown);},[showResults,showAiResults,performComparison,clearAll,swapTexts,copyResults,toggleTheme,toggleContrast,toggleMinimap,clearAIResults,navigateToPreviousChange,navigateToNextChange,showNotification]);return/*#__PURE__*/_jsx(\"div\",{className:\"quickdiff-app\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(Header,{onThemeToggle:toggleTheme,onContrastToggle:toggleContrast}),/*#__PURE__*/_jsx(SettingsPanel,{settings:settings,onSettingsChange:setSettings,detectedLanguage:detectedLanguage}),/*#__PURE__*/_jsx(InputSection,{originalText:originalText,changedText:changedText,onOriginalTextChange:setOriginalText,onChangedTextChange:setChangedText,onFileLoad:handleFileLoad}),/*#__PURE__*/_jsx(Controls,{onCompare:performComparison,onClear:clearAll,onSwap:swapTexts,onCopy:copyResults,onExportTxt:exportToTxt,onExportHtml:exportToHtml,onExportMd:exportToMarkdown,onExportPdf:exportToPdf,onAIAnalysis:generateAIAnalysis,hasResults:showResults,isGeneratingAI:isGeneratingAI,hfConfigured:hfService.current.isConfigured(),groqConfigured:groqService.current.isConfigured()}),/*#__PURE__*/_jsx(Legend,{}),showResults&&/*#__PURE__*/_jsx(Results,{diffResult:diffResult,settings:settings,changes:changes,currentChangeIndex:currentChangeIndex,minimapVisible:minimapVisible,onNavigatePrevious:navigateToPreviousChange,onNavigateNext:navigateToNextChange,onToggleMinimap:toggleMinimap,onNavigateToChange:index=>{setCurrentChangeIndex(index);scrollToChange(index);},aiResults:aiResults,showAiResults:showAiResults,onClearAIResults:clearAIResults,onRemoveAICard:removeAICard})]})});}function App(){return/*#__PURE__*/_jsx(NotificationProvider,{children:/*#__PURE__*/_jsx(QuickDiffApp,{})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","Header","SettingsPanel","InputSection","Controls","Legend","Results","ReactUserGuide","DiffEngine","ExportUtils","HuggingFaceService","GroqService","LanguageDetector","NotificationProvider","useNotification","jsx","_jsx","jsxs","_jsxs","QuickDiffApp","originalText","setOriginalText","changedText","setChangedText","diffResult","setDiffResult","showResults","setShowResults","theme","setTheme","contrast","setContrast","settings","setSettings","diffMode","viewMode","language","autoDetectLanguage","ignoreCase","ignoreWhitespace","ignorePunctuation","livePreview","detectedLanguage","setDetectedLanguage","confidence","method","aiResults","setAiResults","showAiResults","setShowAiResults","isGeneratingAI","setIsGeneratingAI","changes","setChanges","currentChangeIndex","setCurrentChangeIndex","minimapVisible","setMinimapVisible","debounceTimer","diffEngine","exportUtils","hfService","groqService","languageDetector","showNotification","loadSettings","savedSettings","localStorage","getItem","prev","_objectSpread","JSON","parse","error","console","saveSettings","setItem","stringify","loadTheme","savedTheme","savedContrast","document","documentElement","setAttribute","log","process","env","REACT_APP_GROQ_API_KEY","REACT_APP_HUGGINGFACE_API_KEY","current","debugConfig","window","testGroq","result","testConnection","success","message","testHF","collectChanges","newChanges","originalLines","forEach","line","index","type","push","lineNumber","content","originalLineNumber","changedLineNumber","changedLines","exists","some","change","sort","a","b","length","concat","performComparison","trim","setTimeout","resultsElement","getElementById","scrollIntoView","behavior","block","toggleTheme","newTheme","toggleContrast","newContrast","clearAll","swapTexts","temp","handleFileLoad","file","target","reader","FileReader","onload","e","detection","autoDetect","name","readAsText","copyResults","then","catch","exportToTxt","exportToHtml","exportToMarkdown","exportToPdf","generateAIAnalysis","existingAnalysis","find","isConfigured","analysis","generateAnalysis","generateLocalAnalysis","includes","fallbackAnalysis","fallbackError","clearAIResults","removeAICard","filter","_","i","navigateToPreviousChange","newIndex","scrollToChange","navigateToNextChange","lineElement","querySelector","querySelectorAll","el","classList","remove","add","toggleMinimap","combinedText","clearTimeout","handleKeyDown","tagName","ctrlKey","metaKey","key","toLowerCase","preventDefault","addEventListener","removeEventListener","className","children","onThemeToggle","onContrastToggle","onSettingsChange","onOriginalTextChange","onChangedTextChange","onFileLoad","onCompare","onClear","onSwap","onCopy","onExportTxt","onExportHtml","onExportMd","onExportPdf","onAIAnalysis","hasResults","hfConfigured","groqConfigured","onNavigatePrevious","onNavigateNext","onToggleMinimap","onNavigateToChange","onClearAIResults","onRemoveAICard","App"],"sources":["C:/Users/Joem/quickdiff-react/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport './App.css';\r\nimport './user-guide.css';\r\nimport Header from './components/Header';\r\nimport SettingsPanel from './components/SettingsPanel';\r\nimport InputSection from './components/InputSection';\r\nimport Controls from './components/Controls';\r\nimport Legend from './components/Legend';\r\nimport Results from './components/Results';\r\nimport ReactUserGuide from './user-guide.js';\r\nimport { DiffEngine } from './utils/DiffEngine';\r\nimport { ExportUtils } from './utils/ExportUtils';\r\nimport { HuggingFaceService } from './utils/HuggingFaceService';\r\nimport { GroqService } from './utils/GroqService';\r\nimport { LanguageDetector } from './utils/LanguageDetector';\r\nimport { NotificationProvider, useNotification } from './components/NotificationProvider';\r\n\r\nfunction QuickDiffApp() {\r\n  // State management\r\n  const [originalText, setOriginalText] = useState('');\r\n  const [changedText, setChangedText] = useState('');\r\n  const [diffResult, setDiffResult] = useState(null);\r\n  const [showResults, setShowResults] = useState(false);\r\n  const [theme, setTheme] = useState('light');\r\n  const [contrast, setContrast] = useState('normal');\r\n  \r\n  // Settings state\r\n  const [settings, setSettings] = useState({\r\n    diffMode: 'line',\r\n    viewMode: 'side-by-side',\r\n    language: 'plaintext',\r\n    autoDetectLanguage: true,\r\n    ignoreCase: false,\r\n    ignoreWhitespace: false,\r\n    ignorePunctuation: false,\r\n    livePreview: false\r\n  });\r\n\r\n  // Language detection state\r\n  const [detectedLanguage, setDetectedLanguage] = useState({\r\n    language: 'plaintext',\r\n    confidence: 'low',\r\n    method: 'default'\r\n  });\r\n\r\n  // AI state\r\n  const [aiResults, setAiResults] = useState([]);\r\n  const [showAiResults, setShowAiResults] = useState(false);\r\n  const [isGeneratingAI, setIsGeneratingAI] = useState(false);\r\n\r\n  // Navigation state\r\n  const [changes, setChanges] = useState([]);\r\n  const [currentChangeIndex, setCurrentChangeIndex] = useState(-1);\r\n  const [minimapVisible, setMinimapVisible] = useState(false);\r\n  \r\n  // Initialize user guide\r\n  useEffect(() => {\r\n    new ReactUserGuide();\r\n  }, []);\r\n\r\n  // Refs\r\n  const debounceTimer = useRef(null);\r\n  const diffEngine = useRef(new DiffEngine());\r\n  const exportUtils = useRef(new ExportUtils());\r\n  const hfService = useRef(new HuggingFaceService());\r\n  const groqService = useRef(new GroqService());\r\n  const languageDetector = useRef(new LanguageDetector());\r\n  \r\n  const { showNotification } = useNotification();\r\n\r\n  // Settings management functions (defined early to avoid hoisting issues)\r\n  const loadSettings = () => {\r\n    try {\r\n      const savedSettings = localStorage.getItem('quickdiff_react_settings');\r\n      if (savedSettings) {\r\n        setSettings(prev => ({ ...prev, ...JSON.parse(savedSettings) }));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading settings:', error);\r\n    }\r\n  };\r\n\r\n  const saveSettings = useCallback(() => {\r\n    try {\r\n      localStorage.setItem('quickdiff_react_settings', JSON.stringify(settings));\r\n    } catch (error) {\r\n      console.error('Error saving settings:', error);\r\n    }\r\n  }, [settings]);\r\n\r\n  const loadTheme = () => {\r\n    const savedTheme = localStorage.getItem('quickdiff_theme') || 'light';\r\n    const savedContrast = localStorage.getItem('quickdiff_contrast') || 'normal';\r\n    setTheme(savedTheme);\r\n    setContrast(savedContrast);\r\n    document.documentElement.setAttribute('data-theme', savedTheme);\r\n    document.documentElement.setAttribute('data-contrast', savedContrast);\r\n  };\r\n\r\n  // Load settings and theme on mount\r\n  useEffect(() => {\r\n    loadSettings();\r\n    loadTheme();\r\n    \r\n    // Debug AI API configurations\r\n    console.log('=== QuickDiff App Debug ===');\r\n    console.log('Environment variables check:');\r\n    console.log('REACT_APP_GROQ_API_KEY:', process.env.REACT_APP_GROQ_API_KEY ? 'Found' : 'Not found');\r\n    console.log('REACT_APP_HUGGINGFACE_API_KEY:', process.env.REACT_APP_HUGGINGFACE_API_KEY ? 'Found' : 'Not found');\r\n    \r\n    if (groqService.current) {\r\n      groqService.current.debugConfig();\r\n      \r\n      // Make Groq service available globally for testing\r\n      window.testGroq = async () => {\r\n        console.log('🧪 Testing Groq API...');\r\n        try {\r\n          const result = await groqService.current.testConnection();\r\n          console.log('🧪 Test result:', result);\r\n          return result;\r\n        } catch (error) {\r\n          console.error('🧪 Test failed:', error);\r\n          return { success: false, error: error.message };\r\n        }\r\n      };\r\n      \r\n      console.log('💡 You can test Groq API by running: testGroq() in console');\r\n    }\r\n    \r\n    if (hfService.current) {\r\n      hfService.current.debugConfig();\r\n      \r\n      // Make HF service available globally for testing\r\n      window.testHF = async () => {\r\n        console.log('🧪 Testing Hugging Face API...');\r\n        try {\r\n          const result = await hfService.current.testConnection();\r\n          console.log('🧪 Test result:', result);\r\n          return result;\r\n        } catch (error) {\r\n          console.error('🧪 Test failed:', error);\r\n          return { success: false, error: error.message };\r\n        }\r\n      };\r\n      \r\n      console.log('💡 You can test HF API by running: testHF() in console');\r\n    }\r\n    console.log('========================');\r\n  }, []);\r\n\r\n\r\n  // Auto-save settings when they change\r\n  useEffect(() => {\r\n    saveSettings();\r\n  }, [settings, saveSettings]);\r\n\r\n\r\n\r\n  // Collect changes for navigation (defined early to avoid hoisting issues)\r\n  const collectChanges = useCallback((result) => {\r\n    if (!result) return;\r\n    \r\n    const newChanges = [];\r\n    \r\n    // Extract changes from originalLines (DiffEngine returns originalLines and changedLines)\r\n    if (result.originalLines) {\r\n      result.originalLines.forEach((line, index) => {\r\n        if (line.type && line.type !== 'unchanged' && line.type !== '') {\r\n          newChanges.push({\r\n            lineNumber: index + 1,\r\n            type: line.type,\r\n            content: line.content || '',\r\n            originalLineNumber: index + 1,\r\n            changedLineNumber: index + 1\r\n          });\r\n        }\r\n      });\r\n    }\r\n    \r\n    // Also check changedLines for additional changes (like added lines)\r\n    if (result.changedLines) {\r\n      result.changedLines.forEach((line, index) => {\r\n        if (line.type && line.type !== 'unchanged' && line.type !== '') {\r\n          // Avoid duplicates by checking if we already have this change\r\n          const exists = newChanges.some(change => \r\n            change.lineNumber === index + 1 && change.type === line.type\r\n          );\r\n          if (!exists) {\r\n            newChanges.push({\r\n              lineNumber: index + 1,\r\n              type: line.type,\r\n              content: line.content || '',\r\n              originalLineNumber: index + 1,\r\n              changedLineNumber: index + 1\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n    \r\n    // Sort changes by line number\r\n    newChanges.sort((a, b) => a.lineNumber - b.lineNumber);\r\n    \r\n    console.log('Collected Changes:', newChanges); // Debug log\r\n    setChanges(newChanges);\r\n    setCurrentChangeIndex(newChanges.length > 0 ? 0 : -1);\r\n    \r\n    if (newChanges.length > 0) {\r\n      showNotification(`Found ${newChanges.length} changes`);\r\n    } else {\r\n      showNotification('No changes detected');\r\n    }\r\n  }, [showNotification]);\r\n\r\n  // Main comparison function (defined early to avoid hoisting issues)\r\n  const performComparison = useCallback(() => {\r\n    if (!originalText.trim() && !changedText.trim()) {\r\n      showNotification('Please enter some text to compare');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const result = diffEngine.current.performComparison(\r\n        originalText,\r\n        changedText,\r\n        settings\r\n      );\r\n\r\n      console.log('Diff Result:', result); // Debug log\r\n      setDiffResult(result);\r\n      setShowResults(true);\r\n      collectChanges(result);\r\n      \r\n      // Auto-generate AI analysis is disabled to prevent duplicate results\r\n      // Users can manually trigger AI analysis using the AI buttons\r\n      \r\n      // Auto-scroll to results only if live preview is disabled\r\n      if (!settings.livePreview) {\r\n        setTimeout(() => {\r\n          const resultsElement = document.getElementById('results-section');\r\n          if (resultsElement) {\r\n            resultsElement.scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n          }\r\n        }, 100);\r\n      }\r\n\r\n      showNotification('Comparison completed');\r\n    } catch (error) {\r\n      console.error('Comparison error:', error);\r\n      showNotification('Error performing comparison');\r\n    }\r\n  }, [originalText, changedText, settings, showNotification, collectChanges]);\r\n\r\n  // Theme management\r\n  const toggleTheme = () => {\r\n    const newTheme = theme === 'light' ? 'dark' : 'light';\r\n    setTheme(newTheme);\r\n    localStorage.setItem('quickdiff_theme', newTheme);\r\n    document.documentElement.setAttribute('data-theme', newTheme);\r\n    showNotification(`Switched to ${newTheme} theme`);\r\n  };\r\n\r\n  const toggleContrast = () => {\r\n    const newContrast = contrast === 'normal' ? 'high' : 'normal';\r\n    setContrast(newContrast);\r\n    localStorage.setItem('quickdiff_contrast', newContrast);\r\n    document.documentElement.setAttribute('data-contrast', newContrast);\r\n    showNotification(`${newContrast === 'high' ? 'Enabled' : 'Disabled'} high contrast mode`);\r\n  };\r\n\r\n  // Text manipulation functions\r\n  const clearAll = () => {\r\n    setOriginalText('');\r\n    setChangedText('');\r\n    setShowResults(false);\r\n    setDiffResult(null);\r\n    setAiResults([]);\r\n    setShowAiResults(false);\r\n    showNotification('All content cleared');\r\n  };\r\n\r\n  const swapTexts = () => {\r\n    const temp = originalText;\r\n    setOriginalText(changedText);\r\n    setChangedText(temp);\r\n    showNotification('Texts swapped');\r\n    \r\n    if (settings.livePreview && (originalText.trim() || changedText.trim())) {\r\n      performComparison();\r\n    }\r\n  };\r\n\r\n  // File handling\r\n  const handleFileLoad = (file, target) => {\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      const content = e.target.result;\r\n      if (target === 'original') {\r\n        setOriginalText(content);\r\n      } else {\r\n        setChangedText(content);\r\n      }\r\n      \r\n      // Auto-detect language from filename if enabled\r\n      if (settings.autoDetectLanguage) {\r\n        const detection = languageDetector.current.autoDetect(content, file.name);\r\n        setDetectedLanguage(detection);\r\n        \r\n        if (detection.language !== 'plaintext') {\r\n          setSettings(prev => ({\r\n            ...prev,\r\n            language: detection.language\r\n          }));\r\n        }\r\n        showNotification(`File loaded: ${file.name}`);\r\n      } else {\r\n        showNotification(`File loaded: ${file.name}`);\r\n      }\r\n    };\r\n    reader.readAsText(file);\r\n  };\r\n\r\n  // Export functions\r\n  const copyResults = () => {\r\n    exportUtils.current.copyResults(originalText, changedText, aiResults)\r\n      .then(() => showNotification('Results copied to clipboard'))\r\n      .catch(() => showNotification('Failed to copy results'));\r\n  };\r\n\r\n  const exportToTxt = () => {\r\n    exportUtils.current.exportToTxt(originalText, changedText, diffResult, aiResults);\r\n    showNotification('Exported as TXT file');\r\n  };\r\n\r\n  const exportToHtml = () => {\r\n    exportUtils.current.exportToHtml(originalText, changedText, diffResult, aiResults);\r\n    showNotification('Exported as HTML file');\r\n  };\r\n\r\n  const exportToMarkdown = () => {\r\n    exportUtils.current.exportToMarkdown(originalText, changedText, diffResult, aiResults);\r\n    showNotification('Exported as Markdown file');\r\n  };\r\n\r\n  const exportToPdf = () => {\r\n    exportUtils.current.exportToPdf(originalText, changedText, diffResult, aiResults);\r\n    showNotification('Exported as PDF file');\r\n  };\r\n\r\n  // AI functions\r\n  const generateAIAnalysis = async (type) => {\r\n    if (!originalText.trim() && !changedText.trim()) {\r\n      showNotification('Please enter some text to analyze');\r\n      return;\r\n    }\r\n\r\n    // Check if this analysis type already exists to prevent duplicates\r\n    const existingAnalysis = aiResults.find(result => result.type === type);\r\n    if (existingAnalysis) {\r\n      showNotification(`${type} analysis already exists. Clear AI results first to regenerate.`);\r\n      return;\r\n    }\r\n\r\n    setIsGeneratingAI(true);\r\n    try {\r\n      if (groqService.current.isConfigured()) {\r\n        // Use Groq API when configured (PREFERRED)\r\n        showNotification('Generating AI analysis with Groq...');\r\n        const analysis = await groqService.current.generateAnalysis(type, originalText, changedText);\r\n        setAiResults(prev => [...prev, analysis]);\r\n        setShowAiResults(true);\r\n        showNotification('✅ Groq AI analysis completed');\r\n      } else if (hfService.current.isConfigured()) {\r\n        // Fallback to Hugging Face API\r\n        showNotification('Generating AI analysis with Hugging Face...');\r\n        const analysis = await hfService.current.generateAnalysis(type, originalText, changedText);\r\n        setAiResults(prev => [...prev, analysis]);\r\n        setShowAiResults(true);\r\n        showNotification('✅ Hugging Face AI analysis completed');\r\n      } else {\r\n        // Generate local analysis when no API is configured\r\n        showNotification('Generating local analysis (No AI API configured)');\r\n        const analysis = await hfService.current.generateLocalAnalysis(type, originalText, changedText);\r\n        setAiResults(prev => [...prev, analysis]);\r\n        setShowAiResults(true);\r\n        showNotification('Local analysis completed');\r\n      }\r\n    } catch (error) {\r\n      console.error('AI Analysis Error:', error);\r\n      // Try to generate fallback analysis even on error\r\n      try {\r\n        if (groqService.current.isConfigured() && !error.message.includes('Groq')) {\r\n          // If Groq failed, try Hugging Face\r\n          showNotification('Groq failed, trying Hugging Face...');\r\n          const fallbackAnalysis = await hfService.current.generateAnalysis(type, originalText, changedText);\r\n          setAiResults(prev => [...prev, fallbackAnalysis]);\r\n          setShowAiResults(true);\r\n          showNotification('✅ Hugging Face fallback analysis completed');\r\n        } else {\r\n          // Generate local analysis as final fallback\r\n          const fallbackAnalysis = await hfService.current.generateLocalAnalysis(type, originalText, changedText);\r\n          setAiResults(prev => [...prev, fallbackAnalysis]);\r\n          setShowAiResults(true);\r\n          showNotification('Local analysis completed (AI services unavailable)');\r\n        }\r\n      } catch (fallbackError) {\r\n        showNotification(`Analysis failed: ${error.message}`);\r\n      }\r\n    } finally {\r\n      setIsGeneratingAI(false);\r\n    }\r\n  };\r\n\r\n  const clearAIResults = () => {\r\n    setAiResults([]);\r\n    setShowAiResults(false);\r\n    showNotification('AI results cleared');\r\n  };\r\n\r\n  const removeAICard = (index) => {\r\n    setAiResults(prev => prev.filter((_, i) => i !== index));\r\n    showNotification('AI analysis removed');\r\n    \r\n    // Hide AI results section if no cards left\r\n    if (aiResults.length <= 1) {\r\n      setShowAiResults(false);\r\n    }\r\n  };\r\n\r\n  // Navigation functions\r\n  const navigateToPreviousChange = () => {\r\n    console.log('Navigate Previous - Changes:', changes.length, 'Current Index:', currentChangeIndex); // Debug log\r\n    if (changes.length === 0) {\r\n      showNotification('No changes to navigate');\r\n      return;\r\n    }\r\n    \r\n    const newIndex = currentChangeIndex > 0 ? currentChangeIndex - 1 : changes.length - 1;\r\n    setCurrentChangeIndex(newIndex);\r\n    scrollToChange(newIndex);\r\n  };\r\n\r\n  const navigateToNextChange = () => {\r\n    console.log('Navigate Next - Changes:', changes.length, 'Current Index:', currentChangeIndex); // Debug log\r\n    if (changes.length === 0) {\r\n      showNotification('No changes to navigate');\r\n      return;\r\n    }\r\n    \r\n    const newIndex = currentChangeIndex < changes.length - 1 ? currentChangeIndex + 1 : 0;\r\n    setCurrentChangeIndex(newIndex);\r\n    scrollToChange(newIndex);\r\n  };\r\n\r\n  const scrollToChange = (index) => {\r\n    if (index < 0 || index >= changes.length) return;\r\n    \r\n    const change = changes[index];\r\n    \r\n    // Try multiple selectors to find the line\r\n    let lineElement = document.querySelector(`[data-line-number=\"${change.lineNumber}\"][data-line-type=\"${change.type}\"]`);\r\n    \r\n    if (!lineElement) {\r\n      lineElement = document.querySelector(`[data-original-line=\"${change.lineNumber}\"]`);\r\n    }\r\n    \r\n    if (!lineElement) {\r\n      lineElement = document.querySelector(`[data-line-number=\"${change.lineNumber}\"]`);\r\n    }\r\n    \r\n    if (lineElement) {\r\n      // Remove previous highlights\r\n      document.querySelectorAll('.current-change').forEach(el => {\r\n        el.classList.remove('current-change');\r\n      });\r\n      \r\n      lineElement.scrollIntoView({ \r\n        behavior: 'smooth', \r\n        block: 'center' \r\n      });\r\n      \r\n      // Highlight the current change temporarily\r\n      lineElement.classList.add('current-change');\r\n      setTimeout(() => {\r\n        lineElement.classList.remove('current-change');\r\n      }, 3000);\r\n      \r\n      showNotification(`Navigated to change ${index + 1} of ${changes.length}: ${change.type}`);\r\n    } else {\r\n      showNotification(`Could not find change ${index + 1} (line ${change.lineNumber})`);\r\n    }\r\n  };\r\n\r\n  const toggleMinimap = () => {\r\n    setMinimapVisible(!minimapVisible);\r\n    showNotification(minimapVisible ? 'Minimap hidden' : 'Minimap shown');\r\n  };\r\n\r\n  // Auto-detect language when text changes\r\n  useEffect(() => {\r\n    if (settings.autoDetectLanguage && (originalText.trim() || changedText.trim())) {\r\n      const combinedText = originalText + '\\n' + changedText;\r\n      const detection = languageDetector.current.autoDetect(combinedText);\r\n      \r\n      setDetectedLanguage(detection);\r\n      \r\n      // Auto-update language setting for any detection that's not plaintext\r\n      if (detection.language !== 'plaintext' && detection.language !== settings.language) {\r\n        setSettings(prev => ({\r\n          ...prev,\r\n          language: detection.language\r\n        }));\r\n      }\r\n    } else if (!settings.autoDetectLanguage) {\r\n      // Reset to default when auto-detect is disabled\r\n      setDetectedLanguage({\r\n        language: 'plaintext',\r\n        confidence: 'low',\r\n        method: 'default'\r\n      });\r\n    }\r\n  }, [originalText, changedText, settings.autoDetectLanguage, settings.language]);\r\n\r\n  // Live preview with debouncing\r\n  useEffect(() => {\r\n    if (settings.livePreview && (originalText.trim() || changedText.trim())) {\r\n      clearTimeout(debounceTimer.current);\r\n      debounceTimer.current = setTimeout(() => {\r\n        performComparison();\r\n      }, 500);\r\n    }\r\n    \r\n    return () => clearTimeout(debounceTimer.current);\r\n  }, [originalText, changedText, settings.livePreview, settings.diffMode, settings.ignoreCase, settings.ignoreWhitespace, settings.ignorePunctuation, performComparison]);\r\n\r\n  // Keyboard shortcuts\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      // Don't trigger shortcuts when typing in text areas or input fields\r\n      if (e.target.tagName === 'TEXTAREA' || e.target.tagName === 'INPUT') {\r\n        return;\r\n      }\r\n      \r\n      if (e.ctrlKey || e.metaKey) {\r\n        switch (e.key.toLowerCase()) {\r\n          case 'enter':\r\n            e.preventDefault();\r\n            performComparison();\r\n            showNotification('⌨️ Ctrl+Enter: Comparison started');\r\n            break;\r\n          case 'k':\r\n            e.preventDefault();\r\n            clearAll();\r\n            showNotification('⌨️ Ctrl+K: All content cleared');\r\n            break;\r\n          case 's':\r\n            e.preventDefault();\r\n            swapTexts();\r\n            showNotification('⌨️ Ctrl+S: Texts swapped');\r\n            break;\r\n          case 'c':\r\n            if (showResults) {\r\n              e.preventDefault();\r\n              copyResults();\r\n              showNotification('⌨️ Ctrl+C: Results copied');\r\n            }\r\n            break;\r\n          case 'd':\r\n            e.preventDefault();\r\n            toggleTheme();\r\n            showNotification('⌨️ Ctrl+D: Theme toggled');\r\n            break;\r\n          case 'h':\r\n            e.preventDefault();\r\n            toggleContrast();\r\n            showNotification('⌨️ Ctrl+H: Contrast toggled');\r\n            break;\r\n          case 'm':\r\n            e.preventDefault();\r\n            toggleMinimap();\r\n            showNotification('⌨️ Ctrl+M: Minimap toggled');\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n      \r\n      // Handle other shortcuts\r\n      switch (e.key) {\r\n        case 'Escape':\r\n          if (showAiResults) {\r\n            clearAIResults();\r\n            showNotification('⌨️ Escape: AI results cleared');\r\n          }\r\n          break;\r\n        case 'ArrowUp':\r\n          if (e.ctrlKey) {\r\n            e.preventDefault();\r\n            navigateToPreviousChange();\r\n          }\r\n          break;\r\n        case 'ArrowDown':\r\n          if (e.ctrlKey) {\r\n            e.preventDefault();\r\n            navigateToNextChange();\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', handleKeyDown);\r\n    return () => document.removeEventListener('keydown', handleKeyDown);\r\n  }, [showResults, showAiResults, performComparison, clearAll, swapTexts, copyResults, toggleTheme, toggleContrast, toggleMinimap, clearAIResults, navigateToPreviousChange, navigateToNextChange, showNotification]);\r\n\r\n  return (\r\n    <div className=\"quickdiff-app\">\r\n      <div className=\"container\">\r\n        <Header \r\n          onThemeToggle={toggleTheme}\r\n          onContrastToggle={toggleContrast}\r\n        />\r\n        \r\n        <SettingsPanel \r\n          settings={settings}\r\n          onSettingsChange={setSettings}\r\n          detectedLanguage={detectedLanguage}\r\n        />\r\n        \r\n        <InputSection\r\n          originalText={originalText}\r\n          changedText={changedText}\r\n          onOriginalTextChange={setOriginalText}\r\n          onChangedTextChange={setChangedText}\r\n          onFileLoad={handleFileLoad}\r\n        />\r\n        \r\n        <Controls\r\n          onCompare={performComparison}\r\n          onClear={clearAll}\r\n          onSwap={swapTexts}\r\n          onCopy={copyResults}\r\n          onExportTxt={exportToTxt}\r\n          onExportHtml={exportToHtml}\r\n          onExportMd={exportToMarkdown}\r\n          onExportPdf={exportToPdf}\r\n          onAIAnalysis={generateAIAnalysis}\r\n          hasResults={showResults}\r\n          isGeneratingAI={isGeneratingAI}\r\n          hfConfigured={hfService.current.isConfigured()}\r\n          groqConfigured={groqService.current.isConfigured()}\r\n        />\r\n        \r\n        <Legend />\r\n        \r\n        {showResults && (\r\n          <Results\r\n            diffResult={diffResult}\r\n            settings={settings}\r\n            changes={changes}\r\n            currentChangeIndex={currentChangeIndex}\r\n            minimapVisible={minimapVisible}\r\n            onNavigatePrevious={navigateToPreviousChange}\r\n            onNavigateNext={navigateToNextChange}\r\n            onToggleMinimap={toggleMinimap}\r\n            onNavigateToChange={(index) => {\r\n              setCurrentChangeIndex(index);\r\n              scrollToChange(index);\r\n            }}\r\n            aiResults={aiResults}\r\n            showAiResults={showAiResults}\r\n            onClearAIResults={clearAIResults}\r\n            onRemoveAICard={removeAICard}\r\n          />\r\n        )}\r\n        \r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <NotificationProvider>\r\n      <QuickDiffApp />\r\n    </NotificationProvider>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}