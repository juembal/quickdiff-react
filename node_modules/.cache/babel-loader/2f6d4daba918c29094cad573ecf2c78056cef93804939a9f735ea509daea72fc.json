{"ast":null,"code":"export class ExportUtils {\n  async copyResults(originalText, changedText, aiResults) {\n    let textToCopy = `QUICKDIFF COMPARISON RESULTS\\n${'='.repeat(50)}\\n\\n`;\n    textToCopy += `Original Text:\\n${'-'.repeat(20)}\\n${originalText}\\n\\n`;\n    textToCopy += `Changed Text:\\n${'-'.repeat(20)}\\n${changedText}\\n\\n`;\n    if (aiResults && aiResults.length > 0) {\n      textToCopy += `AI ANALYSIS RESULTS\\n${'='.repeat(50)}\\n\\n`;\n      aiResults.forEach(result => {\n        textToCopy += `${result.title}\\n${'-'.repeat(result.title.length)}\\n`;\n        textToCopy += this.stripHtml(result.content) + '\\n\\n';\n      });\n    }\n    try {\n      await navigator.clipboard.writeText(textToCopy);\n      return Promise.resolve();\n    } catch (error) {\n      // Fallback for older browsers\n      const textArea = document.createElement('textarea');\n      textArea.value = textToCopy;\n      document.body.appendChild(textArea);\n      textArea.select();\n      document.execCommand('copy');\n      document.body.removeChild(textArea);\n      return Promise.resolve();\n    }\n  }\n  exportToTxt(originalText, changedText, diffResult, aiResults) {\n    let content = `QUICKDIFF COMPARISON RESULTS\\n${'='.repeat(50)}\\n\\n`;\n    content += `Generated on: ${new Date().toLocaleString()}\\n\\n`;\n    content += `Original Text:\\n${'-'.repeat(20)}\\n${originalText}\\n\\n`;\n    content += `Changed Text:\\n${'-'.repeat(20)}\\n${changedText}\\n\\n`;\n\n    // Add comparison summary\n    if (diffResult && diffResult.stats) {\n      const stats = diffResult.stats;\n      content += `COMPARISON SUMMARY\\n${'-'.repeat(20)}\\n`;\n      content += `Added: ${stats.linesAdded || stats.wordsAdded || stats.charactersAdded || 0}\\n`;\n      content += `Removed: ${stats.linesRemoved || stats.wordsRemoved || stats.charactersRemoved || 0}\\n`;\n      content += `Modified: ${stats.linesModified || 0}\\n\\n`;\n    }\n    if (aiResults && aiResults.length > 0) {\n      content += `AI ANALYSIS RESULTS\\n${'='.repeat(50)}\\n\\n`;\n      aiResults.forEach(result => {\n        content += `${result.title}\\n${'-'.repeat(result.title.length)}\\n`;\n        content += this.stripHtml(result.content) + '\\n\\n';\n      });\n    }\n    this.downloadFile(content, 'quickdiff-comparison.txt', 'text/plain');\n  }\n  exportToHtml(originalText, changedText, diffResult, aiResults) {\n    const aiResultsHtml = aiResults && aiResults.length > 0 ? aiResults.map(result => `\n          <div class=\"ai-card\">\n            <div class=\"ai-card-header\">${result.title}</div>\n            <div class=\"ai-card-content\">${result.content}</div>\n          </div>\n        `).join('') : '';\n    const htmlContent = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>QuickDiff - Text Comparison Results</title>\n    <style>\n        body { \n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; \n            line-height: 1.6; \n            margin: 0; \n            padding: 20px; \n            background: #f8f9fa; \n        }\n        .container { max-width: 1200px; margin: 0 auto; background: white; padding: 30px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }\n        .header { text-align: center; margin-bottom: 30px; padding-bottom: 20px; border-bottom: 2px solid #4facfe; }\n        .header h1 { color: #2c3e50; margin: 0; }\n        .timestamp { color: #6c757d; font-size: 0.9rem; margin-top: 10px; }\n        .text-section { margin: 20px 0; }\n        .text-section h2 { color: #4facfe; border-bottom: 1px solid #e9ecef; padding-bottom: 10px; }\n        .text-content { background: #f8f9fa; padding: 15px; border-radius: 5px; white-space: pre-wrap; font-family: monospace; }\n        .ai-section { margin-top: 40px; }\n        .ai-section h2 { color: #000000; border-bottom: 2px solid #B6B09F; padding-bottom: 10px; }\n        .ai-card { background: #F2F2F2; border: 1px solid #B6B09F; border-radius: 8px; margin: 20px 0; overflow: hidden; }\n        .ai-card-header { background: #000000; color: white; padding: 15px 20px; font-weight: 600; }\n        .ai-card-content { padding: 20px; }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"header\">\n            <h1>‚ö° QuickDiff - Text Comparison Results</h1>\n            <div class=\"timestamp\">Generated on ${new Date().toLocaleString()}</div>\n        </div>\n        \n        <div class=\"text-section\">\n            <h2>üìÑ Original Text</h2>\n            <div class=\"text-content\">${this.escapeHtml(originalText)}</div>\n        </div>\n        \n        <div class=\"text-section\">\n            <h2>üìù Changed Text</h2>\n            <div class=\"text-content\">${this.escapeHtml(changedText)}</div>\n        </div>\n        \n        ${aiResultsHtml ? `\n        <div class=\"ai-section\">\n            <h2>üß† AI Analysis Results</h2>\n            ${aiResultsHtml}\n        </div>\n        ` : ''}\n        \n        <div style=\"text-align: center; margin-top: 40px; padding-top: 20px; border-top: 1px solid #e9ecef; color: #6c757d; font-size: 0.9rem;\">\n            Generated by QuickDiff React - Advanced Text Comparison Tool\n        </div>\n    </div>\n</body>\n</html>`;\n    this.downloadFile(htmlContent, 'quickdiff-comparison.html', 'text/html');\n  }\n  exportToMarkdown(originalText, changedText, diffResult, aiResults) {\n    let mdContent = `# ‚ö° QuickDiff - Text Comparison Results\n\n*Generated on: ${new Date().toLocaleString()}*\n\n---\n\n## üìÑ Original Text\n\n\\`\\`\\`\n${originalText}\n\\`\\`\\`\n\n## üìù Changed Text\n\n\\`\\`\\`\n${changedText}\n\\`\\`\\`\n\n## üìä Comparison Summary\n\n`;\n    if (diffResult && diffResult.stats) {\n      const stats = diffResult.stats;\n      mdContent += `| Metric | Count |\n|--------|-------|\n| Added | ${stats.linesAdded || stats.wordsAdded || stats.charactersAdded || 0} |\n| Removed | ${stats.linesRemoved || stats.wordsRemoved || stats.charactersRemoved || 0} |\n| Modified | ${stats.linesModified || 0} |\n\n`;\n    }\n    if (aiResults && aiResults.length > 0) {\n      mdContent += `---\n\n## üß† AI Analysis Results\n\n`;\n      aiResults.forEach(result => {\n        mdContent += `### ${result.title}\n\n${this.stripHtml(result.content)}\n\n`;\n      });\n    }\n    mdContent += `\n---\n\n*Generated by QuickDiff React - Advanced Text Comparison Tool*`;\n    this.downloadFile(mdContent, 'quickdiff-comparison.md', 'text/markdown');\n  }\n  exportToPdf(originalText, changedText, diffResult, aiResults) {\n    // Check if jsPDF is available\n    if (typeof window.jspdf === 'undefined' && typeof window.jsPDF === 'undefined') {\n      console.log('jsPDF not available, using fallback method');\n      this.exportToPdfFallback(originalText, changedText, diffResult, aiResults);\n      return;\n    }\n    const {\n      jsPDF\n    } = window.jspdf || window;\n    const doc = new jsPDF();\n    let yPosition = 20;\n    const pageWidth = doc.internal.pageSize.getWidth();\n    const pageHeight = doc.internal.pageSize.getHeight();\n    const margin = 20;\n    const contentWidth = pageWidth - margin * 2;\n\n    // Helper function to add new page if needed\n    const checkPageBreak = (requiredSpace = 20) => {\n      if (yPosition + requiredSpace > pageHeight - margin) {\n        doc.addPage();\n        yPosition = margin;\n        return true;\n      }\n      return false;\n    };\n\n    // Title\n    doc.setFontSize(16);\n    doc.setFont('helvetica', 'bold');\n    doc.text('QuickDiff React - Text Comparison Results', margin, yPosition);\n    yPosition += 12;\n\n    // Timestamp\n    doc.setFontSize(10);\n    doc.setFont('helvetica', 'normal');\n    doc.text(`Generated on: ${new Date().toLocaleString()}`, margin, yPosition);\n    yPosition += 15;\n\n    // Add separator line\n    doc.setLineWidth(0.5);\n    doc.line(margin, yPosition, pageWidth - margin, yPosition);\n    yPosition += 15;\n\n    // Original Text Section\n    checkPageBreak(30);\n    doc.setFontSize(12);\n    doc.setFont('helvetica', 'bold');\n    doc.text('Original Text:', margin, yPosition);\n    yPosition += 8;\n    doc.setFontSize(9);\n    doc.setFont('courier', 'normal');\n    const originalLines = doc.splitTextToSize(originalText || 'No content provided', contentWidth);\n    for (let i = 0; i < originalLines.length; i++) {\n      checkPageBreak(6);\n      doc.text(originalLines[i], margin, yPosition);\n      yPosition += 4;\n    }\n    yPosition += 10;\n\n    // Changed Text Section\n    checkPageBreak(30);\n    doc.setFontSize(12);\n    doc.setFont('helvetica', 'bold');\n    doc.text('Changed Text:', margin, yPosition);\n    yPosition += 8;\n    doc.setFontSize(9);\n    doc.setFont('courier', 'normal');\n    const changedLines = doc.splitTextToSize(changedText || 'No content provided', contentWidth);\n    for (let i = 0; i < changedLines.length; i++) {\n      checkPageBreak(6);\n      doc.text(changedLines[i], margin, yPosition);\n      yPosition += 4;\n    }\n    yPosition += 15;\n\n    // Add AI results if available\n    if (aiResults && aiResults.length > 0) {\n      checkPageBreak(30);\n      doc.setFontSize(12);\n      doc.setFont('helvetica', 'bold');\n      doc.text('AI Analysis Results:', margin, yPosition);\n      yPosition += 10;\n      aiResults.forEach(result => {\n        checkPageBreak(20);\n        doc.setFontSize(11);\n        doc.setFont('helvetica', 'bold');\n        doc.text(result.title, margin, yPosition);\n        yPosition += 8;\n        doc.setFontSize(9);\n        doc.setFont('helvetica', 'normal');\n        const cleanContent = this.stripHtml(result.content);\n        const contentLines = doc.splitTextToSize(cleanContent, contentWidth);\n        for (let i = 0; i < contentLines.length; i++) {\n          checkPageBreak(5);\n          doc.text(contentLines[i], margin, yPosition);\n          yPosition += 4;\n        }\n        yPosition += 10;\n      });\n    }\n    doc.save('quickdiff-react-comparison.pdf');\n  }\n  exportToPdfFallback(originalText, changedText, diffResult, aiResults) {\n    const aiResultsHtml = aiResults && aiResults.length > 0 ? aiResults.map(result => `\n          <div class=\"ai-card\">\n            <div class=\"ai-card-header\">${result.title}</div>\n            <div class=\"ai-card-content\">${this.stripHtml(result.content)}</div>\n          </div>\n        `).join('') : '';\n    const printWindow = window.open('', '_blank');\n    const printContent = `\n<!DOCTYPE html>\n<html>\n<head>\n    <title>QuickDiff React - Text Comparison Results</title>\n    <style>\n        @media print {\n            body { margin: 0; padding: 20px; font-family: 'Times New Roman', serif; font-size: 12pt; line-height: 1.4; color: #000; }\n            .no-print { display: none !important; }\n            .page-break { page-break-before: always; }\n            .section { margin: 15px 0; }\n            h1, h2, h3 { page-break-after: avoid; }\n            .text-content { page-break-inside: avoid; }\n        }\n        \n        body { font-family: 'Times New Roman', serif; line-height: 1.5; margin: 20px; color: #333; font-size: 12pt; }\n        .header { text-align: center; margin-bottom: 30px; border-bottom: 2px solid #000; padding-bottom: 20px; }\n        .header h1 { font-size: 18pt; font-weight: bold; margin: 0 0 10px 0; color: #000; }\n        .header p { font-size: 10pt; margin: 5px 0; color: #666; }\n        .section { margin: 20px 0; page-break-inside: avoid; }\n        .section h2 { font-size: 14pt; font-weight: bold; color: #000; border-bottom: 1px solid #ccc; padding-bottom: 5px; margin: 15px 0 10px 0; }\n        .text-content { background: #f9f9f9; padding: 15px; border: 1px solid #ddd; border-radius: 3px; white-space: pre-wrap; font-family: 'Courier New', monospace; font-size: 10pt; line-height: 1.3; margin: 10px 0; }\n        .ai-card { margin: 15px 0; border: 1px solid #ddd; border-radius: 3px; overflow: hidden; page-break-inside: avoid; }\n        .ai-card-header { background: #f0f0f0; color: #000; padding: 10px 15px; font-weight: bold; font-size: 12pt; border-bottom: 1px solid #ddd; }\n        .ai-card-content { padding: 15px; font-size: 11pt; line-height: 1.4; }\n        .footer { margin-top: 30px; padding-top: 15px; border-top: 1px solid #ccc; text-align: center; font-size: 10pt; color: #666; }\n    </style>\n</head>\n<body>\n    <div class=\"header\">\n        <h1>QuickDiff React - Text Comparison Results</h1>\n        <p>Generated on: ${new Date().toLocaleString()}</p>\n    </div>\n    \n    <div class=\"section\">\n        <h2>Original Text</h2>\n        <div class=\"text-content\">${this.escapeHtml(originalText || 'No content provided')}</div>\n    </div>\n    \n    <div class=\"section\">\n        <h2>Changed Text</h2>\n        <div class=\"text-content\">${this.escapeHtml(changedText || 'No content provided')}</div>\n    </div>\n    \n    ${aiResultsHtml ? `\n    <div class=\"section ai-section page-break\">\n        <h2>AI Analysis Results</h2>\n        ${aiResultsHtml}\n    </div>\n    ` : ''}\n    \n    <div class=\"footer\">\n        <p>Generated by QuickDiff React - Advanced Text Comparison Tool</p>\n    </div>\n    \n    <div class=\"no-print\" style=\"text-align: center; margin-top: 30px; padding: 20px; background: #f0f0f0; border-radius: 5px;\">\n        <h3>Export Options</h3>\n        <p>Use your browser's print function to save as PDF</p>\n        <button onclick=\"window.print()\" style=\"padding: 12px 24px; background: #007bff; color: white; border: none; border-radius: 5px; cursor: pointer; font-size: 14px; margin: 5px;\">Print / Save as PDF</button>\n        <button onclick=\"window.close()\" style=\"padding: 12px 24px; background: #6c757d; color: white; border: none; border-radius: 5px; cursor: pointer; font-size: 14px; margin: 5px;\">Close Window</button>\n    </div>\n</body>\n</html>`;\n    printWindow.document.write(printContent);\n    printWindow.document.close();\n    setTimeout(() => {\n      printWindow.print();\n    }, 500);\n  }\n  downloadFile(content, filename, mimeType) {\n    const blob = new Blob([content], {\n      type: mimeType\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = filename;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  }\n  escapeHtml(text) {\n    const div = document.createElement('div');\n    div.textContent = text;\n    return div.innerHTML;\n  }\n  stripHtml(html) {\n    const div = document.createElement('div');\n    div.innerHTML = html;\n    return div.textContent || div.innerText || '';\n  }\n}","map":{"version":3,"names":["ExportUtils","copyResults","originalText","changedText","aiResults","textToCopy","repeat","length","forEach","result","title","stripHtml","content","navigator","clipboard","writeText","Promise","resolve","error","textArea","document","createElement","value","body","appendChild","select","execCommand","removeChild","exportToTxt","diffResult","Date","toLocaleString","stats","linesAdded","wordsAdded","charactersAdded","linesRemoved","wordsRemoved","charactersRemoved","linesModified","downloadFile","exportToHtml","aiResultsHtml","map","join","htmlContent","escapeHtml","exportToMarkdown","mdContent","exportToPdf","window","jspdf","jsPDF","console","log","exportToPdfFallback","doc","yPosition","pageWidth","internal","pageSize","getWidth","pageHeight","getHeight","margin","contentWidth","checkPageBreak","requiredSpace","addPage","setFontSize","setFont","text","setLineWidth","line","originalLines","splitTextToSize","i","changedLines","cleanContent","contentLines","save","printWindow","open","printContent","write","close","setTimeout","print","filename","mimeType","blob","Blob","type","url","URL","createObjectURL","a","href","download","click","revokeObjectURL","div","textContent","innerHTML","html","innerText"],"sources":["C:/Users/Joem/quickdiff-react/src/utils/ExportUtils.js"],"sourcesContent":["export class ExportUtils {\r\n  async copyResults(originalText, changedText, aiResults) {\r\n    let textToCopy = `QUICKDIFF COMPARISON RESULTS\\n${'='.repeat(50)}\\n\\n`;\r\n    textToCopy += `Original Text:\\n${'-'.repeat(20)}\\n${originalText}\\n\\n`;\r\n    textToCopy += `Changed Text:\\n${'-'.repeat(20)}\\n${changedText}\\n\\n`;\r\n    \r\n    if (aiResults && aiResults.length > 0) {\r\n      textToCopy += `AI ANALYSIS RESULTS\\n${'='.repeat(50)}\\n\\n`;\r\n      aiResults.forEach(result => {\r\n        textToCopy += `${result.title}\\n${'-'.repeat(result.title.length)}\\n`;\r\n        textToCopy += this.stripHtml(result.content) + '\\n\\n';\r\n      });\r\n    }\r\n    \r\n    try {\r\n      await navigator.clipboard.writeText(textToCopy);\r\n      return Promise.resolve();\r\n    } catch (error) {\r\n      // Fallback for older browsers\r\n      const textArea = document.createElement('textarea');\r\n      textArea.value = textToCopy;\r\n      document.body.appendChild(textArea);\r\n      textArea.select();\r\n      document.execCommand('copy');\r\n      document.body.removeChild(textArea);\r\n      return Promise.resolve();\r\n    }\r\n  }\r\n\r\n  exportToTxt(originalText, changedText, diffResult, aiResults) {\r\n    let content = `QUICKDIFF COMPARISON RESULTS\\n${'='.repeat(50)}\\n\\n`;\r\n    content += `Generated on: ${new Date().toLocaleString()}\\n\\n`;\r\n    content += `Original Text:\\n${'-'.repeat(20)}\\n${originalText}\\n\\n`;\r\n    content += `Changed Text:\\n${'-'.repeat(20)}\\n${changedText}\\n\\n`;\r\n    \r\n    // Add comparison summary\r\n    if (diffResult && diffResult.stats) {\r\n      const stats = diffResult.stats;\r\n      content += `COMPARISON SUMMARY\\n${'-'.repeat(20)}\\n`;\r\n      content += `Added: ${stats.linesAdded || stats.wordsAdded || stats.charactersAdded || 0}\\n`;\r\n      content += `Removed: ${stats.linesRemoved || stats.wordsRemoved || stats.charactersRemoved || 0}\\n`;\r\n      content += `Modified: ${stats.linesModified || 0}\\n\\n`;\r\n    }\r\n    \r\n    if (aiResults && aiResults.length > 0) {\r\n      content += `AI ANALYSIS RESULTS\\n${'='.repeat(50)}\\n\\n`;\r\n      aiResults.forEach(result => {\r\n        content += `${result.title}\\n${'-'.repeat(result.title.length)}\\n`;\r\n        content += this.stripHtml(result.content) + '\\n\\n';\r\n      });\r\n    }\r\n    \r\n    this.downloadFile(content, 'quickdiff-comparison.txt', 'text/plain');\r\n  }\r\n\r\n  exportToHtml(originalText, changedText, diffResult, aiResults) {\r\n    const aiResultsHtml = aiResults && aiResults.length > 0 \r\n      ? aiResults.map(result => `\r\n          <div class=\"ai-card\">\r\n            <div class=\"ai-card-header\">${result.title}</div>\r\n            <div class=\"ai-card-content\">${result.content}</div>\r\n          </div>\r\n        `).join('')\r\n      : '';\r\n\r\n    const htmlContent = `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>QuickDiff - Text Comparison Results</title>\r\n    <style>\r\n        body { \r\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; \r\n            line-height: 1.6; \r\n            margin: 0; \r\n            padding: 20px; \r\n            background: #f8f9fa; \r\n        }\r\n        .container { max-width: 1200px; margin: 0 auto; background: white; padding: 30px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }\r\n        .header { text-align: center; margin-bottom: 30px; padding-bottom: 20px; border-bottom: 2px solid #4facfe; }\r\n        .header h1 { color: #2c3e50; margin: 0; }\r\n        .timestamp { color: #6c757d; font-size: 0.9rem; margin-top: 10px; }\r\n        .text-section { margin: 20px 0; }\r\n        .text-section h2 { color: #4facfe; border-bottom: 1px solid #e9ecef; padding-bottom: 10px; }\r\n        .text-content { background: #f8f9fa; padding: 15px; border-radius: 5px; white-space: pre-wrap; font-family: monospace; }\r\n        .ai-section { margin-top: 40px; }\r\n        .ai-section h2 { color: #000000; border-bottom: 2px solid #B6B09F; padding-bottom: 10px; }\r\n        .ai-card { background: #F2F2F2; border: 1px solid #B6B09F; border-radius: 8px; margin: 20px 0; overflow: hidden; }\r\n        .ai-card-header { background: #000000; color: white; padding: 15px 20px; font-weight: 600; }\r\n        .ai-card-content { padding: 20px; }\r\n    </style>\r\n</head>\r\n<body>\r\n    <div class=\"container\">\r\n        <div class=\"header\">\r\n            <h1>‚ö° QuickDiff - Text Comparison Results</h1>\r\n            <div class=\"timestamp\">Generated on ${new Date().toLocaleString()}</div>\r\n        </div>\r\n        \r\n        <div class=\"text-section\">\r\n            <h2>üìÑ Original Text</h2>\r\n            <div class=\"text-content\">${this.escapeHtml(originalText)}</div>\r\n        </div>\r\n        \r\n        <div class=\"text-section\">\r\n            <h2>üìù Changed Text</h2>\r\n            <div class=\"text-content\">${this.escapeHtml(changedText)}</div>\r\n        </div>\r\n        \r\n        ${aiResultsHtml ? `\r\n        <div class=\"ai-section\">\r\n            <h2>üß† AI Analysis Results</h2>\r\n            ${aiResultsHtml}\r\n        </div>\r\n        ` : ''}\r\n        \r\n        <div style=\"text-align: center; margin-top: 40px; padding-top: 20px; border-top: 1px solid #e9ecef; color: #6c757d; font-size: 0.9rem;\">\r\n            Generated by QuickDiff React - Advanced Text Comparison Tool\r\n        </div>\r\n    </div>\r\n</body>\r\n</html>`;\r\n    \r\n    this.downloadFile(htmlContent, 'quickdiff-comparison.html', 'text/html');\r\n  }\r\n\r\n  exportToMarkdown(originalText, changedText, diffResult, aiResults) {\r\n    let mdContent = `# ‚ö° QuickDiff - Text Comparison Results\r\n\r\n*Generated on: ${new Date().toLocaleString()}*\r\n\r\n---\r\n\r\n## üìÑ Original Text\r\n\r\n\\`\\`\\`\r\n${originalText}\r\n\\`\\`\\`\r\n\r\n## üìù Changed Text\r\n\r\n\\`\\`\\`\r\n${changedText}\r\n\\`\\`\\`\r\n\r\n## üìä Comparison Summary\r\n\r\n`;\r\n    \r\n    if (diffResult && diffResult.stats) {\r\n      const stats = diffResult.stats;\r\n      mdContent += `| Metric | Count |\r\n|--------|-------|\r\n| Added | ${stats.linesAdded || stats.wordsAdded || stats.charactersAdded || 0} |\r\n| Removed | ${stats.linesRemoved || stats.wordsRemoved || stats.charactersRemoved || 0} |\r\n| Modified | ${stats.linesModified || 0} |\r\n\r\n`;\r\n    }\r\n    \r\n    if (aiResults && aiResults.length > 0) {\r\n      mdContent += `---\r\n\r\n## üß† AI Analysis Results\r\n\r\n`;\r\n      aiResults.forEach(result => {\r\n        mdContent += `### ${result.title}\r\n\r\n${this.stripHtml(result.content)}\r\n\r\n`;\r\n      });\r\n    }\r\n    \r\n    mdContent += `\r\n---\r\n\r\n*Generated by QuickDiff React - Advanced Text Comparison Tool*`;\r\n    \r\n    this.downloadFile(mdContent, 'quickdiff-comparison.md', 'text/markdown');\r\n  }\r\n\r\n  exportToPdf(originalText, changedText, diffResult, aiResults) {\r\n    // Check if jsPDF is available\r\n    if (typeof window.jspdf === 'undefined' && typeof window.jsPDF === 'undefined') {\r\n      console.log('jsPDF not available, using fallback method');\r\n      this.exportToPdfFallback(originalText, changedText, diffResult, aiResults);\r\n      return;\r\n    }\r\n    \r\n    const { jsPDF } = window.jspdf || window;\r\n    const doc = new jsPDF();\r\n    \r\n    let yPosition = 20;\r\n    const pageWidth = doc.internal.pageSize.getWidth();\r\n    const pageHeight = doc.internal.pageSize.getHeight();\r\n    const margin = 20;\r\n    const contentWidth = pageWidth - (margin * 2);\r\n    \r\n    // Helper function to add new page if needed\r\n    const checkPageBreak = (requiredSpace = 20) => {\r\n      if (yPosition + requiredSpace > pageHeight - margin) {\r\n        doc.addPage();\r\n        yPosition = margin;\r\n        return true;\r\n      }\r\n      return false;\r\n    };\r\n    \r\n    // Title\r\n    doc.setFontSize(16);\r\n    doc.setFont('helvetica', 'bold');\r\n    doc.text('QuickDiff React - Text Comparison Results', margin, yPosition);\r\n    yPosition += 12;\r\n    \r\n    // Timestamp\r\n    doc.setFontSize(10);\r\n    doc.setFont('helvetica', 'normal');\r\n    doc.text(`Generated on: ${new Date().toLocaleString()}`, margin, yPosition);\r\n    yPosition += 15;\r\n    \r\n    // Add separator line\r\n    doc.setLineWidth(0.5);\r\n    doc.line(margin, yPosition, pageWidth - margin, yPosition);\r\n    yPosition += 15;\r\n    \r\n    // Original Text Section\r\n    checkPageBreak(30);\r\n    doc.setFontSize(12);\r\n    doc.setFont('helvetica', 'bold');\r\n    doc.text('Original Text:', margin, yPosition);\r\n    yPosition += 8;\r\n    \r\n    doc.setFontSize(9);\r\n    doc.setFont('courier', 'normal');\r\n    const originalLines = doc.splitTextToSize(originalText || 'No content provided', contentWidth);\r\n    \r\n    for (let i = 0; i < originalLines.length; i++) {\r\n      checkPageBreak(6);\r\n      doc.text(originalLines[i], margin, yPosition);\r\n      yPosition += 4;\r\n    }\r\n    yPosition += 10;\r\n    \r\n    // Changed Text Section\r\n    checkPageBreak(30);\r\n    doc.setFontSize(12);\r\n    doc.setFont('helvetica', 'bold');\r\n    doc.text('Changed Text:', margin, yPosition);\r\n    yPosition += 8;\r\n    \r\n    doc.setFontSize(9);\r\n    doc.setFont('courier', 'normal');\r\n    const changedLines = doc.splitTextToSize(changedText || 'No content provided', contentWidth);\r\n    \r\n    for (let i = 0; i < changedLines.length; i++) {\r\n      checkPageBreak(6);\r\n      doc.text(changedLines[i], margin, yPosition);\r\n      yPosition += 4;\r\n    }\r\n    yPosition += 15;\r\n    \r\n    // Add AI results if available\r\n    if (aiResults && aiResults.length > 0) {\r\n      checkPageBreak(30);\r\n      \r\n      doc.setFontSize(12);\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.text('AI Analysis Results:', margin, yPosition);\r\n      yPosition += 10;\r\n      \r\n      aiResults.forEach(result => {\r\n        checkPageBreak(20);\r\n        \r\n        doc.setFontSize(11);\r\n        doc.setFont('helvetica', 'bold');\r\n        doc.text(result.title, margin, yPosition);\r\n        yPosition += 8;\r\n        \r\n        doc.setFontSize(9);\r\n        doc.setFont('helvetica', 'normal');\r\n        \r\n        const cleanContent = this.stripHtml(result.content);\r\n        const contentLines = doc.splitTextToSize(cleanContent, contentWidth);\r\n        \r\n        for (let i = 0; i < contentLines.length; i++) {\r\n          checkPageBreak(5);\r\n          doc.text(contentLines[i], margin, yPosition);\r\n          yPosition += 4;\r\n        }\r\n        yPosition += 10;\r\n      });\r\n    }\r\n    \r\n    doc.save('quickdiff-react-comparison.pdf');\r\n  }\r\n\r\n  exportToPdfFallback(originalText, changedText, diffResult, aiResults) {\r\n    const aiResultsHtml = aiResults && aiResults.length > 0 \r\n      ? aiResults.map(result => `\r\n          <div class=\"ai-card\">\r\n            <div class=\"ai-card-header\">${result.title}</div>\r\n            <div class=\"ai-card-content\">${this.stripHtml(result.content)}</div>\r\n          </div>\r\n        `).join('')\r\n      : '';\r\n\r\n    const printWindow = window.open('', '_blank');\r\n    const printContent = `\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>QuickDiff React - Text Comparison Results</title>\r\n    <style>\r\n        @media print {\r\n            body { margin: 0; padding: 20px; font-family: 'Times New Roman', serif; font-size: 12pt; line-height: 1.4; color: #000; }\r\n            .no-print { display: none !important; }\r\n            .page-break { page-break-before: always; }\r\n            .section { margin: 15px 0; }\r\n            h1, h2, h3 { page-break-after: avoid; }\r\n            .text-content { page-break-inside: avoid; }\r\n        }\r\n        \r\n        body { font-family: 'Times New Roman', serif; line-height: 1.5; margin: 20px; color: #333; font-size: 12pt; }\r\n        .header { text-align: center; margin-bottom: 30px; border-bottom: 2px solid #000; padding-bottom: 20px; }\r\n        .header h1 { font-size: 18pt; font-weight: bold; margin: 0 0 10px 0; color: #000; }\r\n        .header p { font-size: 10pt; margin: 5px 0; color: #666; }\r\n        .section { margin: 20px 0; page-break-inside: avoid; }\r\n        .section h2 { font-size: 14pt; font-weight: bold; color: #000; border-bottom: 1px solid #ccc; padding-bottom: 5px; margin: 15px 0 10px 0; }\r\n        .text-content { background: #f9f9f9; padding: 15px; border: 1px solid #ddd; border-radius: 3px; white-space: pre-wrap; font-family: 'Courier New', monospace; font-size: 10pt; line-height: 1.3; margin: 10px 0; }\r\n        .ai-card { margin: 15px 0; border: 1px solid #ddd; border-radius: 3px; overflow: hidden; page-break-inside: avoid; }\r\n        .ai-card-header { background: #f0f0f0; color: #000; padding: 10px 15px; font-weight: bold; font-size: 12pt; border-bottom: 1px solid #ddd; }\r\n        .ai-card-content { padding: 15px; font-size: 11pt; line-height: 1.4; }\r\n        .footer { margin-top: 30px; padding-top: 15px; border-top: 1px solid #ccc; text-align: center; font-size: 10pt; color: #666; }\r\n    </style>\r\n</head>\r\n<body>\r\n    <div class=\"header\">\r\n        <h1>QuickDiff React - Text Comparison Results</h1>\r\n        <p>Generated on: ${new Date().toLocaleString()}</p>\r\n    </div>\r\n    \r\n    <div class=\"section\">\r\n        <h2>Original Text</h2>\r\n        <div class=\"text-content\">${this.escapeHtml(originalText || 'No content provided')}</div>\r\n    </div>\r\n    \r\n    <div class=\"section\">\r\n        <h2>Changed Text</h2>\r\n        <div class=\"text-content\">${this.escapeHtml(changedText || 'No content provided')}</div>\r\n    </div>\r\n    \r\n    ${aiResultsHtml ? `\r\n    <div class=\"section ai-section page-break\">\r\n        <h2>AI Analysis Results</h2>\r\n        ${aiResultsHtml}\r\n    </div>\r\n    ` : ''}\r\n    \r\n    <div class=\"footer\">\r\n        <p>Generated by QuickDiff React - Advanced Text Comparison Tool</p>\r\n    </div>\r\n    \r\n    <div class=\"no-print\" style=\"text-align: center; margin-top: 30px; padding: 20px; background: #f0f0f0; border-radius: 5px;\">\r\n        <h3>Export Options</h3>\r\n        <p>Use your browser's print function to save as PDF</p>\r\n        <button onclick=\"window.print()\" style=\"padding: 12px 24px; background: #007bff; color: white; border: none; border-radius: 5px; cursor: pointer; font-size: 14px; margin: 5px;\">Print / Save as PDF</button>\r\n        <button onclick=\"window.close()\" style=\"padding: 12px 24px; background: #6c757d; color: white; border: none; border-radius: 5px; cursor: pointer; font-size: 14px; margin: 5px;\">Close Window</button>\r\n    </div>\r\n</body>\r\n</html>`;\r\n    \r\n    printWindow.document.write(printContent);\r\n    printWindow.document.close();\r\n    \r\n    setTimeout(() => {\r\n      printWindow.print();\r\n    }, 500);\r\n  }\r\n\r\n  downloadFile(content, filename, mimeType) {\r\n    const blob = new Blob([content], { type: mimeType });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = filename;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n  }\r\n\r\n  escapeHtml(text) {\r\n    const div = document.createElement('div');\r\n    div.textContent = text;\r\n    return div.innerHTML;\r\n  }\r\n\r\n  stripHtml(html) {\r\n    const div = document.createElement('div');\r\n    div.innerHTML = html;\r\n    return div.textContent || div.innerText || '';\r\n  }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}