{"ast":null,"code":"export class ExportUtils{async copyResults(originalText,changedText,aiResults){let textToCopy=\"QUICKDIFF COMPARISON RESULTS\\n\".concat('='.repeat(50),\"\\n\\n\");textToCopy+=\"Original Text:\\n\".concat('-'.repeat(20),\"\\n\").concat(originalText,\"\\n\\n\");textToCopy+=\"Changed Text:\\n\".concat('-'.repeat(20),\"\\n\").concat(changedText,\"\\n\\n\");if(aiResults&&aiResults.length>0){textToCopy+=\"AI ANALYSIS RESULTS\\n\".concat('='.repeat(50),\"\\n\\n\");aiResults.forEach(result=>{textToCopy+=\"\".concat(result.title,\"\\n\").concat('-'.repeat(result.title.length),\"\\n\");textToCopy+=this.stripHtml(result.content)+'\\n\\n';});}try{await navigator.clipboard.writeText(textToCopy);return Promise.resolve();}catch(error){// Fallback for older browsers\nconst textArea=document.createElement('textarea');textArea.value=textToCopy;document.body.appendChild(textArea);textArea.select();document.execCommand('copy');document.body.removeChild(textArea);return Promise.resolve();}}exportToTxt(originalText,changedText,diffResult,aiResults){let content=\"QUICKDIFF COMPARISON RESULTS\\n\".concat('='.repeat(50),\"\\n\\n\");content+=\"Generated on: \".concat(new Date().toLocaleString(),\"\\n\\n\");content+=\"Original Text:\\n\".concat('-'.repeat(20),\"\\n\").concat(originalText,\"\\n\\n\");content+=\"Changed Text:\\n\".concat('-'.repeat(20),\"\\n\").concat(changedText,\"\\n\\n\");// Add comparison summary\nif(diffResult&&diffResult.stats){const stats=diffResult.stats;content+=\"COMPARISON SUMMARY\\n\".concat('-'.repeat(20),\"\\n\");content+=\"Added: \".concat(stats.linesAdded||stats.wordsAdded||stats.charactersAdded||0,\"\\n\");content+=\"Removed: \".concat(stats.linesRemoved||stats.wordsRemoved||stats.charactersRemoved||0,\"\\n\");content+=\"Modified: \".concat(stats.linesModified||0,\"\\n\\n\");}if(aiResults&&aiResults.length>0){content+=\"AI ANALYSIS RESULTS\\n\".concat('='.repeat(50),\"\\n\\n\");aiResults.forEach(result=>{content+=\"\".concat(result.title,\"\\n\").concat('-'.repeat(result.title.length),\"\\n\");content+=this.stripHtml(result.content)+'\\n\\n';});}this.downloadFile(content,'quickdiff-comparison.txt','text/plain');}exportToHtml(originalText,changedText,diffResult,aiResults){const aiResultsHtml=aiResults&&aiResults.length>0?aiResults.map(result=>\"\\n          <div class=\\\"ai-card\\\">\\n            <div class=\\\"ai-card-header\\\">\".concat(result.title,\"</div>\\n            <div class=\\\"ai-card-content\\\">\").concat(result.content,\"</div>\\n          </div>\\n        \")).join(''):'';const htmlContent=\"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n    <meta charset=\\\"UTF-8\\\">\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n    <title>QuickDiff - Text Comparison Results</title>\\n    <style>\\n        body { \\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; \\n            line-height: 1.6; \\n            margin: 0; \\n            padding: 20px; \\n            background: #f8f9fa; \\n        }\\n        .container { max-width: 1200px; margin: 0 auto; background: white; padding: 30px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }\\n        .header { text-align: center; margin-bottom: 30px; padding-bottom: 20px; border-bottom: 2px solid #4facfe; }\\n        .header h1 { color: #2c3e50; margin: 0; }\\n        .timestamp { color: #6c757d; font-size: 0.9rem; margin-top: 10px; }\\n        .text-section { margin: 20px 0; }\\n        .text-section h2 { color: #4facfe; border-bottom: 1px solid #e9ecef; padding-bottom: 10px; }\\n        .text-content { background: #f8f9fa; padding: 15px; border-radius: 5px; white-space: pre-wrap; font-family: monospace; }\\n        .ai-section { margin-top: 40px; }\\n        .ai-section h2 { color: #000000; border-bottom: 2px solid #B6B09F; padding-bottom: 10px; }\\n        .ai-card { background: #F2F2F2; border: 1px solid #B6B09F; border-radius: 8px; margin: 20px 0; overflow: hidden; }\\n        .ai-card-header { background: #000000; color: white; padding: 15px 20px; font-weight: 600; }\\n        .ai-card-content { padding: 20px; }\\n    </style>\\n</head>\\n<body>\\n    <div class=\\\"container\\\">\\n        <div class=\\\"header\\\">\\n            <h1>\\u26A1 QuickDiff - Text Comparison Results</h1>\\n            <div class=\\\"timestamp\\\">Generated on \".concat(new Date().toLocaleString(),\"</div>\\n        </div>\\n        \\n        <div class=\\\"text-section\\\">\\n            <h2>\\uD83D\\uDCC4 Original Text</h2>\\n            <div class=\\\"text-content\\\">\").concat(this.escapeHtml(originalText),\"</div>\\n        </div>\\n        \\n        <div class=\\\"text-section\\\">\\n            <h2>\\uD83D\\uDCDD Changed Text</h2>\\n            <div class=\\\"text-content\\\">\").concat(this.escapeHtml(changedText),\"</div>\\n        </div>\\n        \\n        \").concat(aiResultsHtml?\"\\n        <div class=\\\"ai-section\\\">\\n            <h2>\\uD83E\\uDDE0 AI Analysis Results</h2>\\n            \".concat(aiResultsHtml,\"\\n        </div>\\n        \"):'',\"\\n        \\n        <div style=\\\"text-align: center; margin-top: 40px; padding-top: 20px; border-top: 1px solid #e9ecef; color: #6c757d; font-size: 0.9rem;\\\">\\n            Generated by QuickDiff React - Advanced Text Comparison Tool\\n        </div>\\n    </div>\\n</body>\\n</html>\");this.downloadFile(htmlContent,'quickdiff-comparison.html','text/html');}exportToMarkdown(originalText,changedText,diffResult,aiResults){let mdContent=\"# \\u26A1 QuickDiff - Text Comparison Results\\n\\n*Generated on: \".concat(new Date().toLocaleString(),\"*\\n\\n---\\n\\n## \\uD83D\\uDCC4 Original Text\\n\\n```\\n\").concat(originalText,\"\\n```\\n\\n## \\uD83D\\uDCDD Changed Text\\n\\n```\\n\").concat(changedText,\"\\n```\\n\\n## \\uD83D\\uDCCA Comparison Summary\\n\\n\");if(diffResult&&diffResult.stats){const stats=diffResult.stats;mdContent+=\"| Metric | Count |\\n|--------|-------|\\n| Added | \".concat(stats.linesAdded||stats.wordsAdded||stats.charactersAdded||0,\" |\\n| Removed | \").concat(stats.linesRemoved||stats.wordsRemoved||stats.charactersRemoved||0,\" |\\n| Modified | \").concat(stats.linesModified||0,\" |\\n\\n\");}if(aiResults&&aiResults.length>0){mdContent+=\"---\\n\\n## \\uD83E\\uDDE0 AI Analysis Results\\n\\n\";aiResults.forEach(result=>{mdContent+=\"### \".concat(result.title,\"\\n\\n\").concat(this.stripHtml(result.content),\"\\n\\n\");});}mdContent+=\"\\n---\\n\\n*Generated by QuickDiff React - Advanced Text Comparison Tool*\";this.downloadFile(mdContent,'quickdiff-comparison.md','text/markdown');}exportToPdf(originalText,changedText,diffResult,aiResults){// Check if jsPDF is available\nif(typeof window.jspdf==='undefined'&&typeof window.jsPDF==='undefined'){console.log('jsPDF not available, using fallback method');this.exportToPdfFallback(originalText,changedText,diffResult,aiResults);return;}const{jsPDF}=window.jspdf||window;const doc=new jsPDF();let yPosition=20;const pageWidth=doc.internal.pageSize.getWidth();const pageHeight=doc.internal.pageSize.getHeight();const margin=20;const contentWidth=pageWidth-margin*2;// Helper function to add new page if needed\nconst checkPageBreak=function(){let requiredSpace=arguments.length>0&&arguments[0]!==undefined?arguments[0]:20;if(yPosition+requiredSpace>pageHeight-margin){doc.addPage();yPosition=margin;return true;}return false;};// Title\ndoc.setFontSize(16);doc.setFont('helvetica','bold');doc.text('QuickDiff React - Text Comparison Results',margin,yPosition);yPosition+=12;// Timestamp\ndoc.setFontSize(10);doc.setFont('helvetica','normal');doc.text(\"Generated on: \".concat(new Date().toLocaleString()),margin,yPosition);yPosition+=15;// Add separator line\ndoc.setLineWidth(0.5);doc.line(margin,yPosition,pageWidth-margin,yPosition);yPosition+=15;// Original Text Section\ncheckPageBreak(30);doc.setFontSize(12);doc.setFont('helvetica','bold');doc.text('Original Text:',margin,yPosition);yPosition+=8;doc.setFontSize(9);doc.setFont('courier','normal');const originalLines=doc.splitTextToSize(originalText||'No content provided',contentWidth);for(let i=0;i<originalLines.length;i++){checkPageBreak(6);doc.text(originalLines[i],margin,yPosition);yPosition+=4;}yPosition+=10;// Changed Text Section\ncheckPageBreak(30);doc.setFontSize(12);doc.setFont('helvetica','bold');doc.text('Changed Text:',margin,yPosition);yPosition+=8;doc.setFontSize(9);doc.setFont('courier','normal');const changedLines=doc.splitTextToSize(changedText||'No content provided',contentWidth);for(let i=0;i<changedLines.length;i++){checkPageBreak(6);doc.text(changedLines[i],margin,yPosition);yPosition+=4;}yPosition+=15;// Add AI results if available\nif(aiResults&&aiResults.length>0){checkPageBreak(30);doc.setFontSize(12);doc.setFont('helvetica','bold');doc.text('AI Analysis Results:',margin,yPosition);yPosition+=10;aiResults.forEach(result=>{checkPageBreak(20);doc.setFontSize(11);doc.setFont('helvetica','bold');doc.text(result.title,margin,yPosition);yPosition+=8;doc.setFontSize(9);doc.setFont('helvetica','normal');const cleanContent=this.stripHtml(result.content);const contentLines=doc.splitTextToSize(cleanContent,contentWidth);for(let i=0;i<contentLines.length;i++){checkPageBreak(5);doc.text(contentLines[i],margin,yPosition);yPosition+=4;}yPosition+=10;});}doc.save('quickdiff-react-comparison.pdf');}exportToPdfFallback(originalText,changedText,diffResult,aiResults){const aiResultsHtml=aiResults&&aiResults.length>0?aiResults.map(result=>\"\\n          <div class=\\\"ai-card\\\">\\n            <div class=\\\"ai-card-header\\\">\".concat(result.title,\"</div>\\n            <div class=\\\"ai-card-content\\\">\").concat(this.stripHtml(result.content),\"</div>\\n          </div>\\n        \")).join(''):'';const printWindow=window.open('','_blank');const printContent=\"\\n<!DOCTYPE html>\\n<html>\\n<head>\\n    <title>QuickDiff React - Text Comparison Results</title>\\n    <style>\\n        @media print {\\n            body { margin: 0; padding: 20px; font-family: 'Times New Roman', serif; font-size: 12pt; line-height: 1.4; color: #000; }\\n            .no-print { display: none !important; }\\n            .page-break { page-break-before: always; }\\n            .section { margin: 15px 0; }\\n            h1, h2, h3 { page-break-after: avoid; }\\n            .text-content { page-break-inside: avoid; }\\n        }\\n        \\n        body { font-family: 'Times New Roman', serif; line-height: 1.5; margin: 20px; color: #333; font-size: 12pt; }\\n        .header { text-align: center; margin-bottom: 30px; border-bottom: 2px solid #000; padding-bottom: 20px; }\\n        .header h1 { font-size: 18pt; font-weight: bold; margin: 0 0 10px 0; color: #000; }\\n        .header p { font-size: 10pt; margin: 5px 0; color: #666; }\\n        .section { margin: 20px 0; page-break-inside: avoid; }\\n        .section h2 { font-size: 14pt; font-weight: bold; color: #000; border-bottom: 1px solid #ccc; padding-bottom: 5px; margin: 15px 0 10px 0; }\\n        .text-content { background: #f9f9f9; padding: 15px; border: 1px solid #ddd; border-radius: 3px; white-space: pre-wrap; font-family: 'Courier New', monospace; font-size: 10pt; line-height: 1.3; margin: 10px 0; }\\n        .ai-card { margin: 15px 0; border: 1px solid #ddd; border-radius: 3px; overflow: hidden; page-break-inside: avoid; }\\n        .ai-card-header { background: #f0f0f0; color: #000; padding: 10px 15px; font-weight: bold; font-size: 12pt; border-bottom: 1px solid #ddd; }\\n        .ai-card-content { padding: 15px; font-size: 11pt; line-height: 1.4; }\\n        .footer { margin-top: 30px; padding-top: 15px; border-top: 1px solid #ccc; text-align: center; font-size: 10pt; color: #666; }\\n    </style>\\n</head>\\n<body>\\n    <div class=\\\"header\\\">\\n        <h1>QuickDiff React - Text Comparison Results</h1>\\n        <p>Generated on: \".concat(new Date().toLocaleString(),\"</p>\\n    </div>\\n    \\n    <div class=\\\"section\\\">\\n        <h2>Original Text</h2>\\n        <div class=\\\"text-content\\\">\").concat(this.escapeHtml(originalText||'No content provided'),\"</div>\\n    </div>\\n    \\n    <div class=\\\"section\\\">\\n        <h2>Changed Text</h2>\\n        <div class=\\\"text-content\\\">\").concat(this.escapeHtml(changedText||'No content provided'),\"</div>\\n    </div>\\n    \\n    \").concat(aiResultsHtml?\"\\n    <div class=\\\"section ai-section page-break\\\">\\n        <h2>AI Analysis Results</h2>\\n        \".concat(aiResultsHtml,\"\\n    </div>\\n    \"):'',\"\\n    \\n    <div class=\\\"footer\\\">\\n        <p>Generated by QuickDiff React - Advanced Text Comparison Tool</p>\\n    </div>\\n    \\n    <div class=\\\"no-print\\\" style=\\\"text-align: center; margin-top: 30px; padding: 20px; background: #f0f0f0; border-radius: 5px;\\\">\\n        <h3>Export Options</h3>\\n        <p>Use your browser's print function to save as PDF</p>\\n        <button onclick=\\\"window.print()\\\" style=\\\"padding: 12px 24px; background: #007bff; color: white; border: none; border-radius: 5px; cursor: pointer; font-size: 14px; margin: 5px;\\\">Print / Save as PDF</button>\\n        <button onclick=\\\"window.close()\\\" style=\\\"padding: 12px 24px; background: #6c757d; color: white; border: none; border-radius: 5px; cursor: pointer; font-size: 14px; margin: 5px;\\\">Close Window</button>\\n    </div>\\n</body>\\n</html>\");printWindow.document.write(printContent);printWindow.document.close();setTimeout(()=>{printWindow.print();},500);}downloadFile(content,filename,mimeType){const blob=new Blob([content],{type:mimeType});const url=URL.createObjectURL(blob);const a=document.createElement('a');a.href=url;a.download=filename;document.body.appendChild(a);a.click();document.body.removeChild(a);URL.revokeObjectURL(url);}escapeHtml(text){const div=document.createElement('div');div.textContent=text;return div.innerHTML;}stripHtml(html){const div=document.createElement('div');div.innerHTML=html;return div.textContent||div.innerText||'';}}","map":{"version":3,"names":["ExportUtils","copyResults","originalText","changedText","aiResults","textToCopy","concat","repeat","length","forEach","result","title","stripHtml","content","navigator","clipboard","writeText","Promise","resolve","error","textArea","document","createElement","value","body","appendChild","select","execCommand","removeChild","exportToTxt","diffResult","Date","toLocaleString","stats","linesAdded","wordsAdded","charactersAdded","linesRemoved","wordsRemoved","charactersRemoved","linesModified","downloadFile","exportToHtml","aiResultsHtml","map","join","htmlContent","escapeHtml","exportToMarkdown","mdContent","exportToPdf","window","jspdf","jsPDF","console","log","exportToPdfFallback","doc","yPosition","pageWidth","internal","pageSize","getWidth","pageHeight","getHeight","margin","contentWidth","checkPageBreak","requiredSpace","arguments","undefined","addPage","setFontSize","setFont","text","setLineWidth","line","originalLines","splitTextToSize","i","changedLines","cleanContent","contentLines","save","printWindow","open","printContent","write","close","setTimeout","print","filename","mimeType","blob","Blob","type","url","URL","createObjectURL","a","href","download","click","revokeObjectURL","div","textContent","innerHTML","html","innerText"],"sources":["C:/Users/Joem/quickdiff-react/src/utils/ExportUtils.js"],"sourcesContent":["export class ExportUtils {\r\n  async copyResults(originalText, changedText, aiResults) {\r\n    let textToCopy = `QUICKDIFF COMPARISON RESULTS\\n${'='.repeat(50)}\\n\\n`;\r\n    textToCopy += `Original Text:\\n${'-'.repeat(20)}\\n${originalText}\\n\\n`;\r\n    textToCopy += `Changed Text:\\n${'-'.repeat(20)}\\n${changedText}\\n\\n`;\r\n    \r\n    if (aiResults && aiResults.length > 0) {\r\n      textToCopy += `AI ANALYSIS RESULTS\\n${'='.repeat(50)}\\n\\n`;\r\n      aiResults.forEach(result => {\r\n        textToCopy += `${result.title}\\n${'-'.repeat(result.title.length)}\\n`;\r\n        textToCopy += this.stripHtml(result.content) + '\\n\\n';\r\n      });\r\n    }\r\n    \r\n    try {\r\n      await navigator.clipboard.writeText(textToCopy);\r\n      return Promise.resolve();\r\n    } catch (error) {\r\n      // Fallback for older browsers\r\n      const textArea = document.createElement('textarea');\r\n      textArea.value = textToCopy;\r\n      document.body.appendChild(textArea);\r\n      textArea.select();\r\n      document.execCommand('copy');\r\n      document.body.removeChild(textArea);\r\n      return Promise.resolve();\r\n    }\r\n  }\r\n\r\n  exportToTxt(originalText, changedText, diffResult, aiResults) {\r\n    let content = `QUICKDIFF COMPARISON RESULTS\\n${'='.repeat(50)}\\n\\n`;\r\n    content += `Generated on: ${new Date().toLocaleString()}\\n\\n`;\r\n    content += `Original Text:\\n${'-'.repeat(20)}\\n${originalText}\\n\\n`;\r\n    content += `Changed Text:\\n${'-'.repeat(20)}\\n${changedText}\\n\\n`;\r\n    \r\n    // Add comparison summary\r\n    if (diffResult && diffResult.stats) {\r\n      const stats = diffResult.stats;\r\n      content += `COMPARISON SUMMARY\\n${'-'.repeat(20)}\\n`;\r\n      content += `Added: ${stats.linesAdded || stats.wordsAdded || stats.charactersAdded || 0}\\n`;\r\n      content += `Removed: ${stats.linesRemoved || stats.wordsRemoved || stats.charactersRemoved || 0}\\n`;\r\n      content += `Modified: ${stats.linesModified || 0}\\n\\n`;\r\n    }\r\n    \r\n    if (aiResults && aiResults.length > 0) {\r\n      content += `AI ANALYSIS RESULTS\\n${'='.repeat(50)}\\n\\n`;\r\n      aiResults.forEach(result => {\r\n        content += `${result.title}\\n${'-'.repeat(result.title.length)}\\n`;\r\n        content += this.stripHtml(result.content) + '\\n\\n';\r\n      });\r\n    }\r\n    \r\n    this.downloadFile(content, 'quickdiff-comparison.txt', 'text/plain');\r\n  }\r\n\r\n  exportToHtml(originalText, changedText, diffResult, aiResults) {\r\n    const aiResultsHtml = aiResults && aiResults.length > 0 \r\n      ? aiResults.map(result => `\r\n          <div class=\"ai-card\">\r\n            <div class=\"ai-card-header\">${result.title}</div>\r\n            <div class=\"ai-card-content\">${result.content}</div>\r\n          </div>\r\n        `).join('')\r\n      : '';\r\n\r\n    const htmlContent = `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>QuickDiff - Text Comparison Results</title>\r\n    <style>\r\n        body { \r\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; \r\n            line-height: 1.6; \r\n            margin: 0; \r\n            padding: 20px; \r\n            background: #f8f9fa; \r\n        }\r\n        .container { max-width: 1200px; margin: 0 auto; background: white; padding: 30px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }\r\n        .header { text-align: center; margin-bottom: 30px; padding-bottom: 20px; border-bottom: 2px solid #4facfe; }\r\n        .header h1 { color: #2c3e50; margin: 0; }\r\n        .timestamp { color: #6c757d; font-size: 0.9rem; margin-top: 10px; }\r\n        .text-section { margin: 20px 0; }\r\n        .text-section h2 { color: #4facfe; border-bottom: 1px solid #e9ecef; padding-bottom: 10px; }\r\n        .text-content { background: #f8f9fa; padding: 15px; border-radius: 5px; white-space: pre-wrap; font-family: monospace; }\r\n        .ai-section { margin-top: 40px; }\r\n        .ai-section h2 { color: #000000; border-bottom: 2px solid #B6B09F; padding-bottom: 10px; }\r\n        .ai-card { background: #F2F2F2; border: 1px solid #B6B09F; border-radius: 8px; margin: 20px 0; overflow: hidden; }\r\n        .ai-card-header { background: #000000; color: white; padding: 15px 20px; font-weight: 600; }\r\n        .ai-card-content { padding: 20px; }\r\n    </style>\r\n</head>\r\n<body>\r\n    <div class=\"container\">\r\n        <div class=\"header\">\r\n            <h1>⚡ QuickDiff - Text Comparison Results</h1>\r\n            <div class=\"timestamp\">Generated on ${new Date().toLocaleString()}</div>\r\n        </div>\r\n        \r\n        <div class=\"text-section\">\r\n            <h2>📄 Original Text</h2>\r\n            <div class=\"text-content\">${this.escapeHtml(originalText)}</div>\r\n        </div>\r\n        \r\n        <div class=\"text-section\">\r\n            <h2>📝 Changed Text</h2>\r\n            <div class=\"text-content\">${this.escapeHtml(changedText)}</div>\r\n        </div>\r\n        \r\n        ${aiResultsHtml ? `\r\n        <div class=\"ai-section\">\r\n            <h2>🧠 AI Analysis Results</h2>\r\n            ${aiResultsHtml}\r\n        </div>\r\n        ` : ''}\r\n        \r\n        <div style=\"text-align: center; margin-top: 40px; padding-top: 20px; border-top: 1px solid #e9ecef; color: #6c757d; font-size: 0.9rem;\">\r\n            Generated by QuickDiff React - Advanced Text Comparison Tool\r\n        </div>\r\n    </div>\r\n</body>\r\n</html>`;\r\n    \r\n    this.downloadFile(htmlContent, 'quickdiff-comparison.html', 'text/html');\r\n  }\r\n\r\n  exportToMarkdown(originalText, changedText, diffResult, aiResults) {\r\n    let mdContent = `# ⚡ QuickDiff - Text Comparison Results\r\n\r\n*Generated on: ${new Date().toLocaleString()}*\r\n\r\n---\r\n\r\n## 📄 Original Text\r\n\r\n\\`\\`\\`\r\n${originalText}\r\n\\`\\`\\`\r\n\r\n## 📝 Changed Text\r\n\r\n\\`\\`\\`\r\n${changedText}\r\n\\`\\`\\`\r\n\r\n## 📊 Comparison Summary\r\n\r\n`;\r\n    \r\n    if (diffResult && diffResult.stats) {\r\n      const stats = diffResult.stats;\r\n      mdContent += `| Metric | Count |\r\n|--------|-------|\r\n| Added | ${stats.linesAdded || stats.wordsAdded || stats.charactersAdded || 0} |\r\n| Removed | ${stats.linesRemoved || stats.wordsRemoved || stats.charactersRemoved || 0} |\r\n| Modified | ${stats.linesModified || 0} |\r\n\r\n`;\r\n    }\r\n    \r\n    if (aiResults && aiResults.length > 0) {\r\n      mdContent += `---\r\n\r\n## 🧠 AI Analysis Results\r\n\r\n`;\r\n      aiResults.forEach(result => {\r\n        mdContent += `### ${result.title}\r\n\r\n${this.stripHtml(result.content)}\r\n\r\n`;\r\n      });\r\n    }\r\n    \r\n    mdContent += `\r\n---\r\n\r\n*Generated by QuickDiff React - Advanced Text Comparison Tool*`;\r\n    \r\n    this.downloadFile(mdContent, 'quickdiff-comparison.md', 'text/markdown');\r\n  }\r\n\r\n  exportToPdf(originalText, changedText, diffResult, aiResults) {\r\n    // Check if jsPDF is available\r\n    if (typeof window.jspdf === 'undefined' && typeof window.jsPDF === 'undefined') {\r\n      console.log('jsPDF not available, using fallback method');\r\n      this.exportToPdfFallback(originalText, changedText, diffResult, aiResults);\r\n      return;\r\n    }\r\n    \r\n    const { jsPDF } = window.jspdf || window;\r\n    const doc = new jsPDF();\r\n    \r\n    let yPosition = 20;\r\n    const pageWidth = doc.internal.pageSize.getWidth();\r\n    const pageHeight = doc.internal.pageSize.getHeight();\r\n    const margin = 20;\r\n    const contentWidth = pageWidth - (margin * 2);\r\n    \r\n    // Helper function to add new page if needed\r\n    const checkPageBreak = (requiredSpace = 20) => {\r\n      if (yPosition + requiredSpace > pageHeight - margin) {\r\n        doc.addPage();\r\n        yPosition = margin;\r\n        return true;\r\n      }\r\n      return false;\r\n    };\r\n    \r\n    // Title\r\n    doc.setFontSize(16);\r\n    doc.setFont('helvetica', 'bold');\r\n    doc.text('QuickDiff React - Text Comparison Results', margin, yPosition);\r\n    yPosition += 12;\r\n    \r\n    // Timestamp\r\n    doc.setFontSize(10);\r\n    doc.setFont('helvetica', 'normal');\r\n    doc.text(`Generated on: ${new Date().toLocaleString()}`, margin, yPosition);\r\n    yPosition += 15;\r\n    \r\n    // Add separator line\r\n    doc.setLineWidth(0.5);\r\n    doc.line(margin, yPosition, pageWidth - margin, yPosition);\r\n    yPosition += 15;\r\n    \r\n    // Original Text Section\r\n    checkPageBreak(30);\r\n    doc.setFontSize(12);\r\n    doc.setFont('helvetica', 'bold');\r\n    doc.text('Original Text:', margin, yPosition);\r\n    yPosition += 8;\r\n    \r\n    doc.setFontSize(9);\r\n    doc.setFont('courier', 'normal');\r\n    const originalLines = doc.splitTextToSize(originalText || 'No content provided', contentWidth);\r\n    \r\n    for (let i = 0; i < originalLines.length; i++) {\r\n      checkPageBreak(6);\r\n      doc.text(originalLines[i], margin, yPosition);\r\n      yPosition += 4;\r\n    }\r\n    yPosition += 10;\r\n    \r\n    // Changed Text Section\r\n    checkPageBreak(30);\r\n    doc.setFontSize(12);\r\n    doc.setFont('helvetica', 'bold');\r\n    doc.text('Changed Text:', margin, yPosition);\r\n    yPosition += 8;\r\n    \r\n    doc.setFontSize(9);\r\n    doc.setFont('courier', 'normal');\r\n    const changedLines = doc.splitTextToSize(changedText || 'No content provided', contentWidth);\r\n    \r\n    for (let i = 0; i < changedLines.length; i++) {\r\n      checkPageBreak(6);\r\n      doc.text(changedLines[i], margin, yPosition);\r\n      yPosition += 4;\r\n    }\r\n    yPosition += 15;\r\n    \r\n    // Add AI results if available\r\n    if (aiResults && aiResults.length > 0) {\r\n      checkPageBreak(30);\r\n      \r\n      doc.setFontSize(12);\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.text('AI Analysis Results:', margin, yPosition);\r\n      yPosition += 10;\r\n      \r\n      aiResults.forEach(result => {\r\n        checkPageBreak(20);\r\n        \r\n        doc.setFontSize(11);\r\n        doc.setFont('helvetica', 'bold');\r\n        doc.text(result.title, margin, yPosition);\r\n        yPosition += 8;\r\n        \r\n        doc.setFontSize(9);\r\n        doc.setFont('helvetica', 'normal');\r\n        \r\n        const cleanContent = this.stripHtml(result.content);\r\n        const contentLines = doc.splitTextToSize(cleanContent, contentWidth);\r\n        \r\n        for (let i = 0; i < contentLines.length; i++) {\r\n          checkPageBreak(5);\r\n          doc.text(contentLines[i], margin, yPosition);\r\n          yPosition += 4;\r\n        }\r\n        yPosition += 10;\r\n      });\r\n    }\r\n    \r\n    doc.save('quickdiff-react-comparison.pdf');\r\n  }\r\n\r\n  exportToPdfFallback(originalText, changedText, diffResult, aiResults) {\r\n    const aiResultsHtml = aiResults && aiResults.length > 0 \r\n      ? aiResults.map(result => `\r\n          <div class=\"ai-card\">\r\n            <div class=\"ai-card-header\">${result.title}</div>\r\n            <div class=\"ai-card-content\">${this.stripHtml(result.content)}</div>\r\n          </div>\r\n        `).join('')\r\n      : '';\r\n\r\n    const printWindow = window.open('', '_blank');\r\n    const printContent = `\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>QuickDiff React - Text Comparison Results</title>\r\n    <style>\r\n        @media print {\r\n            body { margin: 0; padding: 20px; font-family: 'Times New Roman', serif; font-size: 12pt; line-height: 1.4; color: #000; }\r\n            .no-print { display: none !important; }\r\n            .page-break { page-break-before: always; }\r\n            .section { margin: 15px 0; }\r\n            h1, h2, h3 { page-break-after: avoid; }\r\n            .text-content { page-break-inside: avoid; }\r\n        }\r\n        \r\n        body { font-family: 'Times New Roman', serif; line-height: 1.5; margin: 20px; color: #333; font-size: 12pt; }\r\n        .header { text-align: center; margin-bottom: 30px; border-bottom: 2px solid #000; padding-bottom: 20px; }\r\n        .header h1 { font-size: 18pt; font-weight: bold; margin: 0 0 10px 0; color: #000; }\r\n        .header p { font-size: 10pt; margin: 5px 0; color: #666; }\r\n        .section { margin: 20px 0; page-break-inside: avoid; }\r\n        .section h2 { font-size: 14pt; font-weight: bold; color: #000; border-bottom: 1px solid #ccc; padding-bottom: 5px; margin: 15px 0 10px 0; }\r\n        .text-content { background: #f9f9f9; padding: 15px; border: 1px solid #ddd; border-radius: 3px; white-space: pre-wrap; font-family: 'Courier New', monospace; font-size: 10pt; line-height: 1.3; margin: 10px 0; }\r\n        .ai-card { margin: 15px 0; border: 1px solid #ddd; border-radius: 3px; overflow: hidden; page-break-inside: avoid; }\r\n        .ai-card-header { background: #f0f0f0; color: #000; padding: 10px 15px; font-weight: bold; font-size: 12pt; border-bottom: 1px solid #ddd; }\r\n        .ai-card-content { padding: 15px; font-size: 11pt; line-height: 1.4; }\r\n        .footer { margin-top: 30px; padding-top: 15px; border-top: 1px solid #ccc; text-align: center; font-size: 10pt; color: #666; }\r\n    </style>\r\n</head>\r\n<body>\r\n    <div class=\"header\">\r\n        <h1>QuickDiff React - Text Comparison Results</h1>\r\n        <p>Generated on: ${new Date().toLocaleString()}</p>\r\n    </div>\r\n    \r\n    <div class=\"section\">\r\n        <h2>Original Text</h2>\r\n        <div class=\"text-content\">${this.escapeHtml(originalText || 'No content provided')}</div>\r\n    </div>\r\n    \r\n    <div class=\"section\">\r\n        <h2>Changed Text</h2>\r\n        <div class=\"text-content\">${this.escapeHtml(changedText || 'No content provided')}</div>\r\n    </div>\r\n    \r\n    ${aiResultsHtml ? `\r\n    <div class=\"section ai-section page-break\">\r\n        <h2>AI Analysis Results</h2>\r\n        ${aiResultsHtml}\r\n    </div>\r\n    ` : ''}\r\n    \r\n    <div class=\"footer\">\r\n        <p>Generated by QuickDiff React - Advanced Text Comparison Tool</p>\r\n    </div>\r\n    \r\n    <div class=\"no-print\" style=\"text-align: center; margin-top: 30px; padding: 20px; background: #f0f0f0; border-radius: 5px;\">\r\n        <h3>Export Options</h3>\r\n        <p>Use your browser's print function to save as PDF</p>\r\n        <button onclick=\"window.print()\" style=\"padding: 12px 24px; background: #007bff; color: white; border: none; border-radius: 5px; cursor: pointer; font-size: 14px; margin: 5px;\">Print / Save as PDF</button>\r\n        <button onclick=\"window.close()\" style=\"padding: 12px 24px; background: #6c757d; color: white; border: none; border-radius: 5px; cursor: pointer; font-size: 14px; margin: 5px;\">Close Window</button>\r\n    </div>\r\n</body>\r\n</html>`;\r\n    \r\n    printWindow.document.write(printContent);\r\n    printWindow.document.close();\r\n    \r\n    setTimeout(() => {\r\n      printWindow.print();\r\n    }, 500);\r\n  }\r\n\r\n  downloadFile(content, filename, mimeType) {\r\n    const blob = new Blob([content], { type: mimeType });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = filename;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n  }\r\n\r\n  escapeHtml(text) {\r\n    const div = document.createElement('div');\r\n    div.textContent = text;\r\n    return div.innerHTML;\r\n  }\r\n\r\n  stripHtml(html) {\r\n    const div = document.createElement('div');\r\n    div.innerHTML = html;\r\n    return div.textContent || div.innerText || '';\r\n  }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}