{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joem\\\\quickdiff-react\\\\src\\\\components\\\\DiffView.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiffView = ({\n  diffResult,\n  viewMode,\n  currentChangeIndex\n}) => {\n  if (!diffResult) return null;\n  const renderDiffLine = (line, lineNumber, type = '') => {\n    const isCurrentChange = currentChangeIndex >= 0 && line.isCurrentChange;\n    const className = `diff-line ${type} ${isCurrentChange ? 'current-change' : ''}`.trim();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      \"data-line-number\": lineNumber,\n      \"data-line-type\": type,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"line-number\",\n        children: lineNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"line-content\",\n        dangerouslySetInnerHTML: {\n          __html: line.content || line\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, `${type}-${lineNumber}`, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  };\n  if (viewMode === 'side-by-side') {\n    var _diffResult$originalL, _diffResult$changedLi;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"diff-container side-by-side\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"diff-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Original Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"diff-content\",\n          children: (_diffResult$originalL = diffResult.originalLines) === null || _diffResult$originalL === void 0 ? void 0 : _diffResult$originalL.map((line, index) => renderDiffLine(line, index + 1, line.type))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"diff-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Changed Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"diff-content\",\n          children: (_diffResult$changedLi = diffResult.changedLines) === null || _diffResult$changedLi === void 0 ? void 0 : _diffResult$changedLi.map((line, index) => renderDiffLine(line, index + 1, line.type))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Inline view - combine both original and changed lines\n  const createUnifiedView = () => {\n    var _diffResult$originalL2, _diffResult$changedLi2;\n    const unified = [];\n    const maxLines = Math.max(((_diffResult$originalL2 = diffResult.originalLines) === null || _diffResult$originalL2 === void 0 ? void 0 : _diffResult$originalL2.length) || 0, ((_diffResult$changedLi2 = diffResult.changedLines) === null || _diffResult$changedLi2 === void 0 ? void 0 : _diffResult$changedLi2.length) || 0);\n    for (let i = 0; i < maxLines; i++) {\n      var _diffResult$originalL3, _diffResult$changedLi3;\n      const originalLine = (_diffResult$originalL3 = diffResult.originalLines) === null || _diffResult$originalL3 === void 0 ? void 0 : _diffResult$originalL3[i];\n      const changedLine = (_diffResult$changedLi3 = diffResult.changedLines) === null || _diffResult$changedLi3 === void 0 ? void 0 : _diffResult$changedLi3[i];\n      if (originalLine && originalLine.type === 'removed') {\n        unified.push(originalLine);\n      }\n      if (changedLine && changedLine.type === 'added') {\n        unified.push(changedLine);\n      }\n      if (originalLine && (!originalLine.type || originalLine.type === 'unchanged')) {\n        unified.push(originalLine);\n      }\n    }\n    return unified;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"diff-container inline\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"diff-column full-width\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Unified Diff View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"diff-content\",\n        children: createUnifiedView().map((line, index) => renderDiffLine(line, index + 1, line.type))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_c = DiffView;\nexport default DiffView;\nvar _c;\n$RefreshReg$(_c, \"DiffView\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","DiffView","diffResult","viewMode","currentChangeIndex","renderDiffLine","line","lineNumber","type","isCurrentChange","className","trim","children","fileName","_jsxFileName","columnNumber","dangerouslySetInnerHTML","__html","content","_diffResult$originalL","_diffResult$changedLi","originalLines","map","index","changedLines","createUnifiedView","_diffResult$originalL2","_diffResult$changedLi2","unified","maxLines","Math","max","length","i","_diffResult$originalL3","_diffResult$changedLi3","originalLine","changedLine","push","_c","$RefreshReg$"],"sources":["C:/Users/Joem/quickdiff-react/src/components/DiffView.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst DiffView = ({ diffResult, viewMode, currentChangeIndex }) => {\r\n  if (!diffResult) return null;\r\n\r\n  const renderDiffLine = (line, lineNumber, type = '') => {\r\n    const isCurrentChange = currentChangeIndex >= 0 && line.isCurrentChange;\r\n    const className = `diff-line ${type} ${isCurrentChange ? 'current-change' : ''}`.trim();\r\n\r\n    return (\r\n      <div \r\n        key={`${type}-${lineNumber}`} \r\n        className={className}\r\n        data-line-number={lineNumber}\r\n        data-line-type={type}\r\n      >\r\n        <span className=\"line-number\">{lineNumber}</span>\r\n        <span \r\n          className=\"line-content\"\r\n          dangerouslySetInnerHTML={{ __html: line.content || line }}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (viewMode === 'side-by-side') {\r\n    return (\r\n      <div className=\"diff-container side-by-side\">\r\n        <div className=\"diff-column\">\r\n          <h3>Original Text</h3>\r\n          <div className=\"diff-content\">\r\n            {diffResult.originalLines?.map((line, index) => \r\n              renderDiffLine(line, index + 1, line.type)\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"diff-column\">\r\n          <h3>Changed Text</h3>\r\n          <div className=\"diff-content\">\r\n            {diffResult.changedLines?.map((line, index) => \r\n              renderDiffLine(line, index + 1, line.type)\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Inline view - combine both original and changed lines\r\n  const createUnifiedView = () => {\r\n    const unified = [];\r\n    const maxLines = Math.max(\r\n      diffResult.originalLines?.length || 0,\r\n      diffResult.changedLines?.length || 0\r\n    );\r\n    \r\n    for (let i = 0; i < maxLines; i++) {\r\n      const originalLine = diffResult.originalLines?.[i];\r\n      const changedLine = diffResult.changedLines?.[i];\r\n      \r\n      if (originalLine && originalLine.type === 'removed') {\r\n        unified.push(originalLine);\r\n      }\r\n      if (changedLine && changedLine.type === 'added') {\r\n        unified.push(changedLine);\r\n      }\r\n      if (originalLine && (!originalLine.type || originalLine.type === 'unchanged')) {\r\n        unified.push(originalLine);\r\n      }\r\n    }\r\n    \r\n    return unified;\r\n  };\r\n\r\n  return (\r\n    <div className=\"diff-container inline\">\r\n      <div className=\"diff-column full-width\">\r\n        <h3>Unified Diff View</h3>\r\n        <div className=\"diff-content\">\r\n          {createUnifiedView().map((line, index) => \r\n            renderDiffLine(line, index + 1, line.type)\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiffView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}