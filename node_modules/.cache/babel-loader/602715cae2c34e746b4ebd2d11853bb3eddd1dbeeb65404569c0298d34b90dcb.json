{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joem\\\\quickdiff-react\\\\src\\\\components\\\\DiffView.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiffView = ({\n  diffResult,\n  viewMode,\n  currentChangeIndex\n}) => {\n  var _diffResult$unifiedLi;\n  if (!diffResult) return null;\n  const renderDiffLine = (line, lineNumber, type = '') => {\n    const isCurrentChange = currentChangeIndex >= 0 && line.isCurrentChange;\n    const className = `diff-line ${type} ${isCurrentChange ? 'current-change' : ''}`.trim();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      \"data-line-number\": lineNumber,\n      \"data-line-type\": type,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"line-number\",\n        children: lineNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"line-content\",\n        dangerouslySetInnerHTML: {\n          __html: line.content || line\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, `${type}-${lineNumber}`, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  };\n  if (viewMode === 'side-by-side') {\n    var _diffResult$originalL, _diffResult$changedLi;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"diff-container side-by-side\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"diff-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Original Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"diff-content\",\n          children: (_diffResult$originalL = diffResult.originalLines) === null || _diffResult$originalL === void 0 ? void 0 : _diffResult$originalL.map((line, index) => renderDiffLine(line, index + 1, line.type))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"diff-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Changed Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"diff-content\",\n          children: (_diffResult$changedLi = diffResult.changedLines) === null || _diffResult$changedLi === void 0 ? void 0 : _diffResult$changedLi.map((line, index) => renderDiffLine(line, index + 1, line.type))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Inline view\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"diff-container inline\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"diff-column full-width\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Unified Diff View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"diff-content\",\n        children: (_diffResult$unifiedLi = diffResult.unifiedLines) === null || _diffResult$unifiedLi === void 0 ? void 0 : _diffResult$unifiedLi.map((line, index) => renderDiffLine(line, index + 1, line.type))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_c = DiffView;\nexport default DiffView;\nvar _c;\n$RefreshReg$(_c, \"DiffView\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","DiffView","diffResult","viewMode","currentChangeIndex","_diffResult$unifiedLi","renderDiffLine","line","lineNumber","type","isCurrentChange","className","trim","children","fileName","_jsxFileName","columnNumber","dangerouslySetInnerHTML","__html","content","_diffResult$originalL","_diffResult$changedLi","originalLines","map","index","changedLines","unifiedLines","_c","$RefreshReg$"],"sources":["C:/Users/Joem/quickdiff-react/src/components/DiffView.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst DiffView = ({ diffResult, viewMode, currentChangeIndex }) => {\r\n  if (!diffResult) return null;\r\n\r\n  const renderDiffLine = (line, lineNumber, type = '') => {\r\n    const isCurrentChange = currentChangeIndex >= 0 && line.isCurrentChange;\r\n    const className = `diff-line ${type} ${isCurrentChange ? 'current-change' : ''}`.trim();\r\n\r\n    return (\r\n      <div \r\n        key={`${type}-${lineNumber}`} \r\n        className={className}\r\n        data-line-number={lineNumber}\r\n        data-line-type={type}\r\n      >\r\n        <span className=\"line-number\">{lineNumber}</span>\r\n        <span \r\n          className=\"line-content\"\r\n          dangerouslySetInnerHTML={{ __html: line.content || line }}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (viewMode === 'side-by-side') {\r\n    return (\r\n      <div className=\"diff-container side-by-side\">\r\n        <div className=\"diff-column\">\r\n          <h3>Original Text</h3>\r\n          <div className=\"diff-content\">\r\n            {diffResult.originalLines?.map((line, index) => \r\n              renderDiffLine(line, index + 1, line.type)\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"diff-column\">\r\n          <h3>Changed Text</h3>\r\n          <div className=\"diff-content\">\r\n            {diffResult.changedLines?.map((line, index) => \r\n              renderDiffLine(line, index + 1, line.type)\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Inline view\r\n  return (\r\n    <div className=\"diff-container inline\">\r\n      <div className=\"diff-column full-width\">\r\n        <h3>Unified Diff View</h3>\r\n        <div className=\"diff-content\">\r\n          {diffResult.unifiedLines?.map((line, index) => \r\n            renderDiffLine(line, index + 1, line.type)\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiffView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}