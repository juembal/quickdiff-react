{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joem\\\\quickdiff-react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport './App.css';\nimport './user-guide.css';\nimport './user-guide.js';\nimport Header from './components/Header';\nimport SettingsPanel from './components/SettingsPanel';\nimport InputSection from './components/InputSection';\nimport Controls from './components/Controls';\nimport Legend from './components/Legend';\nimport Results from './components/Results';\nimport { DiffEngine } from './utils/DiffEngine';\nimport { ExportUtils } from './utils/ExportUtils';\nimport { AIEngine } from './utils/AIEngine';\nimport { NotificationProvider, useNotification } from './components/NotificationProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuickDiffApp() {\n  _s();\n  // State management\n  const [originalText, setOriginalText] = useState('');\n  const [changedText, setChangedText] = useState('');\n  const [diffResult, setDiffResult] = useState(null);\n  const [showResults, setShowResults] = useState(false);\n  const [theme, setTheme] = useState('light');\n  const [contrast, setContrast] = useState('normal');\n\n  // Settings state\n  const [settings, setSettings] = useState({\n    diffMode: 'line',\n    viewMode: 'side-by-side',\n    language: 'plaintext',\n    ignoreCase: false,\n    ignoreWhitespace: false,\n    ignorePunctuation: false,\n    livePreview: false\n  });\n\n  // AI state\n  const [aiResults, setAiResults] = useState([]);\n  const [showAiResults, setShowAiResults] = useState(false);\n\n  // Navigation state\n  const [changes, setChanges] = useState([]);\n  const [currentChangeIndex, setCurrentChangeIndex] = useState(-1);\n  const [minimapVisible, setMinimapVisible] = useState(false);\n\n  // Refs\n  const debounceTimer = useRef(null);\n  const diffEngine = useRef(new DiffEngine());\n  const exportUtils = useRef(new ExportUtils());\n  const aiEngine = useRef(new AIEngine());\n  const {\n    showNotification\n  } = useNotification();\n\n  // Load settings and theme on mount\n  useEffect(() => {\n    loadSettings();\n    loadTheme();\n  }, []);\n\n  // Initialize user guide\n  useEffect(() => {\n    const initUserGuide = () => {\n      if (window.QuickDiffUserGuide) {\n        if (!window.userGuideInitialized) {\n          new window.QuickDiffUserGuide();\n          window.userGuideInitialized = true;\n        }\n      } else {\n        // If the class isn't available yet, try again after a short delay\n        setTimeout(initUserGuide, 100);\n      }\n    };\n\n    // Small delay to ensure DOM is ready\n    setTimeout(initUserGuide, 200);\n  }, []);\n\n  // Auto-save settings when they change\n  useEffect(() => {\n    saveSettings();\n  }, [settings]);\n\n  // Live preview with debouncing\n  useEffect(() => {\n    if (settings.livePreview && (originalText.trim() || changedText.trim())) {\n      clearTimeout(debounceTimer.current);\n      debounceTimer.current = setTimeout(() => {\n        performComparison();\n      }, 500);\n    }\n    return () => clearTimeout(debounceTimer.current);\n  }, [originalText, changedText, settings.livePreview, settings.diffMode, settings.ignoreCase, settings.ignoreWhitespace, settings.ignorePunctuation]);\n\n  // Settings management\n  const loadSettings = () => {\n    try {\n      const savedSettings = localStorage.getItem('quickdiff_react_settings');\n      if (savedSettings) {\n        setSettings(prev => ({\n          ...prev,\n          ...JSON.parse(savedSettings)\n        }));\n      }\n    } catch (error) {\n      console.error('Error loading settings:', error);\n    }\n  };\n  const saveSettings = () => {\n    try {\n      localStorage.setItem('quickdiff_react_settings', JSON.stringify(settings));\n    } catch (error) {\n      console.error('Error saving settings:', error);\n    }\n  };\n  const loadTheme = () => {\n    const savedTheme = localStorage.getItem('quickdiff_theme') || 'light';\n    const savedContrast = localStorage.getItem('quickdiff_contrast') || 'normal';\n    setTheme(savedTheme);\n    setContrast(savedContrast);\n    document.documentElement.setAttribute('data-theme', savedTheme);\n    document.documentElement.setAttribute('data-contrast', savedContrast);\n  };\n\n  // Theme management\n  const toggleTheme = () => {\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n    setTheme(newTheme);\n    localStorage.setItem('quickdiff_theme', newTheme);\n    document.documentElement.setAttribute('data-theme', newTheme);\n    showNotification(`Switched to ${newTheme} theme`);\n  };\n  const toggleContrast = () => {\n    const newContrast = contrast === 'normal' ? 'high' : 'normal';\n    setContrast(newContrast);\n    localStorage.setItem('quickdiff_contrast', newContrast);\n    document.documentElement.setAttribute('data-contrast', newContrast);\n    showNotification(`${newContrast === 'high' ? 'Enabled' : 'Disabled'} high contrast mode`);\n  };\n\n  // Main comparison function\n  const performComparison = useCallback(() => {\n    if (!originalText.trim() && !changedText.trim()) {\n      showNotification('Please enter some text to compare');\n      return;\n    }\n    try {\n      const result = diffEngine.current.performComparison(originalText, changedText, settings);\n      console.log('Diff Result:', result); // Debug log\n      setDiffResult(result);\n      setShowResults(true);\n      collectChanges(result);\n\n      // Auto-scroll to results only if live preview is disabled\n      if (!settings.livePreview) {\n        setTimeout(() => {\n          const resultsElement = document.getElementById('results-section');\n          if (resultsElement) {\n            resultsElement.scrollIntoView({\n              behavior: 'smooth',\n              block: 'start'\n            });\n          }\n        }, 100);\n      }\n      showNotification('Comparison completed');\n    } catch (error) {\n      console.error('Comparison error:', error);\n      showNotification('Error performing comparison');\n    }\n  }, [originalText, changedText, settings, showNotification]);\n\n  // Collect changes for navigation\n  const collectChanges = result => {\n    if (!result) return;\n    const newChanges = [];\n\n    // Extract changes from originalLines (DiffEngine returns originalLines and changedLines)\n    if (result.originalLines) {\n      result.originalLines.forEach((line, index) => {\n        if (line.type && line.type !== 'unchanged' && line.type !== '') {\n          newChanges.push({\n            lineNumber: index + 1,\n            type: line.type,\n            content: line.content || '',\n            originalLineNumber: index + 1,\n            changedLineNumber: index + 1\n          });\n        }\n      });\n    }\n\n    // Also check changedLines for additional changes (like added lines)\n    if (result.changedLines) {\n      result.changedLines.forEach((line, index) => {\n        if (line.type && line.type !== 'unchanged' && line.type !== '') {\n          // Avoid duplicates by checking if we already have this change\n          const exists = newChanges.some(change => change.lineNumber === index + 1 && change.type === line.type);\n          if (!exists) {\n            newChanges.push({\n              lineNumber: index + 1,\n              type: line.type,\n              content: line.content || '',\n              originalLineNumber: index + 1,\n              changedLineNumber: index + 1\n            });\n          }\n        }\n      });\n    }\n\n    // Sort changes by line number\n    newChanges.sort((a, b) => a.lineNumber - b.lineNumber);\n    console.log('Collected Changes:', newChanges); // Debug log\n    setChanges(newChanges);\n    setCurrentChangeIndex(newChanges.length > 0 ? 0 : -1);\n    if (newChanges.length > 0) {\n      showNotification(`Found ${newChanges.length} changes`);\n    } else {\n      showNotification('No changes detected');\n    }\n  };\n\n  // Text manipulation functions\n  const clearAll = () => {\n    setOriginalText('');\n    setChangedText('');\n    setShowResults(false);\n    setDiffResult(null);\n    setAiResults([]);\n    setShowAiResults(false);\n    showNotification('All content cleared');\n  };\n  const swapTexts = () => {\n    const temp = originalText;\n    setOriginalText(changedText);\n    setChangedText(temp);\n    showNotification('Texts swapped');\n    if (settings.livePreview && (originalText.trim() || changedText.trim())) {\n      performComparison();\n    }\n  };\n\n  // File handling\n  const handleFileLoad = (file, target) => {\n    const reader = new FileReader();\n    reader.onload = e => {\n      const content = e.target.result;\n      if (target === 'original') {\n        setOriginalText(content);\n      } else {\n        setChangedText(content);\n      }\n      showNotification(`File loaded: ${file.name}`);\n    };\n    reader.readAsText(file);\n  };\n\n  // Export functions\n  const copyResults = () => {\n    exportUtils.current.copyResults(originalText, changedText, aiResults).then(() => showNotification('Results copied to clipboard')).catch(() => showNotification('Failed to copy results'));\n  };\n  const exportToTxt = () => {\n    exportUtils.current.exportToTxt(originalText, changedText, diffResult, aiResults);\n    showNotification('Exported as TXT file');\n  };\n  const exportToHtml = () => {\n    exportUtils.current.exportToHtml(originalText, changedText, diffResult, aiResults);\n    showNotification('Exported as HTML file');\n  };\n  const exportToMarkdown = () => {\n    exportUtils.current.exportToMarkdown(originalText, changedText, diffResult, aiResults);\n    showNotification('Exported as Markdown file');\n  };\n  const exportToPdf = () => {\n    exportUtils.current.exportToPdf(originalText, changedText, diffResult, aiResults);\n    showNotification('Exported as PDF file');\n  };\n\n  // AI functions\n  const generateAIAnalysis = type => {\n    if (!originalText.trim() && !changedText.trim()) {\n      showNotification('Please enter some text to analyze');\n      return;\n    }\n    const analysis = aiEngine.current.generateAnalysis(type, originalText, changedText);\n    setAiResults(prev => [...prev, analysis]);\n    setShowAiResults(true);\n    showNotification('AI analysis completed');\n  };\n  const clearAIResults = () => {\n    setAiResults([]);\n    setShowAiResults(false);\n    showNotification('AI results cleared');\n  };\n  const removeAICard = index => {\n    setAiResults(prev => prev.filter((_, i) => i !== index));\n    showNotification('AI analysis removed');\n\n    // Hide AI results section if no cards left\n    if (aiResults.length <= 1) {\n      setShowAiResults(false);\n    }\n  };\n\n  // Navigation functions\n  const navigateToPreviousChange = () => {\n    if (changes.length === 0) {\n      showNotification('No changes to navigate');\n      return;\n    }\n    const newIndex = currentChangeIndex > 0 ? currentChangeIndex - 1 : changes.length - 1;\n    setCurrentChangeIndex(newIndex);\n    scrollToChange(newIndex);\n  };\n  const navigateToNextChange = () => {\n    if (changes.length === 0) {\n      showNotification('No changes to navigate');\n      return;\n    }\n    const newIndex = currentChangeIndex < changes.length - 1 ? currentChangeIndex + 1 : 0;\n    setCurrentChangeIndex(newIndex);\n    scrollToChange(newIndex);\n  };\n  const scrollToChange = index => {\n    if (index < 0 || index >= changes.length) return;\n    const change = changes[index];\n\n    // Try multiple selectors to find the line\n    let lineElement = document.querySelector(`[data-line-number=\"${change.lineNumber}\"][data-line-type=\"${change.type}\"]`);\n    if (!lineElement) {\n      lineElement = document.querySelector(`[data-original-line=\"${change.lineNumber}\"]`);\n    }\n    if (!lineElement) {\n      lineElement = document.querySelector(`[data-line-number=\"${change.lineNumber}\"]`);\n    }\n    if (lineElement) {\n      // Remove previous highlights\n      document.querySelectorAll('.current-change').forEach(el => {\n        el.classList.remove('current-change');\n      });\n      lineElement.scrollIntoView({\n        behavior: 'smooth',\n        block: 'center'\n      });\n\n      // Highlight the current change temporarily\n      lineElement.classList.add('current-change');\n      setTimeout(() => {\n        lineElement.classList.remove('current-change');\n      }, 3000);\n      showNotification(`Navigated to change ${index + 1} of ${changes.length}: ${change.type}`);\n    } else {\n      showNotification(`Could not find change ${index + 1} (line ${change.lineNumber})`);\n    }\n  };\n  const toggleMinimap = () => {\n    setMinimapVisible(!minimapVisible);\n    showNotification(minimapVisible ? 'Minimap hidden' : 'Minimap shown');\n  };\n\n  // Keyboard shortcuts\n  useEffect(() => {\n    const handleKeyDown = e => {\n      // Don't trigger shortcuts when typing in text areas or input fields\n      if (e.target.tagName === 'TEXTAREA' || e.target.tagName === 'INPUT') {\n        return;\n      }\n      if (e.ctrlKey || e.metaKey) {\n        switch (e.key.toLowerCase()) {\n          case 'enter':\n            e.preventDefault();\n            performComparison();\n            showNotification('⌨️ Ctrl+Enter: Comparison started');\n            break;\n          case 'k':\n            e.preventDefault();\n            clearAll();\n            showNotification('⌨️ Ctrl+K: All content cleared');\n            break;\n          case 's':\n            e.preventDefault();\n            swapTexts();\n            showNotification('⌨️ Ctrl+S: Texts swapped');\n            break;\n          case 'c':\n            if (showResults) {\n              e.preventDefault();\n              copyResults();\n              showNotification('⌨️ Ctrl+C: Results copied');\n            }\n            break;\n          case 'd':\n            e.preventDefault();\n            toggleTheme();\n            showNotification('⌨️ Ctrl+D: Theme toggled');\n            break;\n          case 'h':\n            e.preventDefault();\n            toggleContrast();\n            showNotification('⌨️ Ctrl+H: Contrast toggled');\n            break;\n          case 'm':\n            e.preventDefault();\n            toggleMinimap();\n            showNotification('⌨️ Ctrl+M: Minimap toggled');\n            break;\n          default:\n            break;\n        }\n      }\n\n      // Handle other shortcuts\n      switch (e.key) {\n        case 'Escape':\n          if (showAiResults) {\n            clearAIResults();\n            showNotification('⌨️ Escape: AI results cleared');\n          }\n          break;\n        case 'ArrowUp':\n          if (e.ctrlKey) {\n            e.preventDefault();\n            navigateToPreviousChange();\n          }\n          break;\n        case 'ArrowDown':\n          if (e.ctrlKey) {\n            e.preventDefault();\n            navigateToNextChange();\n          }\n          break;\n        default:\n          break;\n      }\n    };\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [showResults, showAiResults, performComparison, clearAll, swapTexts, copyResults, toggleTheme, toggleContrast, toggleMinimap, clearAIResults, navigateToPreviousChange, navigateToNextChange]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quickdiff-app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onThemeToggle: toggleTheme,\n        onContrastToggle: toggleContrast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SettingsPanel, {\n        settings: settings,\n        onSettingsChange: setSettings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputSection, {\n        originalText: originalText,\n        changedText: changedText,\n        onOriginalTextChange: setOriginalText,\n        onChangedTextChange: setChangedText,\n        onFileLoad: handleFileLoad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {\n        onCompare: performComparison,\n        onClear: clearAll,\n        onSwap: swapTexts,\n        onCopy: copyResults,\n        onExportTxt: exportToTxt,\n        onExportHtml: exportToHtml,\n        onExportMd: exportToMarkdown,\n        onExportPdf: exportToPdf,\n        onAIAnalysis: generateAIAnalysis,\n        hasResults: showResults\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 9\n      }, this), showResults && /*#__PURE__*/_jsxDEV(Results, {\n        diffResult: diffResult,\n        settings: settings,\n        changes: changes,\n        currentChangeIndex: currentChangeIndex,\n        minimapVisible: minimapVisible,\n        onNavigatePrevious: navigateToPreviousChange,\n        onNavigateNext: navigateToNextChange,\n        onToggleMinimap: toggleMinimap,\n        onNavigateToChange: index => {\n          setCurrentChangeIndex(index);\n          scrollToChange(index);\n        },\n        aiResults: aiResults,\n        showAiResults: showAiResults,\n        onClearAIResults: clearAIResults,\n        onRemoveAICard: removeAICard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 474,\n    columnNumber: 5\n  }, this);\n}\n_s(QuickDiffApp, \"XlTsiOlUSS+FxSEi2HDTFVGrG7w=\", false, function () {\n  return [useNotification];\n});\n_c = QuickDiffApp;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(NotificationProvider, {\n    children: /*#__PURE__*/_jsxDEV(QuickDiffApp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 536,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"QuickDiffApp\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","Header","SettingsPanel","InputSection","Controls","Legend","Results","DiffEngine","ExportUtils","AIEngine","NotificationProvider","useNotification","jsxDEV","_jsxDEV","QuickDiffApp","_s","originalText","setOriginalText","changedText","setChangedText","diffResult","setDiffResult","showResults","setShowResults","theme","setTheme","contrast","setContrast","settings","setSettings","diffMode","viewMode","language","ignoreCase","ignoreWhitespace","ignorePunctuation","livePreview","aiResults","setAiResults","showAiResults","setShowAiResults","changes","setChanges","currentChangeIndex","setCurrentChangeIndex","minimapVisible","setMinimapVisible","debounceTimer","diffEngine","exportUtils","aiEngine","showNotification","loadSettings","loadTheme","initUserGuide","window","QuickDiffUserGuide","userGuideInitialized","setTimeout","saveSettings","trim","clearTimeout","current","performComparison","savedSettings","localStorage","getItem","prev","JSON","parse","error","console","setItem","stringify","savedTheme","savedContrast","document","documentElement","setAttribute","toggleTheme","newTheme","toggleContrast","newContrast","result","log","collectChanges","resultsElement","getElementById","scrollIntoView","behavior","block","newChanges","originalLines","forEach","line","index","type","push","lineNumber","content","originalLineNumber","changedLineNumber","changedLines","exists","some","change","sort","a","b","length","clearAll","swapTexts","temp","handleFileLoad","file","target","reader","FileReader","onload","e","name","readAsText","copyResults","then","catch","exportToTxt","exportToHtml","exportToMarkdown","exportToPdf","generateAIAnalysis","analysis","generateAnalysis","clearAIResults","removeAICard","filter","_","i","navigateToPreviousChange","newIndex","scrollToChange","navigateToNextChange","lineElement","querySelector","querySelectorAll","el","classList","remove","add","toggleMinimap","handleKeyDown","tagName","ctrlKey","metaKey","key","toLowerCase","preventDefault","addEventListener","removeEventListener","className","children","onThemeToggle","onContrastToggle","fileName","_jsxFileName","columnNumber","onSettingsChange","onOriginalTextChange","onChangedTextChange","onFileLoad","onCompare","onClear","onSwap","onCopy","onExportTxt","onExportHtml","onExportMd","onExportPdf","onAIAnalysis","hasResults","onNavigatePrevious","onNavigateNext","onToggleMinimap","onNavigateToChange","onClearAIResults","onRemoveAICard","_c","App","_c2","$RefreshReg$"],"sources":["C:/Users/Joem/quickdiff-react/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport './App.css';\r\nimport './user-guide.css';\r\nimport './user-guide.js';\r\nimport Header from './components/Header';\r\nimport SettingsPanel from './components/SettingsPanel';\r\nimport InputSection from './components/InputSection';\r\nimport Controls from './components/Controls';\r\nimport Legend from './components/Legend';\r\nimport Results from './components/Results';\r\nimport { DiffEngine } from './utils/DiffEngine';\r\nimport { ExportUtils } from './utils/ExportUtils';\r\nimport { AIEngine } from './utils/AIEngine';\r\nimport { NotificationProvider, useNotification } from './components/NotificationProvider';\r\n\r\nfunction QuickDiffApp() {\r\n  // State management\r\n  const [originalText, setOriginalText] = useState('');\r\n  const [changedText, setChangedText] = useState('');\r\n  const [diffResult, setDiffResult] = useState(null);\r\n  const [showResults, setShowResults] = useState(false);\r\n  const [theme, setTheme] = useState('light');\r\n  const [contrast, setContrast] = useState('normal');\r\n  \r\n  // Settings state\r\n  const [settings, setSettings] = useState({\r\n    diffMode: 'line',\r\n    viewMode: 'side-by-side',\r\n    language: 'plaintext',\r\n    ignoreCase: false,\r\n    ignoreWhitespace: false,\r\n    ignorePunctuation: false,\r\n    livePreview: false\r\n  });\r\n\r\n  // AI state\r\n  const [aiResults, setAiResults] = useState([]);\r\n  const [showAiResults, setShowAiResults] = useState(false);\r\n\r\n  // Navigation state\r\n  const [changes, setChanges] = useState([]);\r\n  const [currentChangeIndex, setCurrentChangeIndex] = useState(-1);\r\n  const [minimapVisible, setMinimapVisible] = useState(false);\r\n\r\n  // Refs\r\n  const debounceTimer = useRef(null);\r\n  const diffEngine = useRef(new DiffEngine());\r\n  const exportUtils = useRef(new ExportUtils());\r\n  const aiEngine = useRef(new AIEngine());\r\n  \r\n  const { showNotification } = useNotification();\r\n\r\n  // Load settings and theme on mount\r\n  useEffect(() => {\r\n    loadSettings();\r\n    loadTheme();\r\n  }, []);\r\n\r\n  // Initialize user guide\r\n  useEffect(() => {\r\n    const initUserGuide = () => {\r\n      if (window.QuickDiffUserGuide) {\r\n        if (!window.userGuideInitialized) {\r\n          new window.QuickDiffUserGuide();\r\n          window.userGuideInitialized = true;\r\n        }\r\n      } else {\r\n        // If the class isn't available yet, try again after a short delay\r\n        setTimeout(initUserGuide, 100);\r\n      }\r\n    };\r\n    \r\n    // Small delay to ensure DOM is ready\r\n    setTimeout(initUserGuide, 200);\r\n  }, []);\r\n\r\n  // Auto-save settings when they change\r\n  useEffect(() => {\r\n    saveSettings();\r\n  }, [settings]);\r\n\r\n  // Live preview with debouncing\r\n  useEffect(() => {\r\n    if (settings.livePreview && (originalText.trim() || changedText.trim())) {\r\n      clearTimeout(debounceTimer.current);\r\n      debounceTimer.current = setTimeout(() => {\r\n        performComparison();\r\n      }, 500);\r\n    }\r\n    \r\n    return () => clearTimeout(debounceTimer.current);\r\n  }, [originalText, changedText, settings.livePreview, settings.diffMode, settings.ignoreCase, settings.ignoreWhitespace, settings.ignorePunctuation]);\r\n\r\n  // Settings management\r\n  const loadSettings = () => {\r\n    try {\r\n      const savedSettings = localStorage.getItem('quickdiff_react_settings');\r\n      if (savedSettings) {\r\n        setSettings(prev => ({ ...prev, ...JSON.parse(savedSettings) }));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading settings:', error);\r\n    }\r\n  };\r\n\r\n  const saveSettings = () => {\r\n    try {\r\n      localStorage.setItem('quickdiff_react_settings', JSON.stringify(settings));\r\n    } catch (error) {\r\n      console.error('Error saving settings:', error);\r\n    }\r\n  };\r\n\r\n  const loadTheme = () => {\r\n    const savedTheme = localStorage.getItem('quickdiff_theme') || 'light';\r\n    const savedContrast = localStorage.getItem('quickdiff_contrast') || 'normal';\r\n    setTheme(savedTheme);\r\n    setContrast(savedContrast);\r\n    document.documentElement.setAttribute('data-theme', savedTheme);\r\n    document.documentElement.setAttribute('data-contrast', savedContrast);\r\n  };\r\n\r\n  // Theme management\r\n  const toggleTheme = () => {\r\n    const newTheme = theme === 'light' ? 'dark' : 'light';\r\n    setTheme(newTheme);\r\n    localStorage.setItem('quickdiff_theme', newTheme);\r\n    document.documentElement.setAttribute('data-theme', newTheme);\r\n    showNotification(`Switched to ${newTheme} theme`);\r\n  };\r\n\r\n  const toggleContrast = () => {\r\n    const newContrast = contrast === 'normal' ? 'high' : 'normal';\r\n    setContrast(newContrast);\r\n    localStorage.setItem('quickdiff_contrast', newContrast);\r\n    document.documentElement.setAttribute('data-contrast', newContrast);\r\n    showNotification(`${newContrast === 'high' ? 'Enabled' : 'Disabled'} high contrast mode`);\r\n  };\r\n\r\n  // Main comparison function\r\n  const performComparison = useCallback(() => {\r\n    if (!originalText.trim() && !changedText.trim()) {\r\n      showNotification('Please enter some text to compare');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const result = diffEngine.current.performComparison(\r\n        originalText,\r\n        changedText,\r\n        settings\r\n      );\r\n\r\n      console.log('Diff Result:', result); // Debug log\r\n      setDiffResult(result);\r\n      setShowResults(true);\r\n      collectChanges(result);\r\n      \r\n      // Auto-scroll to results only if live preview is disabled\r\n      if (!settings.livePreview) {\r\n        setTimeout(() => {\r\n          const resultsElement = document.getElementById('results-section');\r\n          if (resultsElement) {\r\n            resultsElement.scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n          }\r\n        }, 100);\r\n      }\r\n\r\n      showNotification('Comparison completed');\r\n    } catch (error) {\r\n      console.error('Comparison error:', error);\r\n      showNotification('Error performing comparison');\r\n    }\r\n  }, [originalText, changedText, settings, showNotification]);\r\n\r\n  // Collect changes for navigation\r\n  const collectChanges = (result) => {\r\n    if (!result) return;\r\n    \r\n    const newChanges = [];\r\n    \r\n    // Extract changes from originalLines (DiffEngine returns originalLines and changedLines)\r\n    if (result.originalLines) {\r\n      result.originalLines.forEach((line, index) => {\r\n        if (line.type && line.type !== 'unchanged' && line.type !== '') {\r\n          newChanges.push({\r\n            lineNumber: index + 1,\r\n            type: line.type,\r\n            content: line.content || '',\r\n            originalLineNumber: index + 1,\r\n            changedLineNumber: index + 1\r\n          });\r\n        }\r\n      });\r\n    }\r\n    \r\n    // Also check changedLines for additional changes (like added lines)\r\n    if (result.changedLines) {\r\n      result.changedLines.forEach((line, index) => {\r\n        if (line.type && line.type !== 'unchanged' && line.type !== '') {\r\n          // Avoid duplicates by checking if we already have this change\r\n          const exists = newChanges.some(change => \r\n            change.lineNumber === index + 1 && change.type === line.type\r\n          );\r\n          if (!exists) {\r\n            newChanges.push({\r\n              lineNumber: index + 1,\r\n              type: line.type,\r\n              content: line.content || '',\r\n              originalLineNumber: index + 1,\r\n              changedLineNumber: index + 1\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n    \r\n    // Sort changes by line number\r\n    newChanges.sort((a, b) => a.lineNumber - b.lineNumber);\r\n    \r\n    console.log('Collected Changes:', newChanges); // Debug log\r\n    setChanges(newChanges);\r\n    setCurrentChangeIndex(newChanges.length > 0 ? 0 : -1);\r\n    \r\n    if (newChanges.length > 0) {\r\n      showNotification(`Found ${newChanges.length} changes`);\r\n    } else {\r\n      showNotification('No changes detected');\r\n    }\r\n  };\r\n\r\n  // Text manipulation functions\r\n  const clearAll = () => {\r\n    setOriginalText('');\r\n    setChangedText('');\r\n    setShowResults(false);\r\n    setDiffResult(null);\r\n    setAiResults([]);\r\n    setShowAiResults(false);\r\n    showNotification('All content cleared');\r\n  };\r\n\r\n  const swapTexts = () => {\r\n    const temp = originalText;\r\n    setOriginalText(changedText);\r\n    setChangedText(temp);\r\n    showNotification('Texts swapped');\r\n    \r\n    if (settings.livePreview && (originalText.trim() || changedText.trim())) {\r\n      performComparison();\r\n    }\r\n  };\r\n\r\n  // File handling\r\n  const handleFileLoad = (file, target) => {\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      const content = e.target.result;\r\n      if (target === 'original') {\r\n        setOriginalText(content);\r\n      } else {\r\n        setChangedText(content);\r\n      }\r\n      showNotification(`File loaded: ${file.name}`);\r\n    };\r\n    reader.readAsText(file);\r\n  };\r\n\r\n  // Export functions\r\n  const copyResults = () => {\r\n    exportUtils.current.copyResults(originalText, changedText, aiResults)\r\n      .then(() => showNotification('Results copied to clipboard'))\r\n      .catch(() => showNotification('Failed to copy results'));\r\n  };\r\n\r\n  const exportToTxt = () => {\r\n    exportUtils.current.exportToTxt(originalText, changedText, diffResult, aiResults);\r\n    showNotification('Exported as TXT file');\r\n  };\r\n\r\n  const exportToHtml = () => {\r\n    exportUtils.current.exportToHtml(originalText, changedText, diffResult, aiResults);\r\n    showNotification('Exported as HTML file');\r\n  };\r\n\r\n  const exportToMarkdown = () => {\r\n    exportUtils.current.exportToMarkdown(originalText, changedText, diffResult, aiResults);\r\n    showNotification('Exported as Markdown file');\r\n  };\r\n\r\n  const exportToPdf = () => {\r\n    exportUtils.current.exportToPdf(originalText, changedText, diffResult, aiResults);\r\n    showNotification('Exported as PDF file');\r\n  };\r\n\r\n  // AI functions\r\n  const generateAIAnalysis = (type) => {\r\n    if (!originalText.trim() && !changedText.trim()) {\r\n      showNotification('Please enter some text to analyze');\r\n      return;\r\n    }\r\n\r\n    const analysis = aiEngine.current.generateAnalysis(type, originalText, changedText);\r\n    setAiResults(prev => [...prev, analysis]);\r\n    setShowAiResults(true);\r\n    showNotification('AI analysis completed');\r\n  };\r\n\r\n  const clearAIResults = () => {\r\n    setAiResults([]);\r\n    setShowAiResults(false);\r\n    showNotification('AI results cleared');\r\n  };\r\n\r\n  const removeAICard = (index) => {\r\n    setAiResults(prev => prev.filter((_, i) => i !== index));\r\n    showNotification('AI analysis removed');\r\n    \r\n    // Hide AI results section if no cards left\r\n    if (aiResults.length <= 1) {\r\n      setShowAiResults(false);\r\n    }\r\n  };\r\n\r\n  // Navigation functions\r\n  const navigateToPreviousChange = () => {\r\n    if (changes.length === 0) {\r\n      showNotification('No changes to navigate');\r\n      return;\r\n    }\r\n    \r\n    const newIndex = currentChangeIndex > 0 ? currentChangeIndex - 1 : changes.length - 1;\r\n    setCurrentChangeIndex(newIndex);\r\n    scrollToChange(newIndex);\r\n  };\r\n\r\n  const navigateToNextChange = () => {\r\n    if (changes.length === 0) {\r\n      showNotification('No changes to navigate');\r\n      return;\r\n    }\r\n    \r\n    const newIndex = currentChangeIndex < changes.length - 1 ? currentChangeIndex + 1 : 0;\r\n    setCurrentChangeIndex(newIndex);\r\n    scrollToChange(newIndex);\r\n  };\r\n\r\n  const scrollToChange = (index) => {\r\n    if (index < 0 || index >= changes.length) return;\r\n    \r\n    const change = changes[index];\r\n    \r\n    // Try multiple selectors to find the line\r\n    let lineElement = document.querySelector(`[data-line-number=\"${change.lineNumber}\"][data-line-type=\"${change.type}\"]`);\r\n    \r\n    if (!lineElement) {\r\n      lineElement = document.querySelector(`[data-original-line=\"${change.lineNumber}\"]`);\r\n    }\r\n    \r\n    if (!lineElement) {\r\n      lineElement = document.querySelector(`[data-line-number=\"${change.lineNumber}\"]`);\r\n    }\r\n    \r\n    if (lineElement) {\r\n      // Remove previous highlights\r\n      document.querySelectorAll('.current-change').forEach(el => {\r\n        el.classList.remove('current-change');\r\n      });\r\n      \r\n      lineElement.scrollIntoView({ \r\n        behavior: 'smooth', \r\n        block: 'center' \r\n      });\r\n      \r\n      // Highlight the current change temporarily\r\n      lineElement.classList.add('current-change');\r\n      setTimeout(() => {\r\n        lineElement.classList.remove('current-change');\r\n      }, 3000);\r\n      \r\n      showNotification(`Navigated to change ${index + 1} of ${changes.length}: ${change.type}`);\r\n    } else {\r\n      showNotification(`Could not find change ${index + 1} (line ${change.lineNumber})`);\r\n    }\r\n  };\r\n\r\n  const toggleMinimap = () => {\r\n    setMinimapVisible(!minimapVisible);\r\n    showNotification(minimapVisible ? 'Minimap hidden' : 'Minimap shown');\r\n  };\r\n\r\n  // Keyboard shortcuts\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      // Don't trigger shortcuts when typing in text areas or input fields\r\n      if (e.target.tagName === 'TEXTAREA' || e.target.tagName === 'INPUT') {\r\n        return;\r\n      }\r\n      \r\n      if (e.ctrlKey || e.metaKey) {\r\n        switch (e.key.toLowerCase()) {\r\n          case 'enter':\r\n            e.preventDefault();\r\n            performComparison();\r\n            showNotification('⌨️ Ctrl+Enter: Comparison started');\r\n            break;\r\n          case 'k':\r\n            e.preventDefault();\r\n            clearAll();\r\n            showNotification('⌨️ Ctrl+K: All content cleared');\r\n            break;\r\n          case 's':\r\n            e.preventDefault();\r\n            swapTexts();\r\n            showNotification('⌨️ Ctrl+S: Texts swapped');\r\n            break;\r\n          case 'c':\r\n            if (showResults) {\r\n              e.preventDefault();\r\n              copyResults();\r\n              showNotification('⌨️ Ctrl+C: Results copied');\r\n            }\r\n            break;\r\n          case 'd':\r\n            e.preventDefault();\r\n            toggleTheme();\r\n            showNotification('⌨️ Ctrl+D: Theme toggled');\r\n            break;\r\n          case 'h':\r\n            e.preventDefault();\r\n            toggleContrast();\r\n            showNotification('⌨️ Ctrl+H: Contrast toggled');\r\n            break;\r\n          case 'm':\r\n            e.preventDefault();\r\n            toggleMinimap();\r\n            showNotification('⌨️ Ctrl+M: Minimap toggled');\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n      \r\n      // Handle other shortcuts\r\n      switch (e.key) {\r\n        case 'Escape':\r\n          if (showAiResults) {\r\n            clearAIResults();\r\n            showNotification('⌨️ Escape: AI results cleared');\r\n          }\r\n          break;\r\n        case 'ArrowUp':\r\n          if (e.ctrlKey) {\r\n            e.preventDefault();\r\n            navigateToPreviousChange();\r\n          }\r\n          break;\r\n        case 'ArrowDown':\r\n          if (e.ctrlKey) {\r\n            e.preventDefault();\r\n            navigateToNextChange();\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', handleKeyDown);\r\n    return () => document.removeEventListener('keydown', handleKeyDown);\r\n  }, [showResults, showAiResults, performComparison, clearAll, swapTexts, copyResults, toggleTheme, toggleContrast, toggleMinimap, clearAIResults, navigateToPreviousChange, navigateToNextChange]);\r\n\r\n  return (\r\n    <div className=\"quickdiff-app\">\r\n      <div className=\"container\">\r\n        <Header \r\n          onThemeToggle={toggleTheme}\r\n          onContrastToggle={toggleContrast}\r\n        />\r\n        \r\n        <SettingsPanel \r\n          settings={settings}\r\n          onSettingsChange={setSettings}\r\n        />\r\n        \r\n        <InputSection\r\n          originalText={originalText}\r\n          changedText={changedText}\r\n          onOriginalTextChange={setOriginalText}\r\n          onChangedTextChange={setChangedText}\r\n          onFileLoad={handleFileLoad}\r\n        />\r\n        \r\n        <Controls\r\n          onCompare={performComparison}\r\n          onClear={clearAll}\r\n          onSwap={swapTexts}\r\n          onCopy={copyResults}\r\n          onExportTxt={exportToTxt}\r\n          onExportHtml={exportToHtml}\r\n          onExportMd={exportToMarkdown}\r\n          onExportPdf={exportToPdf}\r\n          onAIAnalysis={generateAIAnalysis}\r\n          hasResults={showResults}\r\n        />\r\n        \r\n        <Legend />\r\n        \r\n        {showResults && (\r\n          <Results\r\n            diffResult={diffResult}\r\n            settings={settings}\r\n            changes={changes}\r\n            currentChangeIndex={currentChangeIndex}\r\n            minimapVisible={minimapVisible}\r\n            onNavigatePrevious={navigateToPreviousChange}\r\n            onNavigateNext={navigateToNextChange}\r\n            onToggleMinimap={toggleMinimap}\r\n            onNavigateToChange={(index) => {\r\n              setCurrentChangeIndex(index);\r\n              scrollToChange(index);\r\n            }}\r\n            aiResults={aiResults}\r\n            showAiResults={showAiResults}\r\n            onClearAIResults={clearAIResults}\r\n            onRemoveAICard={removeAICard}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <NotificationProvider>\r\n      <QuickDiffApp />\r\n    </NotificationProvider>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}