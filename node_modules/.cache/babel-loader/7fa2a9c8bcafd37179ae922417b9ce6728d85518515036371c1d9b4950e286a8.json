{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joem\\\\quickdiff-react\\\\src\\\\components\\\\HuggingFaceConfig.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNotification } from './NotificationProvider';\nimport './LLMConfig.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HuggingFaceConfig = ({\n  isOpen,\n  onClose,\n  hfService\n}) => {\n  _s();\n  var _config$models, _availableModels$text, _config$models2, _availableModels$summ, _config$models3, _availableModels$sent;\n  const [config, setConfig] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [testResult, setTestResult] = useState(null);\n  const {\n    showNotification\n  } = useNotification();\n  useEffect(() => {\n    if (isOpen && hfService) {\n      setConfig(hfService.getConfig());\n    }\n  }, [isOpen, hfService]);\n  const handleConfigChange = (key, value) => {\n    setConfig(prev => ({\n      ...prev,\n      [key]: value\n    }));\n  };\n  const handleModelChange = (category, model) => {\n    setConfig(prev => ({\n      ...prev,\n      models: {\n        ...prev.models,\n        [category]: model\n      }\n    }));\n  };\n  const handleSave = () => {\n    hfService.updateConfig(config);\n    showNotification('Hugging Face configuration saved');\n    onClose();\n  };\n  const handleTest = async () => {\n    setIsLoading(true);\n    setTestResult(null);\n    try {\n      // Temporarily update the service config for testing\n      const originalConfig = hfService.getConfig();\n      hfService.updateConfig(config);\n      const result = await hfService.testConnection();\n      setTestResult(result);\n      if (result.success) {\n        showNotification('✅ Hugging Face connection successful!');\n      } else {\n        showNotification('❌ Hugging Face connection failed');\n      }\n\n      // Restore original config if test failed\n      if (!result.success) {\n        hfService.updateConfig(originalConfig);\n      }\n    } catch (error) {\n      setTestResult({\n        success: false,\n        error: error.message\n      });\n      showNotification('❌ Hugging Face connection failed');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  if (!isOpen) return null;\n  const availableModels = (hfService === null || hfService === void 0 ? void 0 : hfService.getAvailableModels()) || {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content llm-config-modal\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83E\\uDD17 Hugging Face Configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modal-close\",\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"config-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uD83D\\uDD11 API Configuration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Hugging Face API Token:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              value: config.apiKey || '',\n              onChange: e => handleConfigChange('apiKey', e.target.value),\n              placeholder: \"hf_...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"config-note\",\n            children: [\"\\u26A0\\uFE0F Get your free API token from \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://huggingface.co/settings/tokens\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: \"Hugging Face Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 47\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"config-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uD83E\\uDD16 Model Selection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Text Generation Model:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: ((_config$models = config.models) === null || _config$models === void 0 ? void 0 : _config$models.textGeneration) || '',\n              onChange: e => handleModelChange('textGeneration', e.target.value),\n              children: (_availableModels$text = availableModels.textGeneration) === null || _availableModels$text === void 0 ? void 0 : _availableModels$text.map(model => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: model,\n                children: model\n              }, model, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Summarization Model:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: ((_config$models2 = config.models) === null || _config$models2 === void 0 ? void 0 : _config$models2.summarization) || '',\n              onChange: e => handleModelChange('summarization', e.target.value),\n              children: (_availableModels$summ = availableModels.summarization) === null || _availableModels$summ === void 0 ? void 0 : _availableModels$summ.map(model => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: model,\n                children: model\n              }, model, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Sentiment Analysis Model:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: ((_config$models3 = config.models) === null || _config$models3 === void 0 ? void 0 : _config$models3.sentiment) || '',\n              onChange: e => handleModelChange('sentiment', e.target.value),\n              children: (_availableModels$sent = availableModels.sentiment) === null || _availableModels$sent === void 0 ? void 0 : _availableModels$sent.map(model => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: model,\n                children: model\n              }, model, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"config-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\u2699\\uFE0F Advanced Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"config-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Max Length:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: config.maxLength || 1000,\n                onChange: e => handleConfigChange('maxLength', parseInt(e.target.value)),\n                min: \"100\",\n                max: \"2000\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Temperature:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: config.temperature || 0.7,\n                onChange: e => handleConfigChange('temperature', parseFloat(e.target.value)),\n                min: \"0\",\n                max: \"1\",\n                step: \"0.1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: config.waitForModel || true,\n              onChange: e => handleConfigChange('waitForModel', e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Wait for model to load (recommended)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"config-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\u2139\\uFE0F About Hugging Face\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"info-list\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\uD83C\\uDD93 Free tier available with rate limits\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\uD83D\\uDE80 State-of-the-art AI models\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\uD83D\\uDD12 Your data is processed securely\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\uD83D\\uDCDA Wide variety of specialized models\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), testResult && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `test-result ${testResult.success ? 'success' : 'error'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: testResult.success ? '✅ Connection Successful' : '❌ Connection Failed'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), testResult.error && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Error: \", testResult.error]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 36\n          }, this), testResult.response && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Response: \", testResult.response]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: handleTest,\n          disabled: isLoading || !config.apiKey,\n          children: isLoading ? '🔄 Testing...' : '🧪 Test Connection'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleSave,\n          children: \"\\uD83D\\uDCBE Save Configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: onClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(HuggingFaceConfig, \"hwgocdm2YAQRBMkQtnstOLAq2O8=\", false, function () {\n  return [useNotification];\n});\n_c = HuggingFaceConfig;\nexport default HuggingFaceConfig;\nvar _c;\n$RefreshReg$(_c, \"HuggingFaceConfig\");","map":{"version":3,"names":["React","useState","useEffect","useNotification","jsxDEV","_jsxDEV","HuggingFaceConfig","isOpen","onClose","hfService","_s","_config$models","_availableModels$text","_config$models2","_availableModels$summ","_config$models3","_availableModels$sent","config","setConfig","isLoading","setIsLoading","testResult","setTestResult","showNotification","getConfig","handleConfigChange","key","value","prev","handleModelChange","category","model","models","handleSave","updateConfig","handleTest","originalConfig","result","testConnection","success","error","message","availableModels","getAvailableModels","className","onClick","children","e","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","type","apiKey","onChange","target","placeholder","href","rel","textGeneration","map","summarization","sentiment","maxLength","parseInt","min","max","temperature","parseFloat","step","checked","waitForModel","response","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Joem/quickdiff-react/src/components/HuggingFaceConfig.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNotification } from './NotificationProvider';\r\nimport './LLMConfig.css';\r\n\r\nconst HuggingFaceConfig = ({ isOpen, onClose, hfService }) => {\r\n  const [config, setConfig] = useState({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [testResult, setTestResult] = useState(null);\r\n  const { showNotification } = useNotification();\r\n\r\n  useEffect(() => {\r\n    if (isOpen && hfService) {\r\n      setConfig(hfService.getConfig());\r\n    }\r\n  }, [isOpen, hfService]);\r\n\r\n  const handleConfigChange = (key, value) => {\r\n    setConfig(prev => ({ ...prev, [key]: value }));\r\n  };\r\n\r\n  const handleModelChange = (category, model) => {\r\n    setConfig(prev => ({\r\n      ...prev,\r\n      models: {\r\n        ...prev.models,\r\n        [category]: model\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleSave = () => {\r\n    hfService.updateConfig(config);\r\n    showNotification('Hugging Face configuration saved');\r\n    onClose();\r\n  };\r\n\r\n  const handleTest = async () => {\r\n    setIsLoading(true);\r\n    setTestResult(null);\r\n    \r\n    try {\r\n      // Temporarily update the service config for testing\r\n      const originalConfig = hfService.getConfig();\r\n      hfService.updateConfig(config);\r\n      \r\n      const result = await hfService.testConnection();\r\n      setTestResult(result);\r\n      \r\n      if (result.success) {\r\n        showNotification('✅ Hugging Face connection successful!');\r\n      } else {\r\n        showNotification('❌ Hugging Face connection failed');\r\n      }\r\n      \r\n      // Restore original config if test failed\r\n      if (!result.success) {\r\n        hfService.updateConfig(originalConfig);\r\n      }\r\n    } catch (error) {\r\n      setTestResult({ success: false, error: error.message });\r\n      showNotification('❌ Hugging Face connection failed');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  const availableModels = hfService?.getAvailableModels() || {};\r\n\r\n  return (\r\n    <div className=\"modal-overlay\" onClick={onClose}>\r\n      <div className=\"modal-content llm-config-modal\" onClick={e => e.stopPropagation()}>\r\n        <div className=\"modal-header\">\r\n          <h3>🤗 Hugging Face Configuration</h3>\r\n          <button className=\"modal-close\" onClick={onClose}>×</button>\r\n        </div>\r\n        \r\n        <div className=\"modal-body\">\r\n          <div className=\"config-section\">\r\n            <h4>🔑 API Configuration</h4>\r\n            <label>\r\n              <strong>Hugging Face API Token:</strong>\r\n              <input\r\n                type=\"password\"\r\n                value={config.apiKey || ''}\r\n                onChange={e => handleConfigChange('apiKey', e.target.value)}\r\n                placeholder=\"hf_...\"\r\n              />\r\n            </label>\r\n            <p className=\"config-note\">\r\n              ⚠️ Get your free API token from <a href=\"https://huggingface.co/settings/tokens\" target=\"_blank\" rel=\"noopener noreferrer\">Hugging Face Settings</a>\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"config-section\">\r\n            <h4>🤖 Model Selection</h4>\r\n            \r\n            <label>\r\n              <strong>Text Generation Model:</strong>\r\n              <select \r\n                value={config.models?.textGeneration || ''} \r\n                onChange={e => handleModelChange('textGeneration', e.target.value)}\r\n              >\r\n                {availableModels.textGeneration?.map(model => (\r\n                  <option key={model} value={model}>{model}</option>\r\n                ))}\r\n              </select>\r\n            </label>\r\n\r\n            <label>\r\n              <strong>Summarization Model:</strong>\r\n              <select \r\n                value={config.models?.summarization || ''} \r\n                onChange={e => handleModelChange('summarization', e.target.value)}\r\n              >\r\n                {availableModels.summarization?.map(model => (\r\n                  <option key={model} value={model}>{model}</option>\r\n                ))}\r\n              </select>\r\n            </label>\r\n\r\n            <label>\r\n              <strong>Sentiment Analysis Model:</strong>\r\n              <select \r\n                value={config.models?.sentiment || ''} \r\n                onChange={e => handleModelChange('sentiment', e.target.value)}\r\n              >\r\n                {availableModels.sentiment?.map(model => (\r\n                  <option key={model} value={model}>{model}</option>\r\n                ))}\r\n              </select>\r\n            </label>\r\n          </div>\r\n\r\n          <div className=\"config-section\">\r\n            <h4>⚙️ Advanced Settings</h4>\r\n            <div className=\"config-row\">\r\n              <label>\r\n                <strong>Max Length:</strong>\r\n                <input\r\n                  type=\"number\"\r\n                  value={config.maxLength || 1000}\r\n                  onChange={e => handleConfigChange('maxLength', parseInt(e.target.value))}\r\n                  min=\"100\"\r\n                  max=\"2000\"\r\n                />\r\n              </label>\r\n              \r\n              <label>\r\n                <strong>Temperature:</strong>\r\n                <input\r\n                  type=\"number\"\r\n                  value={config.temperature || 0.7}\r\n                  onChange={e => handleConfigChange('temperature', parseFloat(e.target.value))}\r\n                  min=\"0\"\r\n                  max=\"1\"\r\n                  step=\"0.1\"\r\n                />\r\n              </label>\r\n            </div>\r\n\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={config.waitForModel || true}\r\n                onChange={e => handleConfigChange('waitForModel', e.target.checked)}\r\n              />\r\n              <strong>Wait for model to load (recommended)</strong>\r\n            </label>\r\n          </div>\r\n\r\n          <div className=\"config-section\">\r\n            <h4>ℹ️ About Hugging Face</h4>\r\n            <ul className=\"info-list\">\r\n              <li>🆓 Free tier available with rate limits</li>\r\n              <li>🚀 State-of-the-art AI models</li>\r\n              <li>🔒 Your data is processed securely</li>\r\n              <li>📚 Wide variety of specialized models</li>\r\n            </ul>\r\n          </div>\r\n\r\n          {testResult && (\r\n            <div className={`test-result ${testResult.success ? 'success' : 'error'}`}>\r\n              <h4>{testResult.success ? '✅ Connection Successful' : '❌ Connection Failed'}</h4>\r\n              {testResult.error && <p>Error: {testResult.error}</p>}\r\n              {testResult.response && <p>Response: {testResult.response}</p>}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"modal-footer\">\r\n          <button \r\n            className=\"btn btn-secondary\" \r\n            onClick={handleTest}\r\n            disabled={isLoading || !config.apiKey}\r\n          >\r\n            {isLoading ? '🔄 Testing...' : '🧪 Test Connection'}\r\n          </button>\r\n          <button className=\"btn btn-primary\" onClick={handleSave}>\r\n            💾 Save Configuration\r\n          </button>\r\n          <button className=\"btn btn-secondary\" onClick={onClose}>\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HuggingFaceConfig;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}