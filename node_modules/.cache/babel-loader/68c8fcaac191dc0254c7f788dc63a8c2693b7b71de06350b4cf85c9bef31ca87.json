{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joem\\\\quickdiff-react\\\\src\\\\components\\\\AIResults.js\";\nimport React from 'react';\n\n// Function to format AI content like ChatGPT - clean and readable\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatAIContent = content => {\n  if (!content) return '';\n\n  // Convert markdown-style formatting to HTML for proper display\n  let formatted = content\n  // Convert **text** to bold\n  .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\n  // Convert bullet points with emojis\n  .replace(/^• (.*?)$/gm, '<div class=\"ai-bullet-point\">• $1</div>')\n  // Convert numbered lists\n  .replace(/^(\\d+\\.) (.*?)$/gm, '<div class=\"ai-numbered-item\">$1 $2</div>')\n  // Convert section headers with emojis\n  .replace(/^(📊|📝|🧠|🎨|🏗️|📋|🔍|✨|🎯|🔧|💡|🎭|🧹|📄|🌡️|⚖️|🔄|🌍|🔲|📏|💬|🧽|📐) \\*\\*(.*?)\\*\\*$/gm, '<h3 class=\"ai-section-header\"><span class=\"ai-emoji\">$1</span> <strong>$2</strong></h3>')\n  // Convert subsection headers\n  .replace(/^\\*\\*(.*?):\\*\\*$/gm, '<h4 class=\"ai-subsection-header\"><strong>$1:</strong></h4>')\n  // Convert line breaks to proper spacing\n  .replace(/\\n\\n/g, '</p><p class=\"ai-paragraph\">').replace(/\\n/g, '<br/>');\n\n  // Wrap in paragraph tags if not already wrapped\n  if (!formatted.startsWith('<')) {\n    formatted = '<p class=\"ai-paragraph\">' + formatted + '</p>';\n  }\n\n  // Clean up any double paragraph tags\n  formatted = formatted.replace(/<\\/p><p class=\"ai-paragraph\"><\\/p>/g, '</p>').replace(/<p class=\"ai-paragraph\"><\\/p>/g, '');\n  return formatted;\n};\nconst AIResults = ({\n  results,\n  onClear,\n  onRemoveCard\n}) => {\n  if (!results || results.length === 0) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ai-results-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-results-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83E\\uDDE0 AI Analysis Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ai-clear-all btn btn-secondary\",\n        onClick: onClear,\n        children: \"Clear All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-cards-container\",\n      children: results.map((result, index) => /*#__PURE__*/_jsxDEV(AICard, {\n        result: result,\n        index: index,\n        onRemove: onRemoveCard\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_c = AIResults;\nconst AICard = ({\n  result,\n  index,\n  onRemove\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ai-analysis-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-card-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"ai-card-title\",\n        children: result.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ai-card-close\",\n        onClick: () => onRemove && onRemove(index),\n        title: \"Remove this analysis\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-card-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ai-content-wrapper\",\n        dangerouslySetInnerHTML: {\n          __html: formatAIContent(result.content)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_c2 = AICard;\nexport default AIResults;\nvar _c, _c2;\n$RefreshReg$(_c, \"AIResults\");\n$RefreshReg$(_c2, \"AICard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","formatAIContent","content","formatted","replace","startsWith","AIResults","results","onClear","onRemoveCard","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","result","index","AICard","onRemove","_c","title","dangerouslySetInnerHTML","__html","_c2","$RefreshReg$"],"sources":["C:/Users/Joem/quickdiff-react/src/components/AIResults.js"],"sourcesContent":["import React from 'react';\r\n\r\n// Function to format AI content like ChatGPT - clean and readable\r\nconst formatAIContent = (content) => {\r\n  if (!content) return '';\r\n  \r\n  // Convert markdown-style formatting to HTML for proper display\r\n  let formatted = content\r\n    // Convert **text** to bold\r\n    .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\r\n    // Convert bullet points with emojis\r\n    .replace(/^• (.*?)$/gm, '<div class=\"ai-bullet-point\">• $1</div>')\r\n    // Convert numbered lists\r\n    .replace(/^(\\d+\\.) (.*?)$/gm, '<div class=\"ai-numbered-item\">$1 $2</div>')\r\n    // Convert section headers with emojis\r\n    .replace(/^(📊|📝|🧠|🎨|🏗️|📋|🔍|✨|🎯|🔧|💡|🎭|🧹|📄|🌡️|⚖️|🔄|🌍|🔲|📏|💬|🧽|📐) \\*\\*(.*?)\\*\\*$/gm, '<h3 class=\"ai-section-header\"><span class=\"ai-emoji\">$1</span> <strong>$2</strong></h3>')\r\n    // Convert subsection headers\r\n    .replace(/^\\*\\*(.*?):\\*\\*$/gm, '<h4 class=\"ai-subsection-header\"><strong>$1:</strong></h4>')\r\n    // Convert line breaks to proper spacing\r\n    .replace(/\\n\\n/g, '</p><p class=\"ai-paragraph\">')\r\n    .replace(/\\n/g, '<br/>');\r\n  \r\n  // Wrap in paragraph tags if not already wrapped\r\n  if (!formatted.startsWith('<')) {\r\n    formatted = '<p class=\"ai-paragraph\">' + formatted + '</p>';\r\n  }\r\n  \r\n  // Clean up any double paragraph tags\r\n  formatted = formatted\r\n    .replace(/<\\/p><p class=\"ai-paragraph\"><\\/p>/g, '</p>')\r\n    .replace(/<p class=\"ai-paragraph\"><\\/p>/g, '');\r\n  \r\n  return formatted;\r\n};\r\n\r\nconst AIResults = ({ results, onClear, onRemoveCard }) => {\r\n  if (!results || results.length === 0) return null;\r\n\r\n  return (\r\n    <div className=\"ai-results-section\">\r\n      <div className=\"ai-results-header\">\r\n        <h2>🧠 AI Analysis Results</h2>\r\n        <button className=\"ai-clear-all btn btn-secondary\" onClick={onClear}>\r\n          Clear All\r\n        </button>\r\n      </div>\r\n      <div className=\"ai-cards-container\">\r\n        {results.map((result, index) => (\r\n          <AICard \r\n            key={index} \r\n            result={result} \r\n            index={index}\r\n            onRemove={onRemoveCard}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AICard = ({ result, index, onRemove }) => {\r\n  return (\r\n    <div className=\"ai-analysis-card\">\r\n      <div className=\"ai-card-header\">\r\n        <h3 className=\"ai-card-title\">{result.title}</h3>\r\n        <button \r\n          className=\"ai-card-close\"\r\n          onClick={() => onRemove && onRemove(index)}\r\n          title=\"Remove this analysis\"\r\n        >\r\n          ×\r\n        </button>\r\n      </div>\r\n      <div className=\"ai-card-content\">\r\n        <div className=\"ai-content-wrapper\" dangerouslySetInnerHTML={{ __html: formatAIContent(result.content) }} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AIResults;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}