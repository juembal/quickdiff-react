{"ast":null,"code":"/**\r\n * QuickDiff User Guide System\r\n * Interactive tooltips and guided tour for new users\r\n */\n\nclass QuickDiffUserGuide {\n  constructor() {\n    this.isGuideActive = false;\n    this.currentStep = 0;\n    this.guideSteps = [{\n      target: '.title-section',\n      title: 'Welcome to QuickDiff! ‚ö°',\n      content: 'A powerful text comparison tool with multiple diff modes, syntax highlighting, and export options.',\n      position: 'bottom'\n    }, {\n      target: '.header-controls',\n      title: 'Theme & Display Controls',\n      content: 'Toggle high contrast (üîÜ) for better accessibility and dark/light theme (üåì) for comfortable viewing.',\n      position: 'bottom'\n    }, {\n      target: '#diffMode',\n      title: 'Diff Modes',\n      content: 'Choose how to compare texts:<br>‚Ä¢ <strong>Line-by-line</strong>: Compare entire lines<br>‚Ä¢ <strong>Word-by-word</strong>: Compare individual words<br>‚Ä¢ <strong>Character-level</strong>: Compare every character',\n      position: 'bottom'\n    }, {\n      target: '#viewMode',\n      title: 'View Modes',\n      content: 'Select how to display results:<br>‚Ä¢ <strong>Side-by-side</strong>: Show texts in parallel columns<br>‚Ä¢ <strong>Inline</strong>: Show unified diff view',\n      position: 'bottom'\n    }, {\n      target: '#languageSelect',\n      title: 'Syntax Highlighting',\n      content: 'Choose your programming language for syntax highlighting support (JavaScript, Python, HTML, CSS, etc.)',\n      position: 'bottom'\n    }, {\n      target: '.ignore-options',\n      title: 'Ignore Options',\n      content: 'Fine-tune comparison by ignoring:<br>‚Ä¢ Case differences<br>‚Ä¢ Whitespace changes<br>‚Ä¢ Punctuation variations',\n      position: 'bottom'\n    }, {\n      target: '#originalText',\n      title: 'Original Text Input',\n      content: 'Paste your original text here or drag & drop a file. Supports .txt, .md, .json, .html, .js, .py, .css files.',\n      position: 'top'\n    }, {\n      target: '#changedText',\n      title: 'Changed Text Input',\n      content: 'Paste your modified text here or drag & drop a file for comparison.',\n      position: 'top'\n    }, {\n      target: '.main-controls',\n      title: 'Main Controls',\n      content: '‚Ä¢ <strong>Compare</strong>: Start the comparison<br>‚Ä¢ <strong>Clear All</strong>: Reset both text areas<br>‚Ä¢ <strong>Swap</strong>: Exchange original and changed texts',\n      position: 'top'\n    }, {\n      target: '.export-controls',\n      title: 'Export Options',\n      content: 'Export your diff results in multiple formats:<br>üìã Copy to clipboard<br>üìÑ Plain text<br>üåê HTML<br>üìù Markdown<br>üìë PDF',\n      position: 'top'\n    }, {\n      target: '#aiControls',\n      title: 'üß† AI-Powered Analysis Tools',\n      content: 'Unlock powerful AI features to enhance your text analysis:<br>‚Ä¢ <strong>üß† Explain</strong>: Get detailed analysis of changes<br>‚Ä¢ <strong>‚ú® Rewrite</strong>: Receive improvement suggestions<br>‚Ä¢ <strong>üìù Summary</strong>: Generate concise summaries<br>‚Ä¢ <strong>üé≠ Tone</strong>: Analyze writing style and sentiment<br>‚Ä¢ <strong>üßπ Cleanup</strong>: Fix formatting and text issues',\n      position: 'top'\n    }, {\n      target: '#livePreview',\n      title: 'Live Preview',\n      content: 'Enable automatic comparison as you type (with smart debouncing to avoid performance issues).',\n      position: 'bottom'\n    }, {\n      target: '#aiResults',\n      title: 'üéØ AI Analysis Results',\n      content: 'AI analysis results appear here as beautiful cards. You can:<br>‚Ä¢ Run multiple AI analyses simultaneously<br>‚Ä¢ View all results together in a grid layout<br>‚Ä¢ Close individual cards or clear all results<br>‚Ä¢ Each analysis provides detailed, actionable insights',\n      position: 'top'\n    }];\n    this.tooltips = {\n      '#contrastToggle': 'Increase contrast for better accessibility',\n      '#themeToggle': 'Switch between dark and light themes',\n      '#compareBtn': 'Start comparing the two texts',\n      '#clearBtn': 'Clear both text areas',\n      '#swapBtn': 'Swap the original and changed texts',\n      '#copyBtn': 'Copy the diff results to clipboard',\n      '#exportTxt': 'Export as plain text file',\n      '#exportHtml': 'Export as HTML file with styling',\n      '#exportMd': 'Export as Markdown file',\n      '#exportPdf': 'Export as PDF document',\n      '#aiExplainBtn': 'üß† AI Explain: Get detailed analysis of text changes, statistics, and recommendations',\n      '#aiRewriteBtn': '‚ú® AI Rewrite: Receive intelligent suggestions for improving style, clarity, and structure',\n      '#aiSummaryBtn': 'üìù AI Summary: Generate concise summaries and extract key points from your text',\n      '#aiToneBtn': 'üé≠ AI Tone: Analyze writing style, sentiment, and formality levels',\n      '#aiCleanupBtn': 'üßπ AI Cleanup: Detect and fix formatting issues, punctuation, and text problems',\n      '#minimapToggle': 'Show/hide overview map of changes',\n      '#prevChangeBtn': 'Navigate to previous change',\n      '#nextChangeBtn': 'Navigate to next change'\n    };\n    this.init();\n  }\n  init() {\n    this.createGuideElements();\n    this.setupEventListeners();\n    this.setupTooltips();\n\n    // Show guide on first visit\n    if (!localStorage.getItem('quickdiff-guide-shown')) {\n      setTimeout(() => this.startGuide(), 1000);\n    }\n  }\n  createGuideElements() {\n    // Create guide overlay\n    const overlay = document.createElement('div');\n    overlay.id = 'guide-overlay';\n    overlay.className = 'guide-overlay';\n    overlay.innerHTML = `\n            <div class=\"guide-spotlight\"></div>\n            <div class=\"guide-tooltip\">\n                <div class=\"guide-tooltip-header\">\n                    <h3 class=\"guide-tooltip-title\"></h3>\n                    <button class=\"guide-close-btn\">&times;</button>\n                </div>\n                <div class=\"guide-tooltip-content\"></div>\n                <div class=\"guide-tooltip-footer\">\n                    <div class=\"guide-progress\">\n                        <span class=\"guide-step-counter\"></span>\n                        <div class=\"guide-progress-bar\">\n                            <div class=\"guide-progress-fill\"></div>\n                        </div>\n                    </div>\n                    <div class=\"guide-buttons\">\n                        <button class=\"guide-btn guide-btn-secondary\" id=\"guide-skip\">Skip Tour</button>\n                        <button class=\"guide-btn guide-btn-secondary\" id=\"guide-prev\">Previous</button>\n                        <button class=\"guide-btn guide-btn-primary\" id=\"guide-next\">Next</button>\n                    </div>\n                </div>\n            </div>\n        `;\n    document.body.appendChild(overlay);\n\n    // Create help button\n    const helpButton = document.createElement('button');\n    helpButton.id = 'help-button';\n    helpButton.className = 'help-button';\n    helpButton.innerHTML = '‚ùì';\n    helpButton.title = 'Show User Guide';\n    document.querySelector('.header-controls').appendChild(helpButton);\n\n    // Create quick help panel\n    const quickHelp = document.createElement('div');\n    quickHelp.id = 'quick-help';\n    quickHelp.className = 'quick-help-panel';\n    quickHelp.innerHTML = `\n            <div class=\"quick-help-header\">\n                <h3>Quick Help</h3>\n                <button class=\"quick-help-close\">&times;</button>\n            </div>\n            <div class=\"quick-help-content\">\n                <div class=\"help-section\">\n                    <h4>üöÄ Getting Started</h4>\n                    <ul>\n                        <li>Paste or type text in both areas</li>\n                        <li>Choose your diff mode and settings</li>\n                        <li>Click \"Compare Texts\" to see differences</li>\n                        <li>Export results in your preferred format</li>\n                    </ul>\n                </div>\n                <div class=\"help-section\">\n                    <h4>‚öôÔ∏è Diff Modes</h4>\n                    <ul>\n                        <li><strong>Line-by-line:</strong> Best for code and structured text</li>\n                        <li><strong>Word-by-word:</strong> Great for documents and prose</li>\n                        <li><strong>Character-level:</strong> Precise for small changes</li>\n                    </ul>\n                </div>\n                <div class=\"help-section\">\n                    <h4>üé® Features</h4>\n                    <ul>\n                        <li>Drag & drop files for easy loading</li>\n                        <li>Live preview for real-time comparison</li>\n                        <li>Syntax highlighting for code</li>\n                        <li>Multiple export formats</li>\n                        <li>Dark/light theme with high contrast mode</li>\n                    </ul>\n                </div>\n                <div class=\"help-section\">\n                    <h4>üß† AI-Powered Tools</h4>\n                    <ul>\n                        <li><strong>üß† Explain:</strong> Detailed analysis of changes and statistics</li>\n                        <li><strong>‚ú® Rewrite:</strong> Smart suggestions for style and clarity</li>\n                        <li><strong>üìù Summary:</strong> Extract key points and generate summaries</li>\n                        <li><strong>üé≠ Tone:</strong> Analyze sentiment, formality, and writing style</li>\n                        <li><strong>üßπ Cleanup:</strong> Fix formatting, punctuation, and text issues</li>\n                        <li><em>üí° Tip: Run multiple AI analyses to get comprehensive insights!</em></li>\n                    </ul>\n                </div>\n                <div class=\"help-section\">\n                    <h4>‚å®Ô∏è Keyboard Shortcuts</h4>\n                    <div class=\"shortcuts-grid\">\n                        <div class=\"shortcuts-column\">\n                            <h5>üîß Main Actions</h5>\n                            <ul>\n                                <li><kbd>Ctrl+Enter</kbd> - Compare texts</li>\n                                <li><kbd>Ctrl+K</kbd> - Clear all</li>\n                                <li><kbd>Ctrl+S</kbd> - Swap texts</li>\n                                <li><kbd>Ctrl+C</kbd> - Copy results</li>\n                            </ul>\n                        </div>\n                        <div class=\"shortcuts-column\">\n                            <h5>üé® Interface</h5>\n                            <ul>\n                                <li><kbd>Ctrl+D</kbd> - Toggle dark mode</li>\n                                <li><kbd>Ctrl+H</kbd> - Toggle contrast</li>\n                                <li><kbd>Ctrl+M</kbd> - Toggle minimap</li>\n                                <li><kbd>F1</kbd> - Show help</li>\n                                <li><kbd>Escape</kbd> - Close overlays</li>\n                            </ul>\n                        </div>\n                        <div class=\"shortcuts-column\">\n                            <h5>üß≠ Navigation</h5>\n                            <ul>\n                                <li><kbd>Ctrl+‚Üë</kbd> - Previous change</li>\n                                <li><kbd>Ctrl+‚Üì</kbd> - Next change</li>\n                            </ul>\n                        </div>\n                        <div class=\"shortcuts-column\">\n                            <h5>üß† AI Features</h5>\n                            <ul>\n                                <li><kbd>Alt+1</kbd> - AI Explain</li>\n                                <li><kbd>Alt+2</kbd> - AI Rewrite</li>\n                                <li><kbd>Alt+3</kbd> - AI Summary</li>\n                                <li><kbd>Alt+4</kbd> - AI Tone</li>\n                                <li><kbd>Alt+5</kbd> - AI Cleanup</li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        `;\n    document.body.appendChild(quickHelp);\n  }\n  setupEventListeners() {\n    // Help button\n    document.getElementById('help-button').addEventListener('click', () => {\n      this.toggleQuickHelp();\n    });\n\n    // Guide controls\n    document.getElementById('guide-next').addEventListener('click', () => this.nextStep());\n    document.getElementById('guide-prev').addEventListener('click', () => this.prevStep());\n    document.getElementById('guide-skip').addEventListener('click', () => this.endGuide());\n    document.querySelector('.guide-close-btn').addEventListener('click', () => this.endGuide());\n\n    // Quick help controls\n    document.querySelector('.quick-help-close').addEventListener('click', () => {\n      this.hideQuickHelp();\n    });\n\n    // Keyboard shortcuts\n    document.addEventListener('keydown', e => {\n      if (e.key === 'F1') {\n        e.preventDefault();\n        this.toggleQuickHelp();\n      }\n      if (e.key === 'Escape') {\n        if (this.isGuideActive) this.endGuide();\n        this.hideQuickHelp();\n      }\n    });\n\n    // Close guide when clicking outside\n    document.getElementById('guide-overlay').addEventListener('click', e => {\n      if (e.target.id === 'guide-overlay') {\n        this.endGuide();\n      }\n    });\n\n    // Reposition guide elements on window resize\n    window.addEventListener('resize', () => {\n      if (this.isGuideActive) {\n        setTimeout(() => {\n          const step = this.guideSteps[this.currentStep];\n          const target = document.querySelector(step.target);\n          if (target) {\n            this.positionGuideElements(target, step.position);\n          }\n        }, 100);\n      }\n    });\n\n    // Reposition guide elements on scroll\n    window.addEventListener('scroll', () => {\n      if (this.isGuideActive) {\n        const step = this.guideSteps[this.currentStep];\n        const target = document.querySelector(step.target);\n        if (target) {\n          this.positionGuideElements(target, step.position);\n        }\n      }\n    });\n  }\n  setupTooltips() {\n    Object.entries(this.tooltips).forEach(([selector, text]) => {\n      const element = document.querySelector(selector);\n      if (element) {\n        element.setAttribute('data-tooltip', text);\n        element.addEventListener('mouseenter', this.showTooltip.bind(this));\n        element.addEventListener('mouseleave', this.hideTooltip.bind(this));\n      }\n    });\n  }\n  showTooltip(e) {\n    if (this.isGuideActive) return;\n    const tooltip = document.createElement('div');\n    tooltip.className = 'custom-tooltip';\n    tooltip.textContent = e.target.getAttribute('data-tooltip');\n    document.body.appendChild(tooltip);\n    const rect = e.target.getBoundingClientRect();\n    const tooltipRect = tooltip.getBoundingClientRect();\n    let left = rect.left + rect.width / 2 - tooltipRect.width / 2;\n    let top = rect.top - tooltipRect.height - 10;\n\n    // Adjust if tooltip goes off screen\n    if (left < 10) left = 10;\n    if (left + tooltipRect.width > window.innerWidth - 10) {\n      left = window.innerWidth - tooltipRect.width - 10;\n    }\n    if (top < 10) {\n      top = rect.bottom + 10;\n      tooltip.classList.add('tooltip-below');\n    }\n    tooltip.style.left = left + 'px';\n    tooltip.style.top = top + 'px';\n    e.target._tooltip = tooltip;\n  }\n  hideTooltip(e) {\n    if (e.target._tooltip) {\n      e.target._tooltip.remove();\n      e.target._tooltip = null;\n    }\n  }\n  startGuide() {\n    this.isGuideActive = true;\n    this.currentStep = 0;\n    document.getElementById('guide-overlay').style.display = 'block';\n    document.body.classList.add('guide-active');\n    this.showStep();\n  }\n  showStep() {\n    const step = this.guideSteps[this.currentStep];\n    const target = document.querySelector(step.target);\n    if (!target) {\n      console.warn(`Guide target not found: ${step.target}`);\n      this.nextStep();\n      return;\n    }\n\n    // Update tooltip content\n    document.querySelector('.guide-tooltip-title').textContent = step.title;\n    document.querySelector('.guide-tooltip-content').innerHTML = step.content;\n    document.querySelector('.guide-step-counter').textContent = `Step ${this.currentStep + 1} of ${this.guideSteps.length}`;\n\n    // Update progress bar\n    const progress = (this.currentStep + 1) / this.guideSteps.length * 100;\n    document.querySelector('.guide-progress-fill').style.width = progress + '%';\n\n    // Update button states\n    document.getElementById('guide-prev').disabled = this.currentStep === 0;\n    const nextBtn = document.getElementById('guide-next');\n    if (this.currentStep === this.guideSteps.length - 1) {\n      nextBtn.textContent = 'Finish';\n    } else {\n      nextBtn.textContent = 'Next';\n    }\n\n    // Scroll target into view first\n    target.scrollIntoView({\n      behavior: 'smooth',\n      block: 'center'\n    });\n\n    // Position spotlight and tooltip after a short delay to ensure scroll is complete\n    setTimeout(() => {\n      this.positionGuideElements(target, step.position);\n\n      // Make sure spotlight is visible\n      const spotlight = document.querySelector('.guide-spotlight');\n      spotlight.style.display = 'block';\n      spotlight.style.zIndex = '10000';\n    }, 300);\n  }\n  positionGuideElements(target, position) {\n    const rect = target.getBoundingClientRect();\n    const spotlight = document.querySelector('.guide-spotlight');\n    const tooltip = document.querySelector('.guide-tooltip');\n\n    // Add scroll offset to position calculations\n    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n    const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n\n    // Calculate spotlight dimensions\n    let spotlightRect = {\n      left: rect.left,\n      top: rect.top,\n      width: rect.width,\n      height: rect.height\n    };\n    let padding = 10;\n\n    // For main controls and AI controls, fit tighter around the buttons\n    if (target.classList.contains('main-controls') || target.id === 'aiControls') {\n      const buttons = target.querySelectorAll('button');\n      if (buttons.length > 0) {\n        // Calculate the bounding box of all buttons\n        let minLeft = Infinity,\n          minTop = Infinity,\n          maxRight = -Infinity,\n          maxBottom = -Infinity;\n        buttons.forEach(button => {\n          const buttonRect = button.getBoundingClientRect();\n          minLeft = Math.min(minLeft, buttonRect.left);\n          minTop = Math.min(minTop, buttonRect.top);\n          maxRight = Math.max(maxRight, buttonRect.right);\n          maxBottom = Math.max(maxBottom, buttonRect.bottom);\n        });\n\n        // Use the tighter bounding box for spotlight\n        spotlightRect = {\n          left: minLeft,\n          top: minTop,\n          width: maxRight - minLeft,\n          height: maxBottom - minTop\n        };\n        padding = 8; // Smaller padding for button groups\n      }\n    }\n\n    // Position spotlight with scroll offset\n    spotlight.style.left = spotlightRect.left + scrollLeft - padding + 'px';\n    spotlight.style.top = spotlightRect.top + scrollTop - padding + 'px';\n    spotlight.style.width = spotlightRect.width + padding * 2 + 'px';\n    spotlight.style.height = spotlightRect.height + padding * 2 + 'px';\n\n    // Position tooltip using original rect (for consistent positioning)\n    const tooltipRect = tooltip.getBoundingClientRect();\n    let left, top;\n    switch (position) {\n      case 'top':\n        left = rect.left + rect.width / 2 - tooltipRect.width / 2;\n        top = rect.top - tooltipRect.height - 20;\n        break;\n      case 'bottom':\n        left = rect.left + rect.width / 2 - tooltipRect.width / 2;\n        top = rect.bottom + 20;\n        break;\n      case 'left':\n        left = rect.left - tooltipRect.width - 20;\n        top = rect.top + rect.height / 2 - tooltipRect.height / 2;\n        break;\n      case 'right':\n        left = rect.right + 20;\n        top = rect.top + rect.height / 2 - tooltipRect.height / 2;\n        break;\n      default:\n        left = rect.left + rect.width / 2 - tooltipRect.width / 2;\n        top = rect.bottom + 20;\n        break;\n    }\n\n    // Add scroll offset to tooltip position\n    left += scrollLeft;\n    top += scrollTop;\n\n    // Adjust if tooltip goes off screen (considering scroll)\n    if (left < scrollLeft + 20) left = scrollLeft + 20;\n    if (left + tooltipRect.width > scrollLeft + window.innerWidth - 20) {\n      left = scrollLeft + window.innerWidth - tooltipRect.width - 20;\n    }\n    if (top < scrollTop + 20) top = scrollTop + 20;\n    if (top + tooltipRect.height > scrollTop + window.innerHeight - 20) {\n      top = scrollTop + window.innerHeight - tooltipRect.height - 20;\n    }\n    tooltip.style.left = left + 'px';\n    tooltip.style.top = top + 'px';\n  }\n  nextStep() {\n    if (this.currentStep < this.guideSteps.length - 1) {\n      this.currentStep++;\n      this.showStep();\n    } else {\n      this.endGuide();\n    }\n  }\n  prevStep() {\n    if (this.currentStep > 0) {\n      this.currentStep--;\n      this.showStep();\n    }\n  }\n  endGuide() {\n    this.isGuideActive = false;\n    document.getElementById('guide-overlay').style.display = 'none';\n    document.body.classList.remove('guide-active');\n    localStorage.setItem('quickdiff-guide-shown', 'true');\n  }\n  toggleQuickHelp() {\n    const quickHelp = document.getElementById('quick-help');\n    if (quickHelp.style.display === 'block') {\n      this.hideQuickHelp();\n    } else {\n      this.showQuickHelp();\n    }\n  }\n  showQuickHelp() {\n    document.getElementById('quick-help').style.display = 'block';\n  }\n  hideQuickHelp() {\n    document.getElementById('quick-help').style.display = 'none';\n  }\n}\n\n// Make the class available globally for React integration\nwindow.QuickDiffUserGuide = QuickDiffUserGuide;\n\n// Initialize the user guide when DOM is loaded (fallback for non-React usage)\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', () => {\n    if (!window.userGuideInitialized) {\n      new QuickDiffUserGuide();\n      window.userGuideInitialized = true;\n    }\n  });\n} else {\n  // DOM is already loaded\n  if (!window.userGuideInitialized) {\n    setTimeout(() => {\n      new QuickDiffUserGuide();\n      window.userGuideInitialized = true;\n    }, 100);\n  }\n}","map":{"version":3,"names":["QuickDiffUserGuide","constructor","isGuideActive","currentStep","guideSteps","target","title","content","position","tooltips","init","createGuideElements","setupEventListeners","setupTooltips","localStorage","getItem","setTimeout","startGuide","overlay","document","createElement","id","className","innerHTML","body","appendChild","helpButton","querySelector","quickHelp","getElementById","addEventListener","toggleQuickHelp","nextStep","prevStep","endGuide","hideQuickHelp","e","key","preventDefault","window","step","positionGuideElements","Object","entries","forEach","selector","text","element","setAttribute","showTooltip","bind","hideTooltip","tooltip","textContent","getAttribute","rect","getBoundingClientRect","tooltipRect","left","width","top","height","innerWidth","bottom","classList","add","style","_tooltip","remove","display","showStep","console","warn","length","progress","disabled","nextBtn","scrollIntoView","behavior","block","spotlight","zIndex","scrollTop","pageYOffset","documentElement","scrollLeft","pageXOffset","spotlightRect","padding","contains","buttons","querySelectorAll","minLeft","Infinity","minTop","maxRight","maxBottom","button","buttonRect","Math","min","max","right","innerHeight","setItem","showQuickHelp","readyState","userGuideInitialized"],"sources":["C:/Users/Joem/quickdiff-react/src/user-guide.js"],"sourcesContent":["/**\r\n * QuickDiff User Guide System\r\n * Interactive tooltips and guided tour for new users\r\n */\r\n\r\nclass QuickDiffUserGuide {\r\n    constructor() {\r\n        this.isGuideActive = false;\r\n        this.currentStep = 0;\r\n        this.guideSteps = [\r\n            {\r\n                target: '.title-section',\r\n                title: 'Welcome to QuickDiff! ‚ö°',\r\n                content: 'A powerful text comparison tool with multiple diff modes, syntax highlighting, and export options.',\r\n                position: 'bottom'\r\n            },\r\n            {\r\n                target: '.header-controls',\r\n                title: 'Theme & Display Controls',\r\n                content: 'Toggle high contrast (üîÜ) for better accessibility and dark/light theme (üåì) for comfortable viewing.',\r\n                position: 'bottom'\r\n            },\r\n            {\r\n                target: '#diffMode',\r\n                title: 'Diff Modes',\r\n                content: 'Choose how to compare texts:<br>‚Ä¢ <strong>Line-by-line</strong>: Compare entire lines<br>‚Ä¢ <strong>Word-by-word</strong>: Compare individual words<br>‚Ä¢ <strong>Character-level</strong>: Compare every character',\r\n                position: 'bottom'\r\n            },\r\n            {\r\n                target: '#viewMode',\r\n                title: 'View Modes',\r\n                content: 'Select how to display results:<br>‚Ä¢ <strong>Side-by-side</strong>: Show texts in parallel columns<br>‚Ä¢ <strong>Inline</strong>: Show unified diff view',\r\n                position: 'bottom'\r\n            },\r\n            {\r\n                target: '#languageSelect',\r\n                title: 'Syntax Highlighting',\r\n                content: 'Choose your programming language for syntax highlighting support (JavaScript, Python, HTML, CSS, etc.)',\r\n                position: 'bottom'\r\n            },\r\n            {\r\n                target: '.ignore-options',\r\n                title: 'Ignore Options',\r\n                content: 'Fine-tune comparison by ignoring:<br>‚Ä¢ Case differences<br>‚Ä¢ Whitespace changes<br>‚Ä¢ Punctuation variations',\r\n                position: 'bottom'\r\n            },\r\n            {\r\n                target: '#originalText',\r\n                title: 'Original Text Input',\r\n                content: 'Paste your original text here or drag & drop a file. Supports .txt, .md, .json, .html, .js, .py, .css files.',\r\n                position: 'top'\r\n            },\r\n            {\r\n                target: '#changedText',\r\n                title: 'Changed Text Input',\r\n                content: 'Paste your modified text here or drag & drop a file for comparison.',\r\n                position: 'top'\r\n            },\r\n            {\r\n                target: '.main-controls',\r\n                title: 'Main Controls',\r\n                content: '‚Ä¢ <strong>Compare</strong>: Start the comparison<br>‚Ä¢ <strong>Clear All</strong>: Reset both text areas<br>‚Ä¢ <strong>Swap</strong>: Exchange original and changed texts',\r\n                position: 'top'\r\n            },\r\n            {\r\n                target: '.export-controls',\r\n                title: 'Export Options',\r\n                content: 'Export your diff results in multiple formats:<br>üìã Copy to clipboard<br>üìÑ Plain text<br>üåê HTML<br>üìù Markdown<br>üìë PDF',\r\n                position: 'top'\r\n            },\r\n            {\r\n                target: '#aiControls',\r\n                title: 'üß† AI-Powered Analysis Tools',\r\n                content: 'Unlock powerful AI features to enhance your text analysis:<br>‚Ä¢ <strong>üß† Explain</strong>: Get detailed analysis of changes<br>‚Ä¢ <strong>‚ú® Rewrite</strong>: Receive improvement suggestions<br>‚Ä¢ <strong>üìù Summary</strong>: Generate concise summaries<br>‚Ä¢ <strong>üé≠ Tone</strong>: Analyze writing style and sentiment<br>‚Ä¢ <strong>üßπ Cleanup</strong>: Fix formatting and text issues',\r\n                position: 'top'\r\n            },\r\n            {\r\n                target: '#livePreview',\r\n                title: 'Live Preview',\r\n                content: 'Enable automatic comparison as you type (with smart debouncing to avoid performance issues).',\r\n                position: 'bottom'\r\n            },\r\n            {\r\n                target: '#aiResults',\r\n                title: 'üéØ AI Analysis Results',\r\n                content: 'AI analysis results appear here as beautiful cards. You can:<br>‚Ä¢ Run multiple AI analyses simultaneously<br>‚Ä¢ View all results together in a grid layout<br>‚Ä¢ Close individual cards or clear all results<br>‚Ä¢ Each analysis provides detailed, actionable insights',\r\n                position: 'top'\r\n            }\r\n        ];\r\n        \r\n        this.tooltips = {\r\n            '#contrastToggle': 'Increase contrast for better accessibility',\r\n            '#themeToggle': 'Switch between dark and light themes',\r\n            '#compareBtn': 'Start comparing the two texts',\r\n            '#clearBtn': 'Clear both text areas',\r\n            '#swapBtn': 'Swap the original and changed texts',\r\n            '#copyBtn': 'Copy the diff results to clipboard',\r\n            '#exportTxt': 'Export as plain text file',\r\n            '#exportHtml': 'Export as HTML file with styling',\r\n            '#exportMd': 'Export as Markdown file',\r\n            '#exportPdf': 'Export as PDF document',\r\n            '#aiExplainBtn': 'üß† AI Explain: Get detailed analysis of text changes, statistics, and recommendations',\r\n            '#aiRewriteBtn': '‚ú® AI Rewrite: Receive intelligent suggestions for improving style, clarity, and structure',\r\n            '#aiSummaryBtn': 'üìù AI Summary: Generate concise summaries and extract key points from your text',\r\n            '#aiToneBtn': 'üé≠ AI Tone: Analyze writing style, sentiment, and formality levels',\r\n            '#aiCleanupBtn': 'üßπ AI Cleanup: Detect and fix formatting issues, punctuation, and text problems',\r\n            '#minimapToggle': 'Show/hide overview map of changes',\r\n            '#prevChangeBtn': 'Navigate to previous change',\r\n            '#nextChangeBtn': 'Navigate to next change'\r\n        };\r\n        \r\n        this.init();\r\n    }\r\n    \r\n    init() {\r\n        this.createGuideElements();\r\n        this.setupEventListeners();\r\n        this.setupTooltips();\r\n        \r\n        // Show guide on first visit\r\n        if (!localStorage.getItem('quickdiff-guide-shown')) {\r\n            setTimeout(() => this.startGuide(), 1000);\r\n        }\r\n    }\r\n    \r\n    createGuideElements() {\r\n        // Create guide overlay\r\n        const overlay = document.createElement('div');\r\n        overlay.id = 'guide-overlay';\r\n        overlay.className = 'guide-overlay';\r\n        overlay.innerHTML = `\r\n            <div class=\"guide-spotlight\"></div>\r\n            <div class=\"guide-tooltip\">\r\n                <div class=\"guide-tooltip-header\">\r\n                    <h3 class=\"guide-tooltip-title\"></h3>\r\n                    <button class=\"guide-close-btn\">&times;</button>\r\n                </div>\r\n                <div class=\"guide-tooltip-content\"></div>\r\n                <div class=\"guide-tooltip-footer\">\r\n                    <div class=\"guide-progress\">\r\n                        <span class=\"guide-step-counter\"></span>\r\n                        <div class=\"guide-progress-bar\">\r\n                            <div class=\"guide-progress-fill\"></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"guide-buttons\">\r\n                        <button class=\"guide-btn guide-btn-secondary\" id=\"guide-skip\">Skip Tour</button>\r\n                        <button class=\"guide-btn guide-btn-secondary\" id=\"guide-prev\">Previous</button>\r\n                        <button class=\"guide-btn guide-btn-primary\" id=\"guide-next\">Next</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        `;\r\n        document.body.appendChild(overlay);\r\n        \r\n        // Create help button\r\n        const helpButton = document.createElement('button');\r\n        helpButton.id = 'help-button';\r\n        helpButton.className = 'help-button';\r\n        helpButton.innerHTML = '‚ùì';\r\n        helpButton.title = 'Show User Guide';\r\n        document.querySelector('.header-controls').appendChild(helpButton);\r\n        \r\n        // Create quick help panel\r\n        const quickHelp = document.createElement('div');\r\n        quickHelp.id = 'quick-help';\r\n        quickHelp.className = 'quick-help-panel';\r\n        quickHelp.innerHTML = `\r\n            <div class=\"quick-help-header\">\r\n                <h3>Quick Help</h3>\r\n                <button class=\"quick-help-close\">&times;</button>\r\n            </div>\r\n            <div class=\"quick-help-content\">\r\n                <div class=\"help-section\">\r\n                    <h4>üöÄ Getting Started</h4>\r\n                    <ul>\r\n                        <li>Paste or type text in both areas</li>\r\n                        <li>Choose your diff mode and settings</li>\r\n                        <li>Click \"Compare Texts\" to see differences</li>\r\n                        <li>Export results in your preferred format</li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"help-section\">\r\n                    <h4>‚öôÔ∏è Diff Modes</h4>\r\n                    <ul>\r\n                        <li><strong>Line-by-line:</strong> Best for code and structured text</li>\r\n                        <li><strong>Word-by-word:</strong> Great for documents and prose</li>\r\n                        <li><strong>Character-level:</strong> Precise for small changes</li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"help-section\">\r\n                    <h4>üé® Features</h4>\r\n                    <ul>\r\n                        <li>Drag & drop files for easy loading</li>\r\n                        <li>Live preview for real-time comparison</li>\r\n                        <li>Syntax highlighting for code</li>\r\n                        <li>Multiple export formats</li>\r\n                        <li>Dark/light theme with high contrast mode</li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"help-section\">\r\n                    <h4>üß† AI-Powered Tools</h4>\r\n                    <ul>\r\n                        <li><strong>üß† Explain:</strong> Detailed analysis of changes and statistics</li>\r\n                        <li><strong>‚ú® Rewrite:</strong> Smart suggestions for style and clarity</li>\r\n                        <li><strong>üìù Summary:</strong> Extract key points and generate summaries</li>\r\n                        <li><strong>üé≠ Tone:</strong> Analyze sentiment, formality, and writing style</li>\r\n                        <li><strong>üßπ Cleanup:</strong> Fix formatting, punctuation, and text issues</li>\r\n                        <li><em>üí° Tip: Run multiple AI analyses to get comprehensive insights!</em></li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"help-section\">\r\n                    <h4>‚å®Ô∏è Keyboard Shortcuts</h4>\r\n                    <div class=\"shortcuts-grid\">\r\n                        <div class=\"shortcuts-column\">\r\n                            <h5>üîß Main Actions</h5>\r\n                            <ul>\r\n                                <li><kbd>Ctrl+Enter</kbd> - Compare texts</li>\r\n                                <li><kbd>Ctrl+K</kbd> - Clear all</li>\r\n                                <li><kbd>Ctrl+S</kbd> - Swap texts</li>\r\n                                <li><kbd>Ctrl+C</kbd> - Copy results</li>\r\n                            </ul>\r\n                        </div>\r\n                        <div class=\"shortcuts-column\">\r\n                            <h5>üé® Interface</h5>\r\n                            <ul>\r\n                                <li><kbd>Ctrl+D</kbd> - Toggle dark mode</li>\r\n                                <li><kbd>Ctrl+H</kbd> - Toggle contrast</li>\r\n                                <li><kbd>Ctrl+M</kbd> - Toggle minimap</li>\r\n                                <li><kbd>F1</kbd> - Show help</li>\r\n                                <li><kbd>Escape</kbd> - Close overlays</li>\r\n                            </ul>\r\n                        </div>\r\n                        <div class=\"shortcuts-column\">\r\n                            <h5>üß≠ Navigation</h5>\r\n                            <ul>\r\n                                <li><kbd>Ctrl+‚Üë</kbd> - Previous change</li>\r\n                                <li><kbd>Ctrl+‚Üì</kbd> - Next change</li>\r\n                            </ul>\r\n                        </div>\r\n                        <div class=\"shortcuts-column\">\r\n                            <h5>üß† AI Features</h5>\r\n                            <ul>\r\n                                <li><kbd>Alt+1</kbd> - AI Explain</li>\r\n                                <li><kbd>Alt+2</kbd> - AI Rewrite</li>\r\n                                <li><kbd>Alt+3</kbd> - AI Summary</li>\r\n                                <li><kbd>Alt+4</kbd> - AI Tone</li>\r\n                                <li><kbd>Alt+5</kbd> - AI Cleanup</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        `;\r\n        document.body.appendChild(quickHelp);\r\n    }\r\n    \r\n    setupEventListeners() {\r\n        // Help button\r\n        document.getElementById('help-button').addEventListener('click', () => {\r\n            this.toggleQuickHelp();\r\n        });\r\n        \r\n        // Guide controls\r\n        document.getElementById('guide-next').addEventListener('click', () => this.nextStep());\r\n        document.getElementById('guide-prev').addEventListener('click', () => this.prevStep());\r\n        document.getElementById('guide-skip').addEventListener('click', () => this.endGuide());\r\n        document.querySelector('.guide-close-btn').addEventListener('click', () => this.endGuide());\r\n        \r\n        // Quick help controls\r\n        document.querySelector('.quick-help-close').addEventListener('click', () => {\r\n            this.hideQuickHelp();\r\n        });\r\n        \r\n        // Keyboard shortcuts\r\n        document.addEventListener('keydown', (e) => {\r\n            if (e.key === 'F1') {\r\n                e.preventDefault();\r\n                this.toggleQuickHelp();\r\n            }\r\n            if (e.key === 'Escape') {\r\n                if (this.isGuideActive) this.endGuide();\r\n                this.hideQuickHelp();\r\n            }\r\n        });\r\n        \r\n        // Close guide when clicking outside\r\n        document.getElementById('guide-overlay').addEventListener('click', (e) => {\r\n            if (e.target.id === 'guide-overlay') {\r\n                this.endGuide();\r\n            }\r\n        });\r\n        \r\n        // Reposition guide elements on window resize\r\n        window.addEventListener('resize', () => {\r\n            if (this.isGuideActive) {\r\n                setTimeout(() => {\r\n                    const step = this.guideSteps[this.currentStep];\r\n                    const target = document.querySelector(step.target);\r\n                    if (target) {\r\n                        this.positionGuideElements(target, step.position);\r\n                    }\r\n                }, 100);\r\n            }\r\n        });\r\n        \r\n        // Reposition guide elements on scroll\r\n        window.addEventListener('scroll', () => {\r\n            if (this.isGuideActive) {\r\n                const step = this.guideSteps[this.currentStep];\r\n                const target = document.querySelector(step.target);\r\n                if (target) {\r\n                    this.positionGuideElements(target, step.position);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    \r\n    setupTooltips() {\r\n        Object.entries(this.tooltips).forEach(([selector, text]) => {\r\n            const element = document.querySelector(selector);\r\n            if (element) {\r\n                element.setAttribute('data-tooltip', text);\r\n                element.addEventListener('mouseenter', this.showTooltip.bind(this));\r\n                element.addEventListener('mouseleave', this.hideTooltip.bind(this));\r\n            }\r\n        });\r\n    }\r\n    \r\n    showTooltip(e) {\r\n        if (this.isGuideActive) return;\r\n        \r\n        const tooltip = document.createElement('div');\r\n        tooltip.className = 'custom-tooltip';\r\n        tooltip.textContent = e.target.getAttribute('data-tooltip');\r\n        document.body.appendChild(tooltip);\r\n        \r\n        const rect = e.target.getBoundingClientRect();\r\n        const tooltipRect = tooltip.getBoundingClientRect();\r\n        \r\n        let left = rect.left + (rect.width / 2) - (tooltipRect.width / 2);\r\n        let top = rect.top - tooltipRect.height - 10;\r\n        \r\n        // Adjust if tooltip goes off screen\r\n        if (left < 10) left = 10;\r\n        if (left + tooltipRect.width > window.innerWidth - 10) {\r\n            left = window.innerWidth - tooltipRect.width - 10;\r\n        }\r\n        if (top < 10) {\r\n            top = rect.bottom + 10;\r\n            tooltip.classList.add('tooltip-below');\r\n        }\r\n        \r\n        tooltip.style.left = left + 'px';\r\n        tooltip.style.top = top + 'px';\r\n        \r\n        e.target._tooltip = tooltip;\r\n    }\r\n    \r\n    hideTooltip(e) {\r\n        if (e.target._tooltip) {\r\n            e.target._tooltip.remove();\r\n            e.target._tooltip = null;\r\n        }\r\n    }\r\n    \r\n    startGuide() {\r\n        this.isGuideActive = true;\r\n        this.currentStep = 0;\r\n        document.getElementById('guide-overlay').style.display = 'block';\r\n        document.body.classList.add('guide-active');\r\n        this.showStep();\r\n    }\r\n    \r\n    showStep() {\r\n        const step = this.guideSteps[this.currentStep];\r\n        const target = document.querySelector(step.target);\r\n        \r\n        if (!target) {\r\n            console.warn(`Guide target not found: ${step.target}`);\r\n            this.nextStep();\r\n            return;\r\n        }\r\n        \r\n        // Update tooltip content\r\n        document.querySelector('.guide-tooltip-title').textContent = step.title;\r\n        document.querySelector('.guide-tooltip-content').innerHTML = step.content;\r\n        document.querySelector('.guide-step-counter').textContent = \r\n            `Step ${this.currentStep + 1} of ${this.guideSteps.length}`;\r\n        \r\n        // Update progress bar\r\n        const progress = ((this.currentStep + 1) / this.guideSteps.length) * 100;\r\n        document.querySelector('.guide-progress-fill').style.width = progress + '%';\r\n        \r\n        // Update button states\r\n        document.getElementById('guide-prev').disabled = this.currentStep === 0;\r\n        const nextBtn = document.getElementById('guide-next');\r\n        if (this.currentStep === this.guideSteps.length - 1) {\r\n            nextBtn.textContent = 'Finish';\r\n        } else {\r\n            nextBtn.textContent = 'Next';\r\n        }\r\n        \r\n        // Scroll target into view first\r\n        target.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n        \r\n        // Position spotlight and tooltip after a short delay to ensure scroll is complete\r\n        setTimeout(() => {\r\n            this.positionGuideElements(target, step.position);\r\n            \r\n            // Make sure spotlight is visible\r\n            const spotlight = document.querySelector('.guide-spotlight');\r\n            spotlight.style.display = 'block';\r\n            spotlight.style.zIndex = '10000';\r\n        }, 300);\r\n    }\r\n    \r\n    positionGuideElements(target, position) {\r\n        const rect = target.getBoundingClientRect();\r\n        const spotlight = document.querySelector('.guide-spotlight');\r\n        const tooltip = document.querySelector('.guide-tooltip');\r\n        \r\n        // Add scroll offset to position calculations\r\n        const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\r\n        const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\r\n        \r\n        // Calculate spotlight dimensions\r\n        let spotlightRect = {\r\n            left: rect.left,\r\n            top: rect.top,\r\n            width: rect.width,\r\n            height: rect.height\r\n        };\r\n        let padding = 10;\r\n        \r\n        // For main controls and AI controls, fit tighter around the buttons\r\n        if (target.classList.contains('main-controls') || target.id === 'aiControls') {\r\n            const buttons = target.querySelectorAll('button');\r\n            if (buttons.length > 0) {\r\n                // Calculate the bounding box of all buttons\r\n                let minLeft = Infinity, minTop = Infinity, maxRight = -Infinity, maxBottom = -Infinity;\r\n                \r\n                buttons.forEach(button => {\r\n                    const buttonRect = button.getBoundingClientRect();\r\n                    minLeft = Math.min(minLeft, buttonRect.left);\r\n                    minTop = Math.min(minTop, buttonRect.top);\r\n                    maxRight = Math.max(maxRight, buttonRect.right);\r\n                    maxBottom = Math.max(maxBottom, buttonRect.bottom);\r\n                });\r\n                \r\n                // Use the tighter bounding box for spotlight\r\n                spotlightRect = {\r\n                    left: minLeft,\r\n                    top: minTop,\r\n                    width: maxRight - minLeft,\r\n                    height: maxBottom - minTop\r\n                };\r\n                padding = 8; // Smaller padding for button groups\r\n            }\r\n        }\r\n        \r\n        // Position spotlight with scroll offset\r\n        spotlight.style.left = (spotlightRect.left + scrollLeft - padding) + 'px';\r\n        spotlight.style.top = (spotlightRect.top + scrollTop - padding) + 'px';\r\n        spotlight.style.width = (spotlightRect.width + (padding * 2)) + 'px';\r\n        spotlight.style.height = (spotlightRect.height + (padding * 2)) + 'px';\r\n        \r\n        // Position tooltip using original rect (for consistent positioning)\r\n        const tooltipRect = tooltip.getBoundingClientRect();\r\n        let left, top;\r\n        \r\n        switch (position) {\r\n            case 'top':\r\n                left = rect.left + (rect.width / 2) - (tooltipRect.width / 2);\r\n                top = rect.top - tooltipRect.height - 20;\r\n                break;\r\n            case 'bottom':\r\n                left = rect.left + (rect.width / 2) - (tooltipRect.width / 2);\r\n                top = rect.bottom + 20;\r\n                break;\r\n            case 'left':\r\n                left = rect.left - tooltipRect.width - 20;\r\n                top = rect.top + (rect.height / 2) - (tooltipRect.height / 2);\r\n                break;\r\n            case 'right':\r\n                left = rect.right + 20;\r\n                top = rect.top + (rect.height / 2) - (tooltipRect.height / 2);\r\n                break;\r\n            default:\r\n                left = rect.left + (rect.width / 2) - (tooltipRect.width / 2);\r\n                top = rect.bottom + 20;\r\n                break;\r\n        }\r\n        \r\n        // Add scroll offset to tooltip position\r\n        left += scrollLeft;\r\n        top += scrollTop;\r\n        \r\n        // Adjust if tooltip goes off screen (considering scroll)\r\n        if (left < scrollLeft + 20) left = scrollLeft + 20;\r\n        if (left + tooltipRect.width > scrollLeft + window.innerWidth - 20) {\r\n            left = scrollLeft + window.innerWidth - tooltipRect.width - 20;\r\n        }\r\n        if (top < scrollTop + 20) top = scrollTop + 20;\r\n        if (top + tooltipRect.height > scrollTop + window.innerHeight - 20) {\r\n            top = scrollTop + window.innerHeight - tooltipRect.height - 20;\r\n        }\r\n        \r\n        tooltip.style.left = left + 'px';\r\n        tooltip.style.top = top + 'px';\r\n    }\r\n    \r\n    nextStep() {\r\n        if (this.currentStep < this.guideSteps.length - 1) {\r\n            this.currentStep++;\r\n            this.showStep();\r\n        } else {\r\n            this.endGuide();\r\n        }\r\n    }\r\n    \r\n    prevStep() {\r\n        if (this.currentStep > 0) {\r\n            this.currentStep--;\r\n            this.showStep();\r\n        }\r\n    }\r\n    \r\n    endGuide() {\r\n        this.isGuideActive = false;\r\n        document.getElementById('guide-overlay').style.display = 'none';\r\n        document.body.classList.remove('guide-active');\r\n        localStorage.setItem('quickdiff-guide-shown', 'true');\r\n    }\r\n    \r\n    toggleQuickHelp() {\r\n        const quickHelp = document.getElementById('quick-help');\r\n        if (quickHelp.style.display === 'block') {\r\n            this.hideQuickHelp();\r\n        } else {\r\n            this.showQuickHelp();\r\n        }\r\n    }\r\n    \r\n    showQuickHelp() {\r\n        document.getElementById('quick-help').style.display = 'block';\r\n    }\r\n    \r\n    hideQuickHelp() {\r\n        document.getElementById('quick-help').style.display = 'none';\r\n    }\r\n}\r\n\r\n// Make the class available globally for React integration\r\nwindow.QuickDiffUserGuide = QuickDiffUserGuide;\r\n\r\n// Initialize the user guide when DOM is loaded (fallback for non-React usage)\r\nif (document.readyState === 'loading') {\r\n    document.addEventListener('DOMContentLoaded', () => {\r\n        if (!window.userGuideInitialized) {\r\n            new QuickDiffUserGuide();\r\n            window.userGuideInitialized = true;\r\n        }\r\n    });\r\n} else {\r\n    // DOM is already loaded\r\n    if (!window.userGuideInitialized) {\r\n        setTimeout(() => {\r\n            new QuickDiffUserGuide();\r\n            window.userGuideInitialized = true;\r\n        }, 100);\r\n    }\r\n}"],"mappings":"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AC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;IACDJ,QAAQ,CAACK,IAAI,CAACC,WAAW,CAACP,OAAO,CAAC;;IAElC;IACA,MAAMQ,UAAU,GAAGP,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IACnDM,UAAU,CAACL,EAAE,GAAG,aAAa;IAC7BK,UAAU,CAACJ,SAAS,GAAG,aAAa;IACpCI,UAAU,CAACH,SAAS,GAAG,GAAG;IAC1BG,UAAU,CAACpB,KAAK,GAAG,iBAAiB;IACpCa,QAAQ,CAACQ,aAAa,CAAC,kBAAkB,CAAC,CAACF,WAAW,CAACC,UAAU,CAAC;;IAElE;IACA,MAAME,SAAS,GAAGT,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAC/CQ,SAAS,CAACP,EAAE,GAAG,YAAY;IAC3BO,SAAS,CAACN,SAAS,GAAG,kBAAkB;IACxCM,SAAS,CAACL,SAAS,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;IACDJ,QAAQ,CAACK,IAAI,CAACC,WAAW,CAACG,SAAS,CAAC;EACxC;EAEAhB,mBAAmBA,CAAA,EAAG;IAClB;IACAO,QAAQ,CAACU,cAAc,CAAC,aAAa,CAAC,CAACC,gBAAgB,CAAC,OAAO,EAAE,MAAM;MACnE,IAAI,CAACC,eAAe,CAAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}