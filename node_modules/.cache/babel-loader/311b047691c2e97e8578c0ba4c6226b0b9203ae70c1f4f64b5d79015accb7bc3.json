{"ast":null,"code":"/**\r\n * React-Compatible QuickDiff User Guide\r\n * Simple spotlight tour on first app open + Quick Guide button\r\n */\n\nclass ReactUserGuide {\n  constructor() {\n    this.isGuideActive = false;\n    this.currentStep = 0;\n    this.isRepositioning = false;\n    this.scrollListener = null;\n    this.tourSteps = [{\n      target: '.title-section',\n      title: 'Welcome to QuickDiff! ⚡',\n      content: 'A powerful text comparison tool with multiple diff modes, syntax highlighting, and export options. Perfect for developers, writers, and anyone who needs to compare text efficiently.',\n      position: 'bottom'\n    }, {\n      target: '.header-controls',\n      title: 'Theme & Accessibility Controls',\n      content: '🔆 High Contrast (Ctrl+H) - Better visibility for accessibility<br>🌓 Dark/Light Theme (Ctrl+D) - Switch between themes<br>❓ Quick Guide - Access this help anytime',\n      position: 'bottom'\n    }, {\n      target: '.settings-panel',\n      title: 'Comparison Settings',\n      content: '📊 Diff Mode - Line-by-line, word-by-word, or character-level<br>👁️ View Mode - Side-by-side or inline comparison<br>🎨 Language - Syntax highlighting for code<br>⚙️ Ignore Options - Skip case, whitespace, or punctuation',\n      position: 'bottom'\n    }, {\n      target: '.input-section',\n      title: 'Text Input Areas',\n      content: '📝 Original Text (left) - Your base text for comparison<br>📝 Changed Text (right) - Modified version to compare<br>📁 Drag & Drop - Supports .txt, .md, .json, .html, .js, .py, .css files<br>💡 Tip: Files auto-detect programming language!',\n      position: 'top'\n    }, {\n      target: '.controls',\n      title: 'Main Action Controls',\n      content: '🔍 Compare Texts (Ctrl+Enter) - Start the comparison<br>🗑️ Clear All (Ctrl+K) - Reset both text areas<br>🔄 Swap Texts (Ctrl+S) - Exchange left and right content<br>📁 Load Files - Upload files from your computer',\n      position: 'top'\n    }, {\n      target: '.export-controls',\n      title: 'Export Your Results',\n      content: '📋 Copy (Ctrl+C) - Copy results to clipboard<br>📄 Plain Text - Export as .txt file<br>🌐 HTML - Export with styling and colors<br>📝 Markdown - Export in markdown format<br>📑 PDF - Generate PDF document',\n      position: 'top'\n    }, {\n      target: '.ai-controls',\n      title: '🧠 AI-Powered Analysis Tools',\n      content: '🧠 AI Explain (Alt+1) - Detailed analysis of changes and statistics<br>✨ AI Rewrite (Alt+2) - Smart suggestions for improvement<br>📝 AI Summary (Alt+3) - Generate concise summaries<br>🎭 AI Tone (Alt+4) - Analyze writing style and sentiment<br>🧹 AI Cleanup (Alt+5) - Fix formatting and text issues',\n      position: 'top'\n    }];\n    this.init();\n  }\n  init() {\n    // Wait for React components to render\n    this.waitForElements(() => {\n      this.createElements();\n      this.setupEventListeners();\n\n      // Show tour on first visit\n      if (!localStorage.getItem('quickdiff-tour-shown')) {\n        setTimeout(() => this.startTour(), 1500);\n      }\n    });\n  }\n  waitForElements(callback) {\n    const checkElements = () => {\n      const headerControls = document.querySelector('.header-controls');\n      if (headerControls) {\n        callback();\n      } else {\n        setTimeout(checkElements, 200);\n      }\n    };\n    checkElements();\n  }\n  createElements() {\n    this.createTourOverlay();\n    this.createQuickGuideButton();\n    this.createQuickGuideModal();\n  }\n  createTourOverlay() {\n    // Remove existing overlay\n    const existing = document.getElementById('tour-overlay');\n    if (existing) existing.remove();\n    const overlay = document.createElement('div');\n    overlay.id = 'tour-overlay';\n    overlay.style.cssText = `\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            z-index: 10000;\n            pointer-events: none;\n            display: none;\n        `;\n    overlay.innerHTML = `\n            <div id=\"tour-spotlight\" style=\"\n                position: absolute;\n                background: transparent;\n                border-radius: 12px;\n                box-shadow: 0 0 0 9999px rgba(0, 0, 0, 0.8);\n                border: 2px solid #B6B09F;\n                pointer-events: none;\n                transition: all 0.4s ease;\n                z-index: 10000;\n                display: block;\n            \"></div>\n            <div id=\"tour-tooltip\" style=\"\n                position: absolute;\n                background: linear-gradient(135deg, #F2F2F2 0%, #EAE4D5 100%);\n                border-radius: 15px;\n                border: 1px solid #B6B09F;\n                box-shadow: 0 4px 20px rgba(182, 176, 159, 0.3);\n                max-width: min(350px, 90vw);\n                min-width: min(280px, 85vw);\n                width: auto;\n                pointer-events: auto;\n                z-index: 10001;\n                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;\n            \">\n                <div id=\"tour-tooltip-body\" style=\"padding: 20px 24px 16px;\">\n                    <h3 id=\"tour-title\" style=\"\n                        margin: 0 0 12px 0;\n                        font-size: 18px;\n                        font-weight: 600;\n                        color: #000000;\n                    \"></h3>\n                    <p id=\"tour-content\" style=\"\n                        margin: 0;\n                        color: #000000;\n                        line-height: 1.5;\n                        font-size: 14px;\n                    \"></p>\n                </div>\n                <div id=\"tour-tooltip-footer\" style=\"\n                    padding: 0 24px 20px;\n                    display: flex;\n                    justify-content: space-between;\n                    align-items: center;\n                \">\n                    <span id=\"tour-progress\" style=\"\n                        font-size: 12px;\n                        color: #B6B09F;\n                    \"></span>\n                    <div style=\"display: flex; gap: 8px;\">\n                        <button id=\"tour-skip\" style=\"\n                            padding: 8px 16px;\n                            border: 2px solid #B6B09F;\n                            background: #F2F2F2;\n                            color: #000000;\n                            border-radius: 8px;\n                            cursor: pointer;\n                            font-size: 13px;\n                            transition: all 0.3s ease;\n                        \">Skip</button>\n                        <button id=\"tour-next\" style=\"\n                            padding: 8px 16px;\n                            border: none;\n                            background: linear-gradient(135deg, #000000 0%, #B6B09F 100%);\n                            color: #F2F2F2;\n                            border-radius: 8px;\n                            cursor: pointer;\n                            font-size: 13px;\n                            transition: all 0.3s ease;\n                        \">Next</button>\n                    </div>\n                </div>\n            </div>\n        `;\n    document.body.appendChild(overlay);\n  }\n  createQuickGuideButton() {\n    // Remove existing button\n    const existing = document.getElementById('quick-guide-btn');\n    if (existing) existing.remove();\n    const button = document.createElement('button');\n    button.id = 'quick-guide-btn';\n    button.innerHTML = '❓';\n    button.title = 'Quick Guide';\n    button.className = 'btn btn-secondary btn-icon-only';\n    // Copy exact styles from contrast/theme buttons - no custom overrides\n\n    // Add to header controls\n    const headerControls = document.querySelector('.header-controls');\n    if (headerControls) {\n      headerControls.appendChild(button);\n    }\n\n    // Add dynamic CSS for theme support\n    this.addModalStyles();\n  }\n  createQuickGuideModal() {\n    // Remove existing modal\n    const existing = document.getElementById('quick-guide-modal');\n    if (existing) existing.remove();\n    const modal = document.createElement('div');\n    modal.id = 'quick-guide-modal';\n    modal.style.cssText = `\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background: rgba(0, 0, 0, 0.5);\n            z-index: 10000;\n            display: none;\n            align-items: center;\n            justify-content: center;\n            backdrop-filter: blur(4px);\n        `;\n    modal.innerHTML = `\n            <div class=\"quick-guide-modal-content\" style=\"\n                background: linear-gradient(135deg, #F2F2F2 0%, #EAE4D5 100%);\n                border-radius: 16px;\n                max-width: 600px;\n                width: 90%;\n                max-height: 80vh;\n                overflow-y: auto;\n                box-shadow: 0 20px 60px rgba(182, 176, 159, 0.3);\n                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;\n                border: 1px solid #B6B09F;\n            \">\n                <div style=\"\n                    padding: 24px 32px 20px;\n                    border-bottom: 1px solid #B6B09F;\n                    display: flex;\n                    justify-content: space-between;\n                    align-items: center;\n                \">\n                    <h2 style=\"\n                        margin: 0;\n                        font-size: 24px;\n                        font-weight: 700;\n                        color: #000000;\n                    \">QuickDiff Guide</h2>\n                    <button id=\"close-guide-modal\" style=\"\n                        background: none;\n                        border: none;\n                        font-size: 28px;\n                        cursor: pointer;\n                        color: #B6B09F;\n                        padding: 0;\n                        width: 32px;\n                        height: 32px;\n                        display: flex;\n                        align-items: center;\n                        justify-content: center;\n                        border-radius: 6px;\n                        transition: all 0.2s ease;\n                    \">&times;</button>\n                </div>\n                <div style=\"padding: 24px 32px;\">\n                    <div style=\"margin-bottom: 24px;\">\n                        <h3 style=\"\n                            margin: 0 0 12px 0;\n                            font-size: 18px;\n                            font-weight: 600;\n                            color: #000000;\n                        \">🚀 Getting Started</h3>\n                        <ul style=\"\n                            margin: 0;\n                            padding-left: 20px;\n                            color: #000000;\n                            line-height: 1.6;\n                        \">\n                            <li>Paste or type text in both areas</li>\n                            <li>Choose your diff mode and settings</li>\n                            <li>Click \"Compare Texts\" to see differences</li>\n                            <li>Export results in your preferred format</li>\n                        </ul>\n                    </div>\n                    \n                    <div style=\"margin-bottom: 24px;\">\n                        <h3 style=\"\n                            margin: 0 0 12px 0;\n                            font-size: 18px;\n                            font-weight: 600;\n                            color: #000000;\n                        \">⚙️ Diff Modes</h3>\n                        <ul style=\"\n                            margin: 0;\n                            padding-left: 20px;\n                            color: #000000;\n                            line-height: 1.6;\n                        \">\n                            <li><strong>Line-by-line:</strong> Best for code and structured text</li>\n                            <li><strong>Word-by-word:</strong> Great for documents and prose</li>\n                            <li><strong>Character-level:</strong> Precise for small changes</li>\n                        </ul>\n                    </div>\n                    \n                    <div style=\"margin-bottom: 24px;\">\n                        <h3 style=\"\n                            margin: 0 0 12px 0;\n                            font-size: 18px;\n                            font-weight: 600;\n                            color: #000000;\n                        \">🎨 Features</h3>\n                        <ul style=\"\n                            margin: 0;\n                            padding-left: 20px;\n                            color: #000000;\n                            line-height: 1.6;\n                        \">\n                            <li>Drag & drop files for easy loading</li>\n                            <li>Live preview for real-time comparison</li>\n                            <li>Syntax highlighting for code</li>\n                            <li>Multiple export formats</li>\n                            <li>Dark/light theme with high contrast mode</li>\n                        </ul>\n                    </div>\n                    \n                    <div style=\"margin-bottom: 24px;\">\n                        <h3 style=\"\n                            margin: 0 0 12px 0;\n                            font-size: 18px;\n                            font-weight: 600;\n                            color: #000000;\n                        \">⌨️ Keyboard Shortcuts</h3>\n                        <div style=\"\n                            display: grid;\n                            grid-template-columns: 1fr 1fr;\n                            gap: 16px;\n                            color: #000000;\n                            line-height: 1.6;\n                            font-size: 14px;\n                        \">\n                            <div>\n                                <h4 style=\"\n                                    margin: 0 0 8px 0;\n                                    font-size: 14px;\n                                    font-weight: 600;\n                                    color: #000000;\n                                \">🔧 Main Actions</h4>\n                                <div style=\"margin-bottom: 4px;\"><kbd style=\"background: #EAE4D5; padding: 2px 6px; border-radius: 3px; font-size: 12px; border: 1px solid #B6B09F; color: #000000;\">Ctrl+Enter</kbd> Compare</div>\n                                <div style=\"margin-bottom: 4px;\"><kbd style=\"background: #EAE4D5; padding: 2px 6px; border-radius: 3px; font-size: 12px; border: 1px solid #B6B09F; color: #000000;\">Ctrl+K</kbd> Clear All</div>\n                                <div style=\"margin-bottom: 4px;\"><kbd style=\"background: #EAE4D5; padding: 2px 6px; border-radius: 3px; font-size: 12px; border: 1px solid #B6B09F; color: #000000;\">Ctrl+S</kbd> Swap Texts</div>\n                                <div style=\"margin-bottom: 4px;\"><kbd style=\"background: #EAE4D5; padding: 2px 6px; border-radius: 3px; font-size: 12px; border: 1px solid #B6B09F; color: #000000;\">Ctrl+C</kbd> Copy Results</div>\n                            </div>\n                            <div>\n                                <h4 style=\"\n                                    margin: 0 0 8px 0;\n                                    font-size: 14px;\n                                    font-weight: 600;\n                                    color: #000000;\n                                \">🎨 Interface</h4>\n                                <div style=\"margin-bottom: 4px;\"><kbd style=\"background: #EAE4D5; padding: 2px 6px; border-radius: 3px; font-size: 12px; border: 1px solid #B6B09F; color: #000000;\">Ctrl+D</kbd> Toggle Theme</div>\n                                <div style=\"margin-bottom: 4px;\"><kbd style=\"background: #EAE4D5; padding: 2px 6px; border-radius: 3px; font-size: 12px; border: 1px solid #B6B09F; color: #000000;\">Ctrl+H</kbd> High Contrast</div>\n                                <div style=\"margin-bottom: 4px;\"><kbd style=\"background: #EAE4D5; padding: 2px 6px; border-radius: 3px; font-size: 12px; border: 1px solid #B6B09F; color: #000000;\">F1</kbd> Show Guide</div>\n                                <div style=\"margin-bottom: 4px;\"><kbd style=\"background: #EAE4D5; padding: 2px 6px; border-radius: 3px; font-size: 12px; border: 1px solid #B6B09F; color: #000000;\">Escape</kbd> Close Overlays</div>\n                            </div>\n                        </div>\n                        <div style=\"\n                            margin-top: 12px;\n                            padding-top: 12px;\n                            border-top: 1px solid #B6B09F;\n                        \">\n                            <h4 style=\"\n                                margin: 0 0 8px 0;\n                                font-size: 14px;\n                                font-weight: 600;\n                                color: #000000;\n                            \">🧠 AI Features</h4>\n                            <div style=\"display: grid; grid-template-columns: 1fr 1fr; gap: 8px;\">\n                                <div><kbd style=\"background: #EAE4D5; padding: 2px 6px; border-radius: 3px; font-size: 12px; border: 1px solid #B6B09F; color: #000000;\">Alt+1</kbd> AI Explain</div>\n                                <div><kbd style=\"background: #EAE4D5; padding: 2px 6px; border-radius: 3px; font-size: 12px; border: 1px solid #B6B09F; color: #000000;\">Alt+2</kbd> AI Rewrite</div>\n                                <div><kbd style=\"background: #EAE4D5; padding: 2px 6px; border-radius: 3px; font-size: 12px; border: 1px solid #B6B09F; color: #000000;\">Alt+3</kbd> AI Summary</div>\n                                <div><kbd style=\"background: #EAE4D5; padding: 2px 6px; border-radius: 3px; font-size: 12px; border: 1px solid #B6B09F; color: #000000;\">Alt+4</kbd> AI Tone</div>\n                                <div><kbd style=\"background: #EAE4D5; padding: 2px 6px; border-radius: 3px; font-size: 12px; border: 1px solid #B6B09F; color: #000000;\">Alt+5</kbd> AI Cleanup</div>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    <div style=\"\n                        background: linear-gradient(135deg, #EAE4D5 0%, #F2F2F2 100%);\n                        padding: 16px;\n                        border-radius: 8px;\n                        text-align: center;\n                        border: 1px solid #B6B09F;\n                    \">\n                        <button id=\"restart-tour\" style=\"\n                            background: linear-gradient(135deg, #000000 0%, #B6B09F 100%);\n                            color: #F2F2F2;\n                            border: 1px solid #B6B09F;\n                            padding: 12px 20px;\n                            border-radius: 8px;\n                            cursor: pointer;\n                            font-size: 14px;\n                            font-weight: 500;\n                            transition: all 0.3s ease;\n                            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);\n                        \">🎯 Restart Tour</button>\n                    </div>\n                </div>\n            </div>\n        `;\n    document.body.appendChild(modal);\n  }\n  addModalStyles() {\n    // Remove existing styles\n    const existingStyles = document.getElementById('quick-guide-dynamic-styles');\n    if (existingStyles) existingStyles.remove();\n    const style = document.createElement('style');\n    style.id = 'quick-guide-dynamic-styles';\n    style.textContent = `\n            /* Quick Guide Modal Theme Support */\n            [data-theme=\"dark\"] .quick-guide-modal-content {\n                background: linear-gradient(135deg, #000000 0%, #B6B09F 100%) !important;\n                border: 1px solid #B6B09F !important;\n                box-shadow: 0 20px 60px rgba(0, 0, 0, 0.5) !important;\n            }\n            \n            [data-theme=\"dark\"] .quick-guide-modal-content h2,\n            [data-theme=\"dark\"] .quick-guide-modal-content h3,\n            [data-theme=\"dark\"] .quick-guide-modal-content h4,\n            [data-theme=\"dark\"] .quick-guide-modal-content ul,\n            [data-theme=\"dark\"] .quick-guide-modal-content div {\n                color: #F2F2F2 !important;\n            }\n            \n            [data-theme=\"dark\"] .quick-guide-modal-content kbd {\n                background: #000000 !important;\n                border: 1px solid #EAE4D5 !important;\n                color: #F2F2F2 !important;\n            }\n            \n            [data-theme=\"dark\"] #close-guide-modal {\n                color: #EAE4D5 !important;\n            }\n            \n            [data-theme=\"dark\"] #close-guide-modal:hover {\n                background: rgba(242, 242, 242, 0.1) !important;\n                color: #F2F2F2 !important;\n            }\n            \n            [data-theme=\"dark\"] #restart-tour {\n                background: linear-gradient(135deg, #F2F2F2 0%, #EAE4D5 100%) !important;\n                color: #000000 !important;\n                border: 1px solid #EAE4D5 !important;\n            }\n            \n            [data-theme=\"dark\"] #restart-tour:hover {\n                background: linear-gradient(135deg, #EAE4D5 0%, #F2F2F2 100%) !important;\n                transform: translateY(-2px) !important;\n                box-shadow: 0 8px 25px rgba(242, 242, 242, 0.2) !important;\n            }\n            \n            /* Light theme hover effects */\n            #close-guide-modal:hover {\n                background: rgba(182, 176, 159, 0.1) !important;\n                color: #000000 !important;\n            }\n            \n            #restart-tour:hover {\n                background: linear-gradient(135deg, #B6B09F 0%, #000000 100%) !important;\n                transform: translateY(-2px) !important;\n                box-shadow: 0 8px 25px rgba(0, 0, 0, 0.4) !important;\n            }\n            \n            /* High contrast support */\n            [data-contrast=\"high\"] .quick-guide-modal-content {\n                border: 3px solid #000000 !important;\n                background: #ffffff !important;\n            }\n            \n            [data-contrast=\"high\"] .quick-guide-modal-content h2,\n            [data-contrast=\"high\"] .quick-guide-modal-content h3,\n            [data-contrast=\"high\"] .quick-guide-modal-content h4,\n            [data-contrast=\"high\"] .quick-guide-modal-content ul,\n            [data-contrast=\"high\"] .quick-guide-modal-content div {\n                color: #000000 !important;\n                font-weight: 700 !important;\n            }\n            \n            [data-contrast=\"high\"] .quick-guide-modal-content kbd {\n                background: #ffffff !important;\n                border: 3px solid #000000 !important;\n                color: #000000 !important;\n                font-weight: 700 !important;\n            }\n            \n            [data-contrast=\"high\"] #restart-tour {\n                background: #000000 !important;\n                color: #ffffff !important;\n                border: 3px solid #ffffff !important;\n                font-weight: 700 !important;\n            }\n            \n            [data-contrast=\"high\"] #restart-tour:hover {\n                background: #ffffff !important;\n                color: #000000 !important;\n                border: 3px solid #000000 !important;\n            }\n            \n            /* Dark + High contrast */\n            [data-theme=\"dark\"][data-contrast=\"high\"] .quick-guide-modal-content {\n                border: 3px solid #ffffff !important;\n                background: #000000 !important;\n            }\n            \n            [data-theme=\"dark\"][data-contrast=\"high\"] .quick-guide-modal-content h2,\n            [data-theme=\"dark\"][data-contrast=\"high\"] .quick-guide-modal-content h3,\n            [data-theme=\"dark\"][data-contrast=\"high\"] .quick-guide-modal-content h4,\n            [data-theme=\"dark\"][data-contrast=\"high\"] .quick-guide-modal-content ul,\n            [data-theme=\"dark\"][data-contrast=\"high\"] .quick-guide-modal-content div {\n                color: #ffffff !important;\n                font-weight: 700 !important;\n            }\n            \n            [data-theme=\"dark\"][data-contrast=\"high\"] .quick-guide-modal-content kbd {\n                background: #000000 !important;\n                border: 3px solid #ffffff !important;\n                color: #ffffff !important;\n                font-weight: 700 !important;\n            }\n            \n            [data-theme=\"dark\"][data-contrast=\"high\"] #restart-tour {\n                background: #ffffff !important;\n                color: #000000 !important;\n                border: 3px solid #000000 !important;\n                font-weight: 700 !important;\n            }\n            \n            [data-theme=\"dark\"][data-contrast=\"high\"] #restart-tour:hover {\n                background: #000000 !important;\n                color: #ffffff !important;\n                border: 3px solid #ffffff !important;\n            }\n        `;\n    document.head.appendChild(style);\n  }\n  setupEventListeners() {\n    // Quick Guide button\n    const guideBtn = document.getElementById('quick-guide-btn');\n    if (guideBtn) {\n      guideBtn.addEventListener('click', () => this.showQuickGuide());\n    }\n\n    // Close modal\n    const closeBtn = document.getElementById('close-guide-modal');\n    if (closeBtn) {\n      closeBtn.addEventListener('click', () => this.hideQuickGuide());\n    }\n\n    // Restart tour\n    const restartBtn = document.getElementById('restart-tour');\n    if (restartBtn) {\n      restartBtn.addEventListener('click', () => {\n        this.hideQuickGuide();\n        this.startTour();\n      });\n    }\n\n    // Tour controls\n    const skipBtn = document.getElementById('tour-skip');\n    const nextBtn = document.getElementById('tour-next');\n    if (skipBtn) {\n      skipBtn.addEventListener('click', () => this.endTour());\n    }\n    if (nextBtn) {\n      nextBtn.addEventListener('click', () => this.nextStep());\n    }\n\n    // Close modal when clicking outside\n    const modal = document.getElementById('quick-guide-modal');\n    if (modal) {\n      modal.addEventListener('click', e => {\n        if (e.target === modal) {\n          this.hideQuickGuide();\n        }\n      });\n    }\n\n    // Close tour when clicking outside\n    const overlay = document.getElementById('tour-overlay');\n    if (overlay) {\n      overlay.addEventListener('click', e => {\n        if (e.target === overlay) {\n          this.endTour();\n        }\n      });\n    }\n\n    // Mobile-specific event handlers\n    if (window.innerWidth <= 768) {\n      // Handle orientation change on mobile\n      window.addEventListener('orientationchange', () => {\n        setTimeout(() => {\n          if (this.isGuideActive) {\n            const step = this.tourSteps[this.currentStep];\n            const target = document.querySelector(step.target);\n            if (target) {\n              this.positionSpotlight(target, step.position);\n            }\n          }\n        }, 500);\n      });\n\n      // Handle window resize on mobile\n      let resizeTimeout;\n      window.addEventListener('resize', () => {\n        clearTimeout(resizeTimeout);\n        resizeTimeout = setTimeout(() => {\n          if (this.isGuideActive) {\n            const step = this.tourSteps[this.currentStep];\n            const target = document.querySelector(step.target);\n            if (target) {\n              this.positionSpotlight(target, step.position);\n            }\n          }\n        }, 300);\n      });\n\n      // Prevent zoom issues on mobile\n      const tooltip = document.getElementById('tour-tooltip');\n      if (tooltip) {\n        tooltip.addEventListener('touchstart', e => {\n          e.preventDefault();\n        }, {\n          passive: false\n        });\n      }\n    }\n\n    // Add scroll tracking for all devices\n    this.setupScrollTracking();\n  }\n  setupScrollTracking() {\n    // Remove existing scroll listener if any\n    if (this.scrollListener) {\n      window.removeEventListener('scroll', this.scrollListener);\n      document.removeEventListener('scroll', this.scrollListener);\n    }\n\n    // Real-time scroll handler for immediate response\n    this.scrollListener = () => {\n      if (!this.isGuideActive || this.isRepositioning) return;\n\n      // Use requestAnimationFrame for smooth 60fps updates\n      if (this.animationFrame) {\n        cancelAnimationFrame(this.animationFrame);\n      }\n      this.animationFrame = requestAnimationFrame(() => {\n        const step = this.tourSteps[this.currentStep];\n        const target = document.querySelector(step.target);\n        if (target) {\n          const spotlight = document.getElementById('tour-spotlight');\n          const tooltip = document.getElementById('tour-tooltip');\n          if (spotlight && tooltip) {\n            const isMobile = window.innerWidth <= 768;\n            const isSmallMobile = window.innerWidth <= 480;\n            this.doPositionSpotlight(target, step.position, spotlight, tooltip, isMobile, isSmallMobile);\n          }\n        }\n      });\n    };\n\n    // Add listeners to both window and document for better coverage\n    window.addEventListener('scroll', this.scrollListener, {\n      passive: true\n    });\n    document.addEventListener('scroll', this.scrollListener, {\n      passive: true\n    });\n  }\n  startTour() {\n    this.isGuideActive = true;\n    this.currentStep = 0;\n    const overlay = document.getElementById('tour-overlay');\n    if (overlay) {\n      overlay.style.display = 'block';\n      this.showStep();\n    }\n  }\n  showStep() {\n    const step = this.tourSteps[this.currentStep];\n    const target = document.querySelector(step.target);\n    if (!target) {\n      // Try next step if target not found\n      this.nextStep();\n      return;\n    }\n\n    // Apply mobile-specific tooltip styles\n    this.applyMobileTooltipStyles();\n\n    // Update tooltip content\n    document.getElementById('tour-title').textContent = step.title;\n    document.getElementById('tour-content').innerHTML = step.content;\n    document.getElementById('tour-progress').textContent = `${this.currentStep + 1} of ${this.tourSteps.length}`;\n\n    // Update next button\n    const nextBtn = document.getElementById('tour-next');\n    if (this.currentStep === this.tourSteps.length - 1) {\n      nextBtn.textContent = 'Finish';\n    } else {\n      nextBtn.textContent = 'Next';\n    }\n\n    // Position spotlight and tooltip\n    setTimeout(() => {\n      this.positionSpotlight(target, step.position);\n    }, 100);\n  }\n  applyMobileTooltipStyles() {\n    const isMobile = window.innerWidth <= 768;\n    const isSmallMobile = window.innerWidth <= 480;\n    if (!isMobile) return;\n    const tooltip = document.getElementById('tour-tooltip');\n    const tooltipBody = document.getElementById('tour-tooltip-body');\n    const tooltipFooter = document.getElementById('tour-tooltip-footer');\n    const title = document.getElementById('tour-title');\n    const content = document.getElementById('tour-content');\n    if (tooltip) {\n      tooltip.style.maxWidth = isSmallMobile ? '95vw' : '90vw';\n      tooltip.style.minWidth = isSmallMobile ? 'min(260px, 90vw)' : 'min(280px, 85vw)';\n      tooltip.style.margin = isSmallMobile ? '8px' : '10px';\n    }\n    if (tooltipBody) {\n      tooltipBody.style.padding = isSmallMobile ? '16px 20px 12px' : '18px 22px 14px';\n    }\n    if (tooltipFooter) {\n      tooltipFooter.style.padding = isSmallMobile ? '0 16px 16px' : '0 20px 18px';\n      tooltipFooter.style.display = 'flex';\n      tooltipFooter.style.width = '100%';\n      tooltipFooter.style.boxSizing = 'border-box';\n      if (isSmallMobile) {\n        tooltipFooter.style.flexDirection = 'column';\n        tooltipFooter.style.gap = '12px';\n        tooltipFooter.style.alignItems = 'stretch';\n      } else {\n        // Reset to default for tablets and desktop\n        tooltipFooter.style.flexDirection = 'row';\n        tooltipFooter.style.alignItems = 'center';\n        tooltipFooter.style.justifyContent = 'space-between';\n      }\n    }\n    if (title) {\n      title.style.fontSize = isSmallMobile ? '16px' : '17px';\n    }\n    if (content) {\n      content.style.fontSize = isSmallMobile ? '13px' : '14px';\n      content.style.lineHeight = '1.4';\n    }\n\n    // Adjust button sizes for mobile\n    const skipBtn = document.getElementById('tour-skip');\n    const nextBtn = document.getElementById('tour-next');\n    const progressSpan = document.getElementById('tour-progress');\n    if (skipBtn && nextBtn) {\n      // Get buttons container\n      const buttonsContainer = skipBtn.parentElement;\n      if (isSmallMobile) {\n        // Mobile phone layout - stack buttons vertically with better visibility\n        skipBtn.style.cssText = 'padding: 12px 20px; font-size: 15px; min-width: 120px; width: 100%; margin: 0; border: 2px solid #B6B09F; background: #F2F2F2; color: #000000; border-radius: 8px; cursor: pointer; transition: all 0.3s ease; box-sizing: border-box; font-weight: 600; box-shadow: 0 2px 8px rgba(0,0,0,0.1);';\n        nextBtn.style.cssText = 'padding: 12px 20px; font-size: 15px; min-width: 120px; width: 100%; margin: 0; background: linear-gradient(135deg, #000000 0%, #B6B09F 100%); color: #F2F2F2; border: none; border-radius: 8px; cursor: pointer; transition: all 0.3s ease; box-sizing: border-box; font-weight: 600; box-shadow: 0 2px 8px rgba(0,0,0,0.2);';\n\n        // Configure buttons container for mobile\n        if (buttonsContainer) {\n          buttonsContainer.style.display = 'flex';\n          buttonsContainer.style.flexDirection = 'column';\n          buttonsContainer.style.gap = '12px';\n          buttonsContainer.style.width = '100%';\n          buttonsContainer.style.alignItems = 'stretch';\n          buttonsContainer.style.justifyContent = 'center';\n        }\n      } else if (isMobile) {\n        // Tablet layout - side by side but larger and more visible\n        skipBtn.style.cssText = 'padding: 10px 18px; font-size: 14px; min-width: 90px; margin: 0; border: 2px solid #B6B09F; background: #F2F2F2; color: #000000; border-radius: 8px; cursor: pointer; transition: all 0.3s ease; box-sizing: border-box; font-weight: 500; box-shadow: 0 2px 6px rgba(0,0,0,0.1);';\n        nextBtn.style.cssText = 'padding: 10px 18px; font-size: 14px; min-width: 90px; margin: 0; background: linear-gradient(135deg, #000000 0%, #B6B09F 100%); color: #F2F2F2; border: none; border-radius: 8px; cursor: pointer; transition: all 0.3s ease; box-sizing: border-box; font-weight: 500; box-shadow: 0 2px 6px rgba(0,0,0,0.15);';\n\n        // Configure buttons container for tablet\n        if (buttonsContainer) {\n          buttonsContainer.style.display = 'flex';\n          buttonsContainer.style.flexDirection = 'row';\n          buttonsContainer.style.gap = '12px';\n          buttonsContainer.style.justifyContent = 'center';\n          buttonsContainer.style.alignItems = 'center';\n        }\n      } else {\n        // Desktop layout - original styling\n        skipBtn.style.cssText = 'padding: 8px 16px; font-size: 13px; min-width: 70px; border: 2px solid #B6B09F; background: #F2F2F2; color: #000000; border-radius: 8px; cursor: pointer; transition: all 0.3s ease;';\n        nextBtn.style.cssText = 'padding: 8px 16px; font-size: 13px; min-width: 70px; background: linear-gradient(135deg, #000000 0%, #B6B09F 100%); color: #F2F2F2; border: none; border-radius: 8px; cursor: pointer; transition: all 0.3s ease;';\n\n        // Configure buttons container for desktop\n        if (buttonsContainer) {\n          buttonsContainer.style.display = 'flex';\n          buttonsContainer.style.flexDirection = 'row';\n          buttonsContainer.style.gap = '8px';\n        }\n      }\n    }\n\n    // Adjust progress text for mobile\n    if (progressSpan) {\n      progressSpan.style.fontSize = isSmallMobile ? '11px' : '12px';\n      if (isSmallMobile) {\n        progressSpan.style.textAlign = 'center';\n        progressSpan.style.width = '100%';\n      }\n    }\n  }\n  positionSpotlight(target, position) {\n    const spotlight = document.getElementById('tour-spotlight');\n    const tooltip = document.getElementById('tour-tooltip');\n    if (!spotlight || !tooltip || !target) return;\n\n    // Mobile detection\n    const isMobile = window.innerWidth <= 768;\n    const isSmallMobile = window.innerWidth <= 480;\n\n    // Scroll target into view first (from working implementation)\n    if (!this.isRepositioning) {\n      this.isRepositioning = true;\n      target.scrollIntoView({\n        behavior: 'smooth',\n        block: 'center'\n      });\n\n      // Position spotlight and tooltip after a short delay to ensure scroll is complete\n      setTimeout(() => {\n        this.doPositionSpotlight(target, position, spotlight, tooltip, isMobile, isSmallMobile);\n\n        // Make sure spotlight is visible (from working implementation)\n        spotlight.style.display = 'block';\n        spotlight.style.zIndex = '10000';\n        this.isRepositioning = false;\n      }, 300);\n    } else {\n      this.doPositionSpotlight(target, position, spotlight, tooltip, isMobile, isSmallMobile);\n    }\n  }\n  doPositionSpotlight(target, position, spotlight, tooltip, isMobile, isSmallMobile) {\n    // Get fresh coordinates after any scrolling\n    const rect = target.getBoundingClientRect();\n    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n    const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n\n    // Calculate spotlight dimensions (adapted from working quickdiff implementation)\n    let spotlightRect = {\n      left: rect.left,\n      top: rect.top,\n      width: rect.width,\n      height: rect.height\n    };\n    let padding = isMobile ? isSmallMobile ? 8 : 10 : 12;\n\n    // Enhanced handling for control groups (from working implementation)\n    if (target.classList.contains('header-controls') || target.classList.contains('controls') || target.classList.contains('export-controls') || target.classList.contains('ai-controls') || target.classList.contains('main-controls') || target.id === 'aiControls') {\n      const buttons = target.querySelectorAll('button:not([style*=\"display: none\"]):not([hidden])');\n      if (buttons.length > 0) {\n        // Calculate the bounding box of all visible buttons\n        let minLeft = Infinity,\n          minTop = Infinity,\n          maxRight = -Infinity,\n          maxBottom = -Infinity;\n        buttons.forEach(button => {\n          const buttonRect = button.getBoundingClientRect();\n          if (buttonRect.width > 0 && buttonRect.height > 0) {\n            minLeft = Math.min(minLeft, buttonRect.left);\n            minTop = Math.min(minTop, buttonRect.top);\n            maxRight = Math.max(maxRight, buttonRect.right);\n            maxBottom = Math.max(maxBottom, buttonRect.bottom);\n          }\n        });\n        if (minLeft !== Infinity) {\n          // Use the tighter bounding box for spotlight\n          spotlightRect = {\n            left: minLeft,\n            top: minTop,\n            width: maxRight - minLeft,\n            height: maxBottom - minTop\n          };\n          padding = isMobile ? isSmallMobile ? 6 : 8 : 8; // Smaller padding for button groups\n        }\n      }\n    }\n\n    // Position spotlight with scroll offset (working implementation approach)\n    spotlight.style.position = 'absolute';\n    spotlight.style.left = spotlightRect.left + scrollLeft - padding + 'px';\n    spotlight.style.top = spotlightRect.top + scrollTop - padding + 'px';\n    spotlight.style.width = spotlightRect.width + padding * 2 + 'px';\n    spotlight.style.height = spotlightRect.height + padding * 2 + 'px';\n\n    // Position tooltip using working implementation approach with smart collision detection\n    const tooltipRect = tooltip.getBoundingClientRect();\n    let left, top;\n    let finalPosition = position;\n\n    // Smart positioning to avoid blocking spotlight\n    const spotlightBounds = {\n      left: spotlightRect.left,\n      top: spotlightRect.top,\n      right: spotlightRect.left + spotlightRect.width,\n      bottom: spotlightRect.top + spotlightRect.height\n    };\n\n    // Check if tooltip would overlap with spotlight and adjust position\n    const checkOverlap = (testLeft, testTop, testWidth, testHeight) => {\n      const tooltipBounds = {\n        left: testLeft,\n        top: testTop,\n        right: testLeft + testWidth,\n        bottom: testTop + testHeight\n      };\n      return !(tooltipBounds.right < spotlightBounds.left || tooltipBounds.left > spotlightBounds.right || tooltipBounds.bottom < spotlightBounds.top || tooltipBounds.top > spotlightBounds.bottom);\n    };\n\n    // Calculate initial position\n    let testLeft, testTop;\n    switch (position) {\n      case 'top':\n        testLeft = rect.left + rect.width / 2 - tooltipRect.width / 2;\n        testTop = rect.top - tooltipRect.height - 20;\n        break;\n      case 'bottom':\n      default:\n        testLeft = rect.left + rect.width / 2 - tooltipRect.width / 2;\n        testTop = rect.bottom + 20;\n        break;\n      case 'left':\n        testLeft = rect.left - tooltipRect.width - 20;\n        testTop = rect.top + rect.height / 2 - tooltipRect.height / 2;\n        break;\n      case 'right':\n        testLeft = rect.right + 20;\n        testTop = rect.top + rect.height / 2 - tooltipRect.height / 2;\n        break;\n    }\n\n    // Check for overlap and try alternative positions\n    if (checkOverlap(testLeft, testTop, tooltipRect.width, tooltipRect.height)) {\n      const alternatives = [];\n\n      // Try all four positions and rank them by distance from spotlight\n      const positions = ['top', 'bottom', 'left', 'right'];\n      positions.forEach(pos => {\n        let altLeft, altTop;\n        switch (pos) {\n          case 'top':\n            altLeft = rect.left + rect.width / 2 - tooltipRect.width / 2;\n            altTop = rect.top - tooltipRect.height - 20;\n            break;\n          case 'bottom':\n            altLeft = rect.left + rect.width / 2 - tooltipRect.width / 2;\n            altTop = rect.bottom + 20;\n            break;\n          case 'left':\n            altLeft = rect.left - tooltipRect.width - 20;\n            altTop = rect.top + rect.height / 2 - tooltipRect.height / 2;\n            break;\n          case 'right':\n            altLeft = rect.right + 20;\n            altTop = rect.top + rect.height / 2 - tooltipRect.height / 2;\n            break;\n        }\n\n        // Check if this position fits in viewport\n        const fitsInViewport = altLeft >= 0 && altTop >= 0 && altLeft + tooltipRect.width <= window.innerWidth && altTop + tooltipRect.height <= window.innerHeight;\n        if (fitsInViewport && !checkOverlap(altLeft, altTop, tooltipRect.width, tooltipRect.height)) {\n          // Calculate distance from spotlight center for ranking\n          const spotlightCenterX = spotlightBounds.left + spotlightRect.width / 2;\n          const spotlightCenterY = spotlightBounds.top + spotlightRect.height / 2;\n          const tooltipCenterX = altLeft + tooltipRect.width / 2;\n          const tooltipCenterY = altTop + tooltipRect.height / 2;\n          const distance = Math.sqrt(Math.pow(tooltipCenterX - spotlightCenterX, 2) + Math.pow(tooltipCenterY - spotlightCenterY, 2));\n          alternatives.push({\n            position: pos,\n            left: altLeft,\n            top: altTop,\n            distance: distance\n          });\n        }\n      });\n\n      // Use the best alternative position (closest to spotlight without overlapping)\n      if (alternatives.length > 0) {\n        alternatives.sort((a, b) => a.distance - b.distance);\n        const best = alternatives[0];\n        finalPosition = best.position;\n        left = best.left;\n        top = best.top;\n      } else {\n        // Fallback: push tooltip away from spotlight center\n        const spotlightCenterX = spotlightBounds.left + spotlightRect.width / 2;\n        const spotlightCenterY = spotlightBounds.top + spotlightRect.height / 2;\n        const tooltipCenterX = testLeft + tooltipRect.width / 2;\n        const tooltipCenterY = testTop + tooltipRect.height / 2;\n\n        // Push away from spotlight\n        const pushDistance = Math.max(tooltipRect.width, tooltipRect.height) / 2 + 30;\n        if (tooltipCenterX < spotlightCenterX) {\n          left = spotlightBounds.left - tooltipRect.width - 30;\n        } else {\n          left = spotlightBounds.right + 30;\n        }\n        top = testTop;\n        finalPosition = tooltipCenterX < spotlightCenterX ? 'left' : 'right';\n      }\n    } else {\n      // Original position is fine\n      left = testLeft;\n      top = testTop;\n    }\n\n    // Add scroll offset to tooltip position (working implementation)\n    left += scrollLeft;\n    top += scrollTop;\n\n    // Adjust if tooltip goes off screen (considering scroll) - working implementation\n    const margin = isMobile ? isSmallMobile ? 12 : 16 : 20;\n    if (left < scrollLeft + margin) left = scrollLeft + margin;\n    if (left + tooltipRect.width > scrollLeft + window.innerWidth - margin) {\n      left = scrollLeft + window.innerWidth - tooltipRect.width - margin;\n    }\n    if (top < scrollTop + margin) top = scrollTop + margin;\n    if (top + tooltipRect.height > scrollTop + window.innerHeight - margin) {\n      top = scrollTop + window.innerHeight - tooltipRect.height - margin;\n    }\n\n    // Set tooltip position with absolute positioning (working implementation)\n    tooltip.style.position = 'absolute';\n    tooltip.style.left = left + 'px';\n    tooltip.style.top = top + 'px';\n\n    // Mobile-specific adjustments\n    if (isMobile) {\n      const tooltipWidth = isSmallMobile ? Math.min(260, window.innerWidth - 24) : Math.min(280, window.innerWidth - 32);\n      tooltip.style.maxWidth = tooltipWidth + 'px';\n      tooltip.style.width = tooltipWidth + 'px';\n    }\n\n    // Add mobile-specific spotlight styling\n    if (isMobile) {\n      spotlight.style.borderWidth = isSmallMobile ? '3px' : '2px';\n      spotlight.style.boxShadow = isSmallMobile ? '0 0 0 9999px rgba(0, 0, 0, 0.9), 0 0 20px #B6B09F, inset 0 0 20px rgba(182, 176, 159, 0.4)' : '0 0 0 9999px rgba(0, 0, 0, 0.85), 0 0 15px #B6B09F, inset 0 0 15px rgba(182, 176, 159, 0.3)';\n    }\n  }\n  nextStep() {\n    if (this.currentStep < this.tourSteps.length - 1) {\n      this.currentStep++;\n      this.showStep();\n    } else {\n      this.endTour();\n    }\n  }\n  endTour() {\n    this.isGuideActive = false;\n    const overlay = document.getElementById('tour-overlay');\n    if (overlay) {\n      overlay.style.display = 'none';\n    }\n\n    // Clean up scroll listener and animation frames\n    if (this.scrollListener) {\n      window.removeEventListener('scroll', this.scrollListener);\n      document.removeEventListener('scroll', this.scrollListener);\n      this.scrollListener = null;\n    }\n    if (this.animationFrame) {\n      cancelAnimationFrame(this.animationFrame);\n      this.animationFrame = null;\n    }\n    localStorage.setItem('quickdiff-tour-shown', 'true');\n  }\n  showQuickGuide() {\n    const modal = document.getElementById('quick-guide-modal');\n    if (modal) {\n      modal.style.display = 'flex';\n    }\n  }\n  hideQuickGuide() {\n    const modal = document.getElementById('quick-guide-modal');\n    if (modal) {\n      modal.style.display = 'none';\n    }\n  }\n\n  // Cleanup method for React component unmounting\n  destroy() {\n    this.endTour();\n\n    // Remove all event listeners\n    if (this.scrollListener) {\n      window.removeEventListener('scroll', this.scrollListener);\n    }\n\n    // Remove DOM elements\n    const overlay = document.getElementById('tour-overlay');\n    const modal = document.getElementById('quick-guide-modal');\n    const button = document.getElementById('quick-guide-btn');\n    const styles = document.getElementById('quick-guide-dynamic-styles');\n    if (overlay) overlay.remove();\n    if (modal) modal.remove();\n    if (button) button.remove();\n    if (styles) styles.remove();\n  }\n}\n\n// Export for React usage\nexport default ReactUserGuide;\n\n// Make available globally\nif (typeof window !== 'undefined') {\n  window.ReactUserGuide = ReactUserGuide;\n}\n\n// Auto-initialize for React\nif (typeof document !== 'undefined') {\n  document.addEventListener('DOMContentLoaded', () => {\n    if (!window.userGuideInitialized) {\n      new ReactUserGuide();\n      window.userGuideInitialized = true;\n    }\n  });\n}","map":{"version":3,"names":["ReactUserGuide","constructor","isGuideActive","currentStep","isRepositioning","scrollListener","tourSteps","target","title","content","position","init","waitForElements","createElements","setupEventListeners","localStorage","getItem","setTimeout","startTour","callback","checkElements","headerControls","document","querySelector","createTourOverlay","createQuickGuideButton","createQuickGuideModal","existing","getElementById","remove","overlay","createElement","id","style","cssText","innerHTML","body","appendChild","button","className","addModalStyles","modal","existingStyles","textContent","head","guideBtn","addEventListener","showQuickGuide","closeBtn","hideQuickGuide","restartBtn","skipBtn","nextBtn","endTour","nextStep","e","window","innerWidth","step","positionSpotlight","resizeTimeout","clearTimeout","tooltip","preventDefault","passive","setupScrollTracking","removeEventListener","animationFrame","cancelAnimationFrame","requestAnimationFrame","spotlight","isMobile","isSmallMobile","doPositionSpotlight","display","showStep","applyMobileTooltipStyles","length","tooltipBody","tooltipFooter","maxWidth","minWidth","margin","padding","width","boxSizing","flexDirection","gap","alignItems","justifyContent","fontSize","lineHeight","progressSpan","buttonsContainer","parentElement","textAlign","scrollIntoView","behavior","block","zIndex","rect","getBoundingClientRect","scrollTop","pageYOffset","documentElement","scrollLeft","pageXOffset","spotlightRect","left","top","height","classList","contains","buttons","querySelectorAll","minLeft","Infinity","minTop","maxRight","maxBottom","forEach","buttonRect","Math","min","max","right","bottom","tooltipRect","finalPosition","spotlightBounds","checkOverlap","testLeft","testTop","testWidth","testHeight","tooltipBounds","alternatives","positions","pos","altLeft","altTop","fitsInViewport","innerHeight","spotlightCenterX","spotlightCenterY","tooltipCenterX","tooltipCenterY","distance","sqrt","pow","push","sort","a","b","best","pushDistance","tooltipWidth","borderWidth","boxShadow","setItem","destroy","styles","userGuideInitialized"],"sources":["C:/Users/Joem/quickdiff-react/src/user-guide.js"],"sourcesContent":["/**\r\n * React-Compatible QuickDiff User Guide\r\n * Simple spotlight tour on first app open + Quick Guide button\r\n */\r\n\r\nclass ReactUserGuide {\r\n    constructor() {\r\n        this.isGuideActive = false;\r\n        this.currentStep = 0;\r\n        this.isRepositioning = false;\r\n        this.scrollListener = null;\r\n        this.tourSteps = [\r\n            {\r\n                target: '.title-section',\r\n                title: 'Welcome to QuickDiff! ⚡',\r\n                content: 'A powerful text comparison tool with multiple diff modes, syntax highlighting, and export options. Perfect for developers, writers, and anyone who needs to compare text efficiently.',\r\n                position: 'bottom'\r\n            },\r\n            {\r\n                target: '.header-controls',\r\n                title: 'Theme & Accessibility Controls',\r\n                content: '🔆 High Contrast (Ctrl+H) - Better visibility for accessibility<br>🌓 Dark/Light Theme (Ctrl+D) - Switch between themes<br>❓ Quick Guide - Access this help anytime',\r\n                position: 'bottom'\r\n            },\r\n            {\r\n                target: '.settings-panel',\r\n                title: 'Comparison Settings',\r\n                content: '📊 Diff Mode - Line-by-line, word-by-word, or character-level<br>👁️ View Mode - Side-by-side or inline comparison<br>🎨 Language - Syntax highlighting for code<br>⚙️ Ignore Options - Skip case, whitespace, or punctuation',\r\n                position: 'bottom'\r\n            },\r\n            {\r\n                target: '.input-section',\r\n                title: 'Text Input Areas',\r\n                content: '📝 Original Text (left) - Your base text for comparison<br>📝 Changed Text (right) - Modified version to compare<br>📁 Drag & Drop - Supports .txt, .md, .json, .html, .js, .py, .css files<br>💡 Tip: Files auto-detect programming language!',\r\n                position: 'top'\r\n            },\r\n            {\r\n                target: '.controls',\r\n                title: 'Main Action Controls',\r\n                content: '🔍 Compare Texts (Ctrl+Enter) - Start the comparison<br>🗑️ Clear All (Ctrl+K) - Reset both text areas<br>🔄 Swap Texts (Ctrl+S) - Exchange left and right content<br>📁 Load Files - Upload files from your computer',\r\n                position: 'top'\r\n            },\r\n            {\r\n                target: '.export-controls',\r\n                title: 'Export Your Results',\r\n                content: '📋 Copy (Ctrl+C) - Copy results to clipboard<br>📄 Plain Text - Export as .txt file<br>🌐 HTML - Export with styling and colors<br>📝 Markdown - Export in markdown format<br>📑 PDF - Generate PDF document',\r\n                position: 'top'\r\n            },\r\n            {\r\n                target: '.ai-controls',\r\n                title: '🧠 AI-Powered Analysis Tools',\r\n                content: '🧠 AI Explain (Alt+1) - Detailed analysis of changes and statistics<br>✨ AI Rewrite (Alt+2) - Smart suggestions for improvement<br>📝 AI Summary (Alt+3) - Generate concise summaries<br>🎭 AI Tone (Alt+4) - Analyze writing style and sentiment<br>🧹 AI Cleanup (Alt+5) - Fix formatting and text issues',\r\n                position: 'top'\r\n            }\r\n        ];\r\n        \r\n        this.init();\r\n    }\r\n    \r\n    init() {\r\n        // Wait for React components to render\r\n        this.waitForElements(() => {\r\n            this.createElements();\r\n            this.setupEventListeners();\r\n            \r\n            // Show tour on first visit\r\n            if (!localStorage.getItem('quickdiff-tour-shown')) {\r\n                setTimeout(() => this.startTour(), 1500);\r\n            }\r\n        });\r\n    }\r\n    \r\n    waitForElements(callback) {\r\n        const checkElements = () => {\r\n            const headerControls = document.querySelector('.header-controls');\r\n            if (headerControls) {\r\n                callback();\r\n            } else {\r\n                setTimeout(checkElements, 200);\r\n            }\r\n        };\r\n        checkElements();\r\n    }\r\n    \r\n    createElements() {\r\n        this.createTourOverlay();\r\n        this.createQuickGuideButton();\r\n        this.createQuickGuideModal();\r\n    }\r\n    \r\n    createTourOverlay() {\r\n        // Remove existing overlay\r\n        const existing = document.getElementById('tour-overlay');\r\n        if (existing) existing.remove();\r\n        \r\n        const overlay = document.createElement('div');\r\n        overlay.id = 'tour-overlay';\r\n        overlay.style.cssText = `\r\n            position: fixed;\r\n            top: 0;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 100%;\r\n            z-index: 10000;\r\n            pointer-events: none;\r\n            display: none;\r\n        `;\r\n        \r\n        overlay.innerHTML = `\r\n            <div id=\"tour-spotlight\" style=\"\r\n                position: absolute;\r\n                background: transparent;\r\n                border-radius: 12px;\r\n                box-shadow: 0 0 0 9999px rgba(0, 0, 0, 0.8);\r\n                border: 2px solid #B6B09F;\r\n                pointer-events: none;\r\n                transition: all 0.4s ease;\r\n                z-index: 10000;\r\n                display: block;\r\n            \"></div>\r\n            <div id=\"tour-tooltip\" style=\"\r\n                position: absolute;\r\n                background: linear-gradient(135deg, #F2F2F2 0%, #EAE4D5 100%);\r\n                border-radius: 15px;\r\n                border: 1px solid #B6B09F;\r\n                box-shadow: 0 4px 20px rgba(182, 176, 159, 0.3);\r\n                max-width: min(350px, 90vw);\r\n                min-width: min(280px, 85vw);\r\n                width: auto;\r\n                pointer-events: auto;\r\n                z-index: 10001;\r\n                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;\r\n            \">\r\n                <div id=\"tour-tooltip-body\" style=\"padding: 20px 24px 16px;\">\r\n                    <h3 id=\"tour-title\" style=\"\r\n                        margin: 0 0 12px 0;\r\n                        font-size: 18px;\r\n                        font-weight: 600;\r\n                        color: #000000;\r\n                    \"></h3>\r\n                    <p id=\"tour-content\" style=\"\r\n                        margin: 0;\r\n                        color: #000000;\r\n                        line-height: 1.5;\r\n                        font-size: 14px;\r\n                    \"></p>\r\n                </div>\r\n                <div id=\"tour-tooltip-footer\" style=\"\r\n                    padding: 0 24px 20px;\r\n                    display: flex;\r\n                    justify-content: space-between;\r\n                    align-items: center;\r\n                \">\r\n                    <span id=\"tour-progress\" style=\"\r\n                        font-size: 12px;\r\n                        color: #B6B09F;\r\n                    \"></span>\r\n                    <div style=\"display: flex; gap: 8px;\">\r\n                        <button id=\"tour-skip\" style=\"\r\n                            padding: 8px 16px;\r\n                            border: 2px solid #B6B09F;\r\n                            background: #F2F2F2;\r\n                            color: #000000;\r\n                            border-radius: 8px;\r\n                            cursor: pointer;\r\n                            font-size: 13px;\r\n                            transition: all 0.3s ease;\r\n                        \">Skip</button>\r\n                        <button id=\"tour-next\" style=\"\r\n                            padding: 8px 16px;\r\n                            border: none;\r\n                            background: linear-gradient(135deg, #000000 0%, #B6B09F 100%);\r\n                            color: #F2F2F2;\r\n                            border-radius: 8px;\r\n                            cursor: pointer;\r\n                            font-size: 13px;\r\n                            transition: all 0.3s ease;\r\n                        \">Next</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        `;\r\n        \r\n        document.body.appendChild(overlay);\r\n    }\r\n    \r\n    createQuickGuideButton() {\r\n        // Remove existing button\r\n        const existing = document.getElementById('quick-guide-btn');\r\n        if (existing) existing.remove();\r\n        \r\n        const button = document.createElement('button');\r\n        button.id = 'quick-guide-btn';\r\n        button.innerHTML = '❓';\r\n        button.title = 'Quick Guide';\r\n        button.className = 'btn btn-secondary btn-icon-only';\r\n        // Copy exact styles from contrast/theme buttons - no custom overrides\r\n        \r\n        \r\n        // Add to header controls\r\n        const headerControls = document.querySelector('.header-controls');\r\n        if (headerControls) {\r\n            headerControls.appendChild(button);\r\n        }\r\n        \r\n        // Add dynamic CSS for theme support\r\n        this.addModalStyles();\r\n    }\r\n    \r\n    createQuickGuideModal() {\r\n        // Remove existing modal\r\n        const existing = document.getElementById('quick-guide-modal');\r\n        if (existing) existing.remove();\r\n        \r\n        const modal = document.createElement('div');\r\n        modal.id = 'quick-guide-modal';\r\n        modal.style.cssText = `\r\n            position: fixed;\r\n            top: 0;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 100%;\r\n            background: rgba(0, 0, 0, 0.5);\r\n            z-index: 10000;\r\n            display: none;\r\n            align-items: center;\r\n            justify-content: center;\r\n            backdrop-filter: blur(4px);\r\n        `;\r\n        \r\n        modal.innerHTML = `\r\n            <div class=\"quick-guide-modal-content\" style=\"\r\n                background: linear-gradient(135deg, #F2F2F2 0%, #EAE4D5 100%);\r\n                border-radius: 16px;\r\n                max-width: 600px;\r\n                width: 90%;\r\n                max-height: 80vh;\r\n                overflow-y: auto;\r\n                box-shadow: 0 20px 60px rgba(182, 176, 159, 0.3);\r\n                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;\r\n                border: 1px solid #B6B09F;\r\n            \">\r\n                <div style=\"\r\n                    padding: 24px 32px 20px;\r\n                    border-bottom: 1px solid #B6B09F;\r\n                    display: flex;\r\n                    justify-content: space-between;\r\n                    align-items: center;\r\n                \">\r\n                    <h2 style=\"\r\n                        margin: 0;\r\n                        font-size: 24px;\r\n                        font-weight: 700;\r\n                        color: #000000;\r\n                    \">QuickDiff Guide</h2>\r\n                    <button id=\"close-guide-modal\" style=\"\r\n                        background: none;\r\n                        border: none;\r\n                        font-size: 28px;\r\n                        cursor: pointer;\r\n                        color: #B6B09F;\r\n                        padding: 0;\r\n                        width: 32px;\r\n                        height: 32px;\r\n                        display: flex;\r\n                        align-items: center;\r\n                        justify-content: center;\r\n                        border-radius: 6px;\r\n                        transition: all 0.2s ease;\r\n                    \">&times;</button>\r\n                </div>\r\n                <div style=\"padding: 24px 32px;\">\r\n                    <div style=\"margin-bottom: 24px;\">\r\n                        <h3 style=\"\r\n                            margin: 0 0 12px 0;\r\n                            font-size: 18px;\r\n                            font-weight: 600;\r\n                            color: #000000;\r\n                        \">🚀 Getting Started</h3>\r\n                        <ul style=\"\r\n                            margin: 0;\r\n                            padding-left: 20px;\r\n                            color: #000000;\r\n                            line-height: 1.6;\r\n                        \">\r\n                            <li>Paste or type text in both areas</li>\r\n                            <li>Choose your diff mode and settings</li>\r\n                            <li>Click \"Compare Texts\" to see differences</li>\r\n                            <li>Export results in your preferred format</li>\r\n                        </ul>\r\n                    </div>\r\n                    \r\n                    <div style=\"margin-bottom: 24px;\">\r\n                        <h3 style=\"\r\n                            margin: 0 0 12px 0;\r\n                            font-size: 18px;\r\n                            font-weight: 600;\r\n                            color: #000000;\r\n                        \">⚙️ Diff Modes</h3>\r\n                        <ul style=\"\r\n                            margin: 0;\r\n                            padding-left: 20px;\r\n                            color: #000000;\r\n                            line-height: 1.6;\r\n                        \">\r\n                            <li><strong>Line-by-line:</strong> Best for code and structured text</li>\r\n                            <li><strong>Word-by-word:</strong> Great for documents and prose</li>\r\n                            <li><strong>Character-level:</strong> Precise for small changes</li>\r\n                        </ul>\r\n                    </div>\r\n                    \r\n                    <div style=\"margin-bottom: 24px;\">\r\n                        <h3 style=\"\r\n                            margin: 0 0 12px 0;\r\n                            font-size: 18px;\r\n                            font-weight: 600;\r\n                            color: #000000;\r\n                        \">🎨 Features</h3>\r\n                        <ul style=\"\r\n                            margin: 0;\r\n                            padding-left: 20px;\r\n                            color: #000000;\r\n                            line-height: 1.6;\r\n                        \">\r\n                            <li>Drag & drop files for easy loading</li>\r\n                            <li>Live preview for real-time comparison</li>\r\n                            <li>Syntax highlighting for code</li>\r\n                            <li>Multiple export formats</li>\r\n                            <li>Dark/light theme with high contrast mode</li>\r\n                        </ul>\r\n                    </div>\r\n                    \r\n                    <div style=\"margin-bottom: 24px;\">\r\n                        <h3 style=\"\r\n                            margin: 0 0 12px 0;\r\n                            font-size: 18px;\r\n                            font-weight: 600;\r\n                            color: #000000;\r\n                        \">⌨️ Keyboard Shortcuts</h3>\r\n                        <div style=\"\r\n                            display: grid;\r\n                            grid-template-columns: 1fr 1fr;\r\n                            gap: 16px;\r\n                            color: #000000;\r\n                            line-height: 1.6;\r\n                            font-size: 14px;\r\n                        \">\r\n                            <div>\r\n                                <h4 style=\"\r\n                                    margin: 0 0 8px 0;\r\n                                    font-size: 14px;\r\n                                    font-weight: 600;\r\n                                    color: #000000;\r\n                                \">🔧 Main Actions</h4>\r\n                                <div style=\"margin-bottom: 4px;\"><kbd style=\"background: #EAE4D5; padding: 2px 6px; border-radius: 3px; font-size: 12px; border: 1px solid #B6B09F; color: #000000;\">Ctrl+Enter</kbd> Compare</div>\r\n                                <div style=\"margin-bottom: 4px;\"><kbd style=\"background: #EAE4D5; padding: 2px 6px; border-radius: 3px; font-size: 12px; border: 1px solid #B6B09F; color: #000000;\">Ctrl+K</kbd> Clear All</div>\r\n                                <div style=\"margin-bottom: 4px;\"><kbd style=\"background: #EAE4D5; padding: 2px 6px; border-radius: 3px; font-size: 12px; border: 1px solid #B6B09F; color: #000000;\">Ctrl+S</kbd> Swap Texts</div>\r\n                                <div style=\"margin-bottom: 4px;\"><kbd style=\"background: #EAE4D5; padding: 2px 6px; border-radius: 3px; font-size: 12px; border: 1px solid #B6B09F; color: #000000;\">Ctrl+C</kbd> Copy Results</div>\r\n                            </div>\r\n                            <div>\r\n                                <h4 style=\"\r\n                                    margin: 0 0 8px 0;\r\n                                    font-size: 14px;\r\n                                    font-weight: 600;\r\n                                    color: #000000;\r\n                                \">🎨 Interface</h4>\r\n                                <div style=\"margin-bottom: 4px;\"><kbd style=\"background: #EAE4D5; padding: 2px 6px; border-radius: 3px; font-size: 12px; border: 1px solid #B6B09F; color: #000000;\">Ctrl+D</kbd> Toggle Theme</div>\r\n                                <div style=\"margin-bottom: 4px;\"><kbd style=\"background: #EAE4D5; padding: 2px 6px; border-radius: 3px; font-size: 12px; border: 1px solid #B6B09F; color: #000000;\">Ctrl+H</kbd> High Contrast</div>\r\n                                <div style=\"margin-bottom: 4px;\"><kbd style=\"background: #EAE4D5; padding: 2px 6px; border-radius: 3px; font-size: 12px; border: 1px solid #B6B09F; color: #000000;\">F1</kbd> Show Guide</div>\r\n                                <div style=\"margin-bottom: 4px;\"><kbd style=\"background: #EAE4D5; padding: 2px 6px; border-radius: 3px; font-size: 12px; border: 1px solid #B6B09F; color: #000000;\">Escape</kbd> Close Overlays</div>\r\n                            </div>\r\n                        </div>\r\n                        <div style=\"\r\n                            margin-top: 12px;\r\n                            padding-top: 12px;\r\n                            border-top: 1px solid #B6B09F;\r\n                        \">\r\n                            <h4 style=\"\r\n                                margin: 0 0 8px 0;\r\n                                font-size: 14px;\r\n                                font-weight: 600;\r\n                                color: #000000;\r\n                            \">🧠 AI Features</h4>\r\n                            <div style=\"display: grid; grid-template-columns: 1fr 1fr; gap: 8px;\">\r\n                                <div><kbd style=\"background: #EAE4D5; padding: 2px 6px; border-radius: 3px; font-size: 12px; border: 1px solid #B6B09F; color: #000000;\">Alt+1</kbd> AI Explain</div>\r\n                                <div><kbd style=\"background: #EAE4D5; padding: 2px 6px; border-radius: 3px; font-size: 12px; border: 1px solid #B6B09F; color: #000000;\">Alt+2</kbd> AI Rewrite</div>\r\n                                <div><kbd style=\"background: #EAE4D5; padding: 2px 6px; border-radius: 3px; font-size: 12px; border: 1px solid #B6B09F; color: #000000;\">Alt+3</kbd> AI Summary</div>\r\n                                <div><kbd style=\"background: #EAE4D5; padding: 2px 6px; border-radius: 3px; font-size: 12px; border: 1px solid #B6B09F; color: #000000;\">Alt+4</kbd> AI Tone</div>\r\n                                <div><kbd style=\"background: #EAE4D5; padding: 2px 6px; border-radius: 3px; font-size: 12px; border: 1px solid #B6B09F; color: #000000;\">Alt+5</kbd> AI Cleanup</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div style=\"\r\n                        background: linear-gradient(135deg, #EAE4D5 0%, #F2F2F2 100%);\r\n                        padding: 16px;\r\n                        border-radius: 8px;\r\n                        text-align: center;\r\n                        border: 1px solid #B6B09F;\r\n                    \">\r\n                        <button id=\"restart-tour\" style=\"\r\n                            background: linear-gradient(135deg, #000000 0%, #B6B09F 100%);\r\n                            color: #F2F2F2;\r\n                            border: 1px solid #B6B09F;\r\n                            padding: 12px 20px;\r\n                            border-radius: 8px;\r\n                            cursor: pointer;\r\n                            font-size: 14px;\r\n                            font-weight: 500;\r\n                            transition: all 0.3s ease;\r\n                            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);\r\n                        \">🎯 Restart Tour</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        `;\r\n        \r\n        document.body.appendChild(modal);\r\n    }\r\n    \r\n    addModalStyles() {\r\n        // Remove existing styles\r\n        const existingStyles = document.getElementById('quick-guide-dynamic-styles');\r\n        if (existingStyles) existingStyles.remove();\r\n        \r\n        const style = document.createElement('style');\r\n        style.id = 'quick-guide-dynamic-styles';\r\n        style.textContent = `\r\n            /* Quick Guide Modal Theme Support */\r\n            [data-theme=\"dark\"] .quick-guide-modal-content {\r\n                background: linear-gradient(135deg, #000000 0%, #B6B09F 100%) !important;\r\n                border: 1px solid #B6B09F !important;\r\n                box-shadow: 0 20px 60px rgba(0, 0, 0, 0.5) !important;\r\n            }\r\n            \r\n            [data-theme=\"dark\"] .quick-guide-modal-content h2,\r\n            [data-theme=\"dark\"] .quick-guide-modal-content h3,\r\n            [data-theme=\"dark\"] .quick-guide-modal-content h4,\r\n            [data-theme=\"dark\"] .quick-guide-modal-content ul,\r\n            [data-theme=\"dark\"] .quick-guide-modal-content div {\r\n                color: #F2F2F2 !important;\r\n            }\r\n            \r\n            [data-theme=\"dark\"] .quick-guide-modal-content kbd {\r\n                background: #000000 !important;\r\n                border: 1px solid #EAE4D5 !important;\r\n                color: #F2F2F2 !important;\r\n            }\r\n            \r\n            [data-theme=\"dark\"] #close-guide-modal {\r\n                color: #EAE4D5 !important;\r\n            }\r\n            \r\n            [data-theme=\"dark\"] #close-guide-modal:hover {\r\n                background: rgba(242, 242, 242, 0.1) !important;\r\n                color: #F2F2F2 !important;\r\n            }\r\n            \r\n            [data-theme=\"dark\"] #restart-tour {\r\n                background: linear-gradient(135deg, #F2F2F2 0%, #EAE4D5 100%) !important;\r\n                color: #000000 !important;\r\n                border: 1px solid #EAE4D5 !important;\r\n            }\r\n            \r\n            [data-theme=\"dark\"] #restart-tour:hover {\r\n                background: linear-gradient(135deg, #EAE4D5 0%, #F2F2F2 100%) !important;\r\n                transform: translateY(-2px) !important;\r\n                box-shadow: 0 8px 25px rgba(242, 242, 242, 0.2) !important;\r\n            }\r\n            \r\n            /* Light theme hover effects */\r\n            #close-guide-modal:hover {\r\n                background: rgba(182, 176, 159, 0.1) !important;\r\n                color: #000000 !important;\r\n            }\r\n            \r\n            #restart-tour:hover {\r\n                background: linear-gradient(135deg, #B6B09F 0%, #000000 100%) !important;\r\n                transform: translateY(-2px) !important;\r\n                box-shadow: 0 8px 25px rgba(0, 0, 0, 0.4) !important;\r\n            }\r\n            \r\n            /* High contrast support */\r\n            [data-contrast=\"high\"] .quick-guide-modal-content {\r\n                border: 3px solid #000000 !important;\r\n                background: #ffffff !important;\r\n            }\r\n            \r\n            [data-contrast=\"high\"] .quick-guide-modal-content h2,\r\n            [data-contrast=\"high\"] .quick-guide-modal-content h3,\r\n            [data-contrast=\"high\"] .quick-guide-modal-content h4,\r\n            [data-contrast=\"high\"] .quick-guide-modal-content ul,\r\n            [data-contrast=\"high\"] .quick-guide-modal-content div {\r\n                color: #000000 !important;\r\n                font-weight: 700 !important;\r\n            }\r\n            \r\n            [data-contrast=\"high\"] .quick-guide-modal-content kbd {\r\n                background: #ffffff !important;\r\n                border: 3px solid #000000 !important;\r\n                color: #000000 !important;\r\n                font-weight: 700 !important;\r\n            }\r\n            \r\n            [data-contrast=\"high\"] #restart-tour {\r\n                background: #000000 !important;\r\n                color: #ffffff !important;\r\n                border: 3px solid #ffffff !important;\r\n                font-weight: 700 !important;\r\n            }\r\n            \r\n            [data-contrast=\"high\"] #restart-tour:hover {\r\n                background: #ffffff !important;\r\n                color: #000000 !important;\r\n                border: 3px solid #000000 !important;\r\n            }\r\n            \r\n            /* Dark + High contrast */\r\n            [data-theme=\"dark\"][data-contrast=\"high\"] .quick-guide-modal-content {\r\n                border: 3px solid #ffffff !important;\r\n                background: #000000 !important;\r\n            }\r\n            \r\n            [data-theme=\"dark\"][data-contrast=\"high\"] .quick-guide-modal-content h2,\r\n            [data-theme=\"dark\"][data-contrast=\"high\"] .quick-guide-modal-content h3,\r\n            [data-theme=\"dark\"][data-contrast=\"high\"] .quick-guide-modal-content h4,\r\n            [data-theme=\"dark\"][data-contrast=\"high\"] .quick-guide-modal-content ul,\r\n            [data-theme=\"dark\"][data-contrast=\"high\"] .quick-guide-modal-content div {\r\n                color: #ffffff !important;\r\n                font-weight: 700 !important;\r\n            }\r\n            \r\n            [data-theme=\"dark\"][data-contrast=\"high\"] .quick-guide-modal-content kbd {\r\n                background: #000000 !important;\r\n                border: 3px solid #ffffff !important;\r\n                color: #ffffff !important;\r\n                font-weight: 700 !important;\r\n            }\r\n            \r\n            [data-theme=\"dark\"][data-contrast=\"high\"] #restart-tour {\r\n                background: #ffffff !important;\r\n                color: #000000 !important;\r\n                border: 3px solid #000000 !important;\r\n                font-weight: 700 !important;\r\n            }\r\n            \r\n            [data-theme=\"dark\"][data-contrast=\"high\"] #restart-tour:hover {\r\n                background: #000000 !important;\r\n                color: #ffffff !important;\r\n                border: 3px solid #ffffff !important;\r\n            }\r\n        `;\r\n        \r\n        document.head.appendChild(style);\r\n    }\r\n    \r\n    setupEventListeners() {\r\n        // Quick Guide button\r\n        const guideBtn = document.getElementById('quick-guide-btn');\r\n        if (guideBtn) {\r\n            guideBtn.addEventListener('click', () => this.showQuickGuide());\r\n        }\r\n        \r\n        // Close modal\r\n        const closeBtn = document.getElementById('close-guide-modal');\r\n        if (closeBtn) {\r\n            closeBtn.addEventListener('click', () => this.hideQuickGuide());\r\n        }\r\n        \r\n        // Restart tour\r\n        const restartBtn = document.getElementById('restart-tour');\r\n        if (restartBtn) {\r\n            restartBtn.addEventListener('click', () => {\r\n                this.hideQuickGuide();\r\n                this.startTour();\r\n            });\r\n        }\r\n        \r\n        // Tour controls\r\n        const skipBtn = document.getElementById('tour-skip');\r\n        const nextBtn = document.getElementById('tour-next');\r\n        \r\n        if (skipBtn) {\r\n            skipBtn.addEventListener('click', () => this.endTour());\r\n        }\r\n        \r\n        if (nextBtn) {\r\n            nextBtn.addEventListener('click', () => this.nextStep());\r\n        }\r\n        \r\n        // Close modal when clicking outside\r\n        const modal = document.getElementById('quick-guide-modal');\r\n        if (modal) {\r\n            modal.addEventListener('click', (e) => {\r\n                if (e.target === modal) {\r\n                    this.hideQuickGuide();\r\n                }\r\n            });\r\n        }\r\n        \r\n        // Close tour when clicking outside\r\n        const overlay = document.getElementById('tour-overlay');\r\n        if (overlay) {\r\n            overlay.addEventListener('click', (e) => {\r\n                if (e.target === overlay) {\r\n                    this.endTour();\r\n                }\r\n            });\r\n        }\r\n        \r\n        // Mobile-specific event handlers\r\n        if (window.innerWidth <= 768) {\r\n            // Handle orientation change on mobile\r\n            window.addEventListener('orientationchange', () => {\r\n                setTimeout(() => {\r\n                    if (this.isGuideActive) {\r\n                        const step = this.tourSteps[this.currentStep];\r\n                        const target = document.querySelector(step.target);\r\n                        if (target) {\r\n                            this.positionSpotlight(target, step.position);\r\n                        }\r\n                    }\r\n                }, 500);\r\n            });\r\n            \r\n            // Handle window resize on mobile\r\n            let resizeTimeout;\r\n            window.addEventListener('resize', () => {\r\n                clearTimeout(resizeTimeout);\r\n                resizeTimeout = setTimeout(() => {\r\n                    if (this.isGuideActive) {\r\n                        const step = this.tourSteps[this.currentStep];\r\n                        const target = document.querySelector(step.target);\r\n                        if (target) {\r\n                            this.positionSpotlight(target, step.position);\r\n                        }\r\n                    }\r\n                }, 300);\r\n            });\r\n            \r\n            // Prevent zoom issues on mobile\r\n            const tooltip = document.getElementById('tour-tooltip');\r\n            if (tooltip) {\r\n                tooltip.addEventListener('touchstart', (e) => {\r\n                    e.preventDefault();\r\n                }, { passive: false });\r\n            }\r\n        }\r\n        \r\n        // Add scroll tracking for all devices\r\n        this.setupScrollTracking();\r\n    }\r\n    \r\n    setupScrollTracking() {\r\n        // Remove existing scroll listener if any\r\n        if (this.scrollListener) {\r\n            window.removeEventListener('scroll', this.scrollListener);\r\n            document.removeEventListener('scroll', this.scrollListener);\r\n        }\r\n        \r\n        // Real-time scroll handler for immediate response\r\n        this.scrollListener = () => {\r\n            if (!this.isGuideActive || this.isRepositioning) return;\r\n            \r\n            // Use requestAnimationFrame for smooth 60fps updates\r\n            if (this.animationFrame) {\r\n                cancelAnimationFrame(this.animationFrame);\r\n            }\r\n            \r\n            this.animationFrame = requestAnimationFrame(() => {\r\n                const step = this.tourSteps[this.currentStep];\r\n                const target = document.querySelector(step.target);\r\n                if (target) {\r\n                    const spotlight = document.getElementById('tour-spotlight');\r\n                    const tooltip = document.getElementById('tour-tooltip');\r\n                    if (spotlight && tooltip) {\r\n                        const isMobile = window.innerWidth <= 768;\r\n                        const isSmallMobile = window.innerWidth <= 480;\r\n                        this.doPositionSpotlight(target, step.position, spotlight, tooltip, isMobile, isSmallMobile);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        \r\n        // Add listeners to both window and document for better coverage\r\n        window.addEventListener('scroll', this.scrollListener, { passive: true });\r\n        document.addEventListener('scroll', this.scrollListener, { passive: true });\r\n    }\r\n    \r\n    startTour() {\r\n        this.isGuideActive = true;\r\n        this.currentStep = 0;\r\n        \r\n        const overlay = document.getElementById('tour-overlay');\r\n        if (overlay) {\r\n            overlay.style.display = 'block';\r\n            this.showStep();\r\n        }\r\n    }\r\n    \r\n    showStep() {\r\n        const step = this.tourSteps[this.currentStep];\r\n        const target = document.querySelector(step.target);\r\n        \r\n        if (!target) {\r\n            // Try next step if target not found\r\n            this.nextStep();\r\n            return;\r\n        }\r\n        \r\n        // Apply mobile-specific tooltip styles\r\n        this.applyMobileTooltipStyles();\r\n        \r\n        // Update tooltip content\r\n        document.getElementById('tour-title').textContent = step.title;\r\n        document.getElementById('tour-content').innerHTML = step.content;\r\n        document.getElementById('tour-progress').textContent = \r\n            `${this.currentStep + 1} of ${this.tourSteps.length}`;\r\n        \r\n        // Update next button\r\n        const nextBtn = document.getElementById('tour-next');\r\n        if (this.currentStep === this.tourSteps.length - 1) {\r\n            nextBtn.textContent = 'Finish';\r\n        } else {\r\n            nextBtn.textContent = 'Next';\r\n        }\r\n        \r\n        // Position spotlight and tooltip\r\n        setTimeout(() => {\r\n            this.positionSpotlight(target, step.position);\r\n        }, 100);\r\n    }\r\n    \r\n    applyMobileTooltipStyles() {\r\n        const isMobile = window.innerWidth <= 768;\r\n        const isSmallMobile = window.innerWidth <= 480;\r\n        \r\n        if (!isMobile) return;\r\n        \r\n        const tooltip = document.getElementById('tour-tooltip');\r\n        const tooltipBody = document.getElementById('tour-tooltip-body');\r\n        const tooltipFooter = document.getElementById('tour-tooltip-footer');\r\n        const title = document.getElementById('tour-title');\r\n        const content = document.getElementById('tour-content');\r\n        \r\n        if (tooltip) {\r\n            tooltip.style.maxWidth = isSmallMobile ? '95vw' : '90vw';\r\n            tooltip.style.minWidth = isSmallMobile ? 'min(260px, 90vw)' : 'min(280px, 85vw)';\r\n            tooltip.style.margin = isSmallMobile ? '8px' : '10px';\r\n        }\r\n        \r\n        if (tooltipBody) {\r\n            tooltipBody.style.padding = isSmallMobile ? '16px 20px 12px' : '18px 22px 14px';\r\n        }\r\n        \r\n        if (tooltipFooter) {\r\n            tooltipFooter.style.padding = isSmallMobile ? '0 16px 16px' : '0 20px 18px';\r\n            tooltipFooter.style.display = 'flex';\r\n            tooltipFooter.style.width = '100%';\r\n            tooltipFooter.style.boxSizing = 'border-box';\r\n            \r\n            if (isSmallMobile) {\r\n                tooltipFooter.style.flexDirection = 'column';\r\n                tooltipFooter.style.gap = '12px';\r\n                tooltipFooter.style.alignItems = 'stretch';\r\n            } else {\r\n                // Reset to default for tablets and desktop\r\n                tooltipFooter.style.flexDirection = 'row';\r\n                tooltipFooter.style.alignItems = 'center';\r\n                tooltipFooter.style.justifyContent = 'space-between';\r\n            }\r\n        }\r\n        \r\n        if (title) {\r\n            title.style.fontSize = isSmallMobile ? '16px' : '17px';\r\n        }\r\n        \r\n        if (content) {\r\n            content.style.fontSize = isSmallMobile ? '13px' : '14px';\r\n            content.style.lineHeight = '1.4';\r\n        }\r\n        \r\n        // Adjust button sizes for mobile\r\n        const skipBtn = document.getElementById('tour-skip');\r\n        const nextBtn = document.getElementById('tour-next');\r\n        const progressSpan = document.getElementById('tour-progress');\r\n        \r\n        if (skipBtn && nextBtn) {\r\n            // Get buttons container\r\n            const buttonsContainer = skipBtn.parentElement;\r\n            \r\n            if (isSmallMobile) {\r\n                // Mobile phone layout - stack buttons vertically with better visibility\r\n                skipBtn.style.cssText = 'padding: 12px 20px; font-size: 15px; min-width: 120px; width: 100%; margin: 0; border: 2px solid #B6B09F; background: #F2F2F2; color: #000000; border-radius: 8px; cursor: pointer; transition: all 0.3s ease; box-sizing: border-box; font-weight: 600; box-shadow: 0 2px 8px rgba(0,0,0,0.1);';\r\n                nextBtn.style.cssText = 'padding: 12px 20px; font-size: 15px; min-width: 120px; width: 100%; margin: 0; background: linear-gradient(135deg, #000000 0%, #B6B09F 100%); color: #F2F2F2; border: none; border-radius: 8px; cursor: pointer; transition: all 0.3s ease; box-sizing: border-box; font-weight: 600; box-shadow: 0 2px 8px rgba(0,0,0,0.2);';\r\n                \r\n                // Configure buttons container for mobile\r\n                if (buttonsContainer) {\r\n                    buttonsContainer.style.display = 'flex';\r\n                    buttonsContainer.style.flexDirection = 'column';\r\n                    buttonsContainer.style.gap = '12px';\r\n                    buttonsContainer.style.width = '100%';\r\n                    buttonsContainer.style.alignItems = 'stretch';\r\n                    buttonsContainer.style.justifyContent = 'center';\r\n                }\r\n            } else if (isMobile) {\r\n                // Tablet layout - side by side but larger and more visible\r\n                skipBtn.style.cssText = 'padding: 10px 18px; font-size: 14px; min-width: 90px; margin: 0; border: 2px solid #B6B09F; background: #F2F2F2; color: #000000; border-radius: 8px; cursor: pointer; transition: all 0.3s ease; box-sizing: border-box; font-weight: 500; box-shadow: 0 2px 6px rgba(0,0,0,0.1);';\r\n                nextBtn.style.cssText = 'padding: 10px 18px; font-size: 14px; min-width: 90px; margin: 0; background: linear-gradient(135deg, #000000 0%, #B6B09F 100%); color: #F2F2F2; border: none; border-radius: 8px; cursor: pointer; transition: all 0.3s ease; box-sizing: border-box; font-weight: 500; box-shadow: 0 2px 6px rgba(0,0,0,0.15);';\r\n                \r\n                // Configure buttons container for tablet\r\n                if (buttonsContainer) {\r\n                    buttonsContainer.style.display = 'flex';\r\n                    buttonsContainer.style.flexDirection = 'row';\r\n                    buttonsContainer.style.gap = '12px';\r\n                    buttonsContainer.style.justifyContent = 'center';\r\n                    buttonsContainer.style.alignItems = 'center';\r\n                }\r\n            } else {\r\n                // Desktop layout - original styling\r\n                skipBtn.style.cssText = 'padding: 8px 16px; font-size: 13px; min-width: 70px; border: 2px solid #B6B09F; background: #F2F2F2; color: #000000; border-radius: 8px; cursor: pointer; transition: all 0.3s ease;';\r\n                nextBtn.style.cssText = 'padding: 8px 16px; font-size: 13px; min-width: 70px; background: linear-gradient(135deg, #000000 0%, #B6B09F 100%); color: #F2F2F2; border: none; border-radius: 8px; cursor: pointer; transition: all 0.3s ease;';\r\n                \r\n                // Configure buttons container for desktop\r\n                if (buttonsContainer) {\r\n                    buttonsContainer.style.display = 'flex';\r\n                    buttonsContainer.style.flexDirection = 'row';\r\n                    buttonsContainer.style.gap = '8px';\r\n                }\r\n            }\r\n        }\r\n        \r\n        // Adjust progress text for mobile\r\n        if (progressSpan) {\r\n            progressSpan.style.fontSize = isSmallMobile ? '11px' : '12px';\r\n            if (isSmallMobile) {\r\n                progressSpan.style.textAlign = 'center';\r\n                progressSpan.style.width = '100%';\r\n            }\r\n        }\r\n    }\r\n    \r\n    positionSpotlight(target, position) {\r\n        const spotlight = document.getElementById('tour-spotlight');\r\n        const tooltip = document.getElementById('tour-tooltip');\r\n        \r\n        if (!spotlight || !tooltip || !target) return;\r\n        \r\n        // Mobile detection\r\n        const isMobile = window.innerWidth <= 768;\r\n        const isSmallMobile = window.innerWidth <= 480;\r\n        \r\n        // Scroll target into view first (from working implementation)\r\n        if (!this.isRepositioning) {\r\n            this.isRepositioning = true;\r\n            target.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n            \r\n            // Position spotlight and tooltip after a short delay to ensure scroll is complete\r\n            setTimeout(() => {\r\n                this.doPositionSpotlight(target, position, spotlight, tooltip, isMobile, isSmallMobile);\r\n                \r\n                // Make sure spotlight is visible (from working implementation)\r\n                spotlight.style.display = 'block';\r\n                spotlight.style.zIndex = '10000';\r\n                this.isRepositioning = false;\r\n            }, 300);\r\n        } else {\r\n            this.doPositionSpotlight(target, position, spotlight, tooltip, isMobile, isSmallMobile);\r\n        }\r\n    }\r\n    \r\n    doPositionSpotlight(target, position, spotlight, tooltip, isMobile, isSmallMobile) {\r\n        // Get fresh coordinates after any scrolling\r\n        const rect = target.getBoundingClientRect();\r\n        const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\r\n        const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\r\n        \r\n        // Calculate spotlight dimensions (adapted from working quickdiff implementation)\r\n        let spotlightRect = {\r\n            left: rect.left,\r\n            top: rect.top,\r\n            width: rect.width,\r\n            height: rect.height\r\n        };\r\n        let padding = isMobile ? (isSmallMobile ? 8 : 10) : 12;\r\n        \r\n        // Enhanced handling for control groups (from working implementation)\r\n        if (target.classList.contains('header-controls') || \r\n            target.classList.contains('controls') || \r\n            target.classList.contains('export-controls') ||\r\n            target.classList.contains('ai-controls') ||\r\n            target.classList.contains('main-controls') ||\r\n            target.id === 'aiControls') {\r\n            \r\n            const buttons = target.querySelectorAll('button:not([style*=\"display: none\"]):not([hidden])');\r\n            if (buttons.length > 0) {\r\n                // Calculate the bounding box of all visible buttons\r\n                let minLeft = Infinity, minTop = Infinity, maxRight = -Infinity, maxBottom = -Infinity;\r\n                \r\n                buttons.forEach(button => {\r\n                    const buttonRect = button.getBoundingClientRect();\r\n                    if (buttonRect.width > 0 && buttonRect.height > 0) {\r\n                        minLeft = Math.min(minLeft, buttonRect.left);\r\n                        minTop = Math.min(minTop, buttonRect.top);\r\n                        maxRight = Math.max(maxRight, buttonRect.right);\r\n                        maxBottom = Math.max(maxBottom, buttonRect.bottom);\r\n                    }\r\n                });\r\n                \r\n                if (minLeft !== Infinity) {\r\n                    // Use the tighter bounding box for spotlight\r\n                    spotlightRect = {\r\n                        left: minLeft,\r\n                        top: minTop,\r\n                        width: maxRight - minLeft,\r\n                        height: maxBottom - minTop\r\n                    };\r\n                    padding = isMobile ? (isSmallMobile ? 6 : 8) : 8; // Smaller padding for button groups\r\n                }\r\n            }\r\n        }\r\n        \r\n        // Position spotlight with scroll offset (working implementation approach)\r\n        spotlight.style.position = 'absolute';\r\n        spotlight.style.left = (spotlightRect.left + scrollLeft - padding) + 'px';\r\n        spotlight.style.top = (spotlightRect.top + scrollTop - padding) + 'px';\r\n        spotlight.style.width = (spotlightRect.width + (padding * 2)) + 'px';\r\n        spotlight.style.height = (spotlightRect.height + (padding * 2)) + 'px';\r\n        \r\n        // Position tooltip using working implementation approach with smart collision detection\r\n        const tooltipRect = tooltip.getBoundingClientRect();\r\n        let left, top;\r\n        let finalPosition = position;\r\n        \r\n        // Smart positioning to avoid blocking spotlight\r\n        const spotlightBounds = {\r\n            left: spotlightRect.left,\r\n            top: spotlightRect.top,\r\n            right: spotlightRect.left + spotlightRect.width,\r\n            bottom: spotlightRect.top + spotlightRect.height\r\n        };\r\n        \r\n        // Check if tooltip would overlap with spotlight and adjust position\r\n        const checkOverlap = (testLeft, testTop, testWidth, testHeight) => {\r\n            const tooltipBounds = {\r\n                left: testLeft,\r\n                top: testTop,\r\n                right: testLeft + testWidth,\r\n                bottom: testTop + testHeight\r\n            };\r\n            \r\n            return !(tooltipBounds.right < spotlightBounds.left || \r\n                    tooltipBounds.left > spotlightBounds.right || \r\n                    tooltipBounds.bottom < spotlightBounds.top || \r\n                    tooltipBounds.top > spotlightBounds.bottom);\r\n        };\r\n        \r\n        // Calculate initial position\r\n        let testLeft, testTop;\r\n        switch (position) {\r\n            case 'top':\r\n                testLeft = rect.left + (rect.width / 2) - (tooltipRect.width / 2);\r\n                testTop = rect.top - tooltipRect.height - 20;\r\n                break;\r\n            case 'bottom':\r\n            default:\r\n                testLeft = rect.left + (rect.width / 2) - (tooltipRect.width / 2);\r\n                testTop = rect.bottom + 20;\r\n                break;\r\n            case 'left':\r\n                testLeft = rect.left - tooltipRect.width - 20;\r\n                testTop = rect.top + (rect.height / 2) - (tooltipRect.height / 2);\r\n                break;\r\n            case 'right':\r\n                testLeft = rect.right + 20;\r\n                testTop = rect.top + (rect.height / 2) - (tooltipRect.height / 2);\r\n                break;\r\n        }\r\n        \r\n        // Check for overlap and try alternative positions\r\n        if (checkOverlap(testLeft, testTop, tooltipRect.width, tooltipRect.height)) {\r\n            const alternatives = [];\r\n            \r\n            // Try all four positions and rank them by distance from spotlight\r\n            const positions = ['top', 'bottom', 'left', 'right'];\r\n            positions.forEach(pos => {\r\n                let altLeft, altTop;\r\n                switch (pos) {\r\n                    case 'top':\r\n                        altLeft = rect.left + (rect.width / 2) - (tooltipRect.width / 2);\r\n                        altTop = rect.top - tooltipRect.height - 20;\r\n                        break;\r\n                    case 'bottom':\r\n                        altLeft = rect.left + (rect.width / 2) - (tooltipRect.width / 2);\r\n                        altTop = rect.bottom + 20;\r\n                        break;\r\n                    case 'left':\r\n                        altLeft = rect.left - tooltipRect.width - 20;\r\n                        altTop = rect.top + (rect.height / 2) - (tooltipRect.height / 2);\r\n                        break;\r\n                    case 'right':\r\n                        altLeft = rect.right + 20;\r\n                        altTop = rect.top + (rect.height / 2) - (tooltipRect.height / 2);\r\n                        break;\r\n                }\r\n                \r\n                // Check if this position fits in viewport\r\n                const fitsInViewport = altLeft >= 0 && \r\n                                     altTop >= 0 && \r\n                                     altLeft + tooltipRect.width <= window.innerWidth && \r\n                                     altTop + tooltipRect.height <= window.innerHeight;\r\n                \r\n                if (fitsInViewport && !checkOverlap(altLeft, altTop, tooltipRect.width, tooltipRect.height)) {\r\n                    // Calculate distance from spotlight center for ranking\r\n                    const spotlightCenterX = spotlightBounds.left + (spotlightRect.width / 2);\r\n                    const spotlightCenterY = spotlightBounds.top + (spotlightRect.height / 2);\r\n                    const tooltipCenterX = altLeft + (tooltipRect.width / 2);\r\n                    const tooltipCenterY = altTop + (tooltipRect.height / 2);\r\n                    const distance = Math.sqrt(\r\n                        Math.pow(tooltipCenterX - spotlightCenterX, 2) + \r\n                        Math.pow(tooltipCenterY - spotlightCenterY, 2)\r\n                    );\r\n                    \r\n                    alternatives.push({\r\n                        position: pos,\r\n                        left: altLeft,\r\n                        top: altTop,\r\n                        distance: distance\r\n                    });\r\n                }\r\n            });\r\n            \r\n            // Use the best alternative position (closest to spotlight without overlapping)\r\n            if (alternatives.length > 0) {\r\n                alternatives.sort((a, b) => a.distance - b.distance);\r\n                const best = alternatives[0];\r\n                finalPosition = best.position;\r\n                left = best.left;\r\n                top = best.top;\r\n            } else {\r\n                // Fallback: push tooltip away from spotlight center\r\n                const spotlightCenterX = spotlightBounds.left + (spotlightRect.width / 2);\r\n                const spotlightCenterY = spotlightBounds.top + (spotlightRect.height / 2);\r\n                const tooltipCenterX = testLeft + (tooltipRect.width / 2);\r\n                const tooltipCenterY = testTop + (tooltipRect.height / 2);\r\n                \r\n                // Push away from spotlight\r\n                const pushDistance = Math.max(tooltipRect.width, tooltipRect.height) / 2 + 30;\r\n                if (tooltipCenterX < spotlightCenterX) {\r\n                    left = spotlightBounds.left - tooltipRect.width - 30;\r\n                } else {\r\n                    left = spotlightBounds.right + 30;\r\n                }\r\n                top = testTop;\r\n                finalPosition = tooltipCenterX < spotlightCenterX ? 'left' : 'right';\r\n            }\r\n        } else {\r\n            // Original position is fine\r\n            left = testLeft;\r\n            top = testTop;\r\n        }\r\n        \r\n        // Add scroll offset to tooltip position (working implementation)\r\n        left += scrollLeft;\r\n        top += scrollTop;\r\n        \r\n        // Adjust if tooltip goes off screen (considering scroll) - working implementation\r\n        const margin = isMobile ? (isSmallMobile ? 12 : 16) : 20;\r\n        if (left < scrollLeft + margin) left = scrollLeft + margin;\r\n        if (left + tooltipRect.width > scrollLeft + window.innerWidth - margin) {\r\n            left = scrollLeft + window.innerWidth - tooltipRect.width - margin;\r\n        }\r\n        if (top < scrollTop + margin) top = scrollTop + margin;\r\n        if (top + tooltipRect.height > scrollTop + window.innerHeight - margin) {\r\n            top = scrollTop + window.innerHeight - tooltipRect.height - margin;\r\n        }\r\n        \r\n        // Set tooltip position with absolute positioning (working implementation)\r\n        tooltip.style.position = 'absolute';\r\n        tooltip.style.left = left + 'px';\r\n        tooltip.style.top = top + 'px';\r\n        \r\n        // Mobile-specific adjustments\r\n        if (isMobile) {\r\n            const tooltipWidth = isSmallMobile ? Math.min(260, window.innerWidth - 24) : Math.min(280, window.innerWidth - 32);\r\n            tooltip.style.maxWidth = tooltipWidth + 'px';\r\n            tooltip.style.width = tooltipWidth + 'px';\r\n        }\r\n        \r\n        // Add mobile-specific spotlight styling\r\n        if (isMobile) {\r\n            spotlight.style.borderWidth = isSmallMobile ? '3px' : '2px';\r\n            spotlight.style.boxShadow = isSmallMobile ? \r\n                '0 0 0 9999px rgba(0, 0, 0, 0.9), 0 0 20px #B6B09F, inset 0 0 20px rgba(182, 176, 159, 0.4)' :\r\n                '0 0 0 9999px rgba(0, 0, 0, 0.85), 0 0 15px #B6B09F, inset 0 0 15px rgba(182, 176, 159, 0.3)';\r\n        }\r\n    }\r\n    \r\n    nextStep() {\r\n        if (this.currentStep < this.tourSteps.length - 1) {\r\n            this.currentStep++;\r\n            this.showStep();\r\n        } else {\r\n            this.endTour();\r\n        }\r\n    }\r\n    \r\n    endTour() {\r\n        this.isGuideActive = false;\r\n        const overlay = document.getElementById('tour-overlay');\r\n        if (overlay) {\r\n            overlay.style.display = 'none';\r\n        }\r\n        \r\n        // Clean up scroll listener and animation frames\r\n        if (this.scrollListener) {\r\n            window.removeEventListener('scroll', this.scrollListener);\r\n            document.removeEventListener('scroll', this.scrollListener);\r\n            this.scrollListener = null;\r\n        }\r\n        \r\n        if (this.animationFrame) {\r\n            cancelAnimationFrame(this.animationFrame);\r\n            this.animationFrame = null;\r\n        }\r\n        \r\n        localStorage.setItem('quickdiff-tour-shown', 'true');\r\n    }\r\n    \r\n    showQuickGuide() {\r\n        const modal = document.getElementById('quick-guide-modal');\r\n        if (modal) {\r\n            modal.style.display = 'flex';\r\n        }\r\n    }\r\n    \r\n    hideQuickGuide() {\r\n        const modal = document.getElementById('quick-guide-modal');\r\n        if (modal) {\r\n            modal.style.display = 'none';\r\n        }\r\n    }\r\n    \r\n    // Cleanup method for React component unmounting\r\n    destroy() {\r\n        this.endTour();\r\n        \r\n        // Remove all event listeners\r\n        if (this.scrollListener) {\r\n            window.removeEventListener('scroll', this.scrollListener);\r\n        }\r\n        \r\n        // Remove DOM elements\r\n        const overlay = document.getElementById('tour-overlay');\r\n        const modal = document.getElementById('quick-guide-modal');\r\n        const button = document.getElementById('quick-guide-btn');\r\n        const styles = document.getElementById('quick-guide-dynamic-styles');\r\n        \r\n        if (overlay) overlay.remove();\r\n        if (modal) modal.remove();\r\n        if (button) button.remove();\r\n        if (styles) styles.remove();\r\n    }\r\n}\r\n\r\n// Export for React usage\r\nexport default ReactUserGuide;\r\n\r\n// Make available globally\r\nif (typeof window !== 'undefined') {\r\n    window.ReactUserGuide = ReactUserGuide;\r\n}\r\n\r\n// Auto-initialize for React\r\nif (typeof document !== 'undefined') {\r\n    document.addEventListener('DOMContentLoaded', () => {\r\n        if (!window.userGuideInitialized) {\r\n            new ReactUserGuide();\r\n            window.userGuideInitialized = true;\r\n        }\r\n    });\r\n}"],"mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;IAEDb,QAAQ,CAACc,IAAI,CAACC,WAAW,CAACI,KAAK,CAAC;EACpC;EAEAD,cAAcA,CAAA,EAAG;IACb;IACA,MAAME,cAAc,GAAGpB,QAAQ,CAACM,cAAc,CAAC,4BAA4B,CAAC;IAC5E,IAAIc,cAAc,EAAEA,cAAc,CAACb,MAAM,CAAC,CAAC;IAE3C,MAAMI,KAAK,GAAGX,QAAQ,CAACS,aAAa,CAAC,OAAO,CAAC;IAC7CE,KAAK,CAACD,EAAE,GAAG,4BAA4B;IACvrB,QAAQ,CAACsB,IAAI,CAACP,WAAW,CAACJ,KAAK,CAAC;EACpC;EAEAnB,mBAAmBA,CAAA,EAAG;IAClB;IACA,MAAM+B,QAAQ,GAAGvB,QAAQ,CAACM,cAAc,CAAC,iBAAiB,CAAC;IAC3D,IAAIiB,QAAQ,EAAE;MACVA,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAE,MAAM,IAAI,CAACC,cAAc,CAAC,CAAC,CAAC;IACnE;;IAEA;IACA,MAAMC,QAAQ,GAAG1B,QAAQ,CAACM,cAAc,CAAC,mBAAmB,CAAC;IAC7D,IAAIoB,QAAQ,EAAE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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}