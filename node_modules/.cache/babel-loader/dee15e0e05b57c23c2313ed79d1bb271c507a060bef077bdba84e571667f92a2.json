{"ast":null,"code":"import React from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DiffView=_ref=>{let{diffResult,viewMode,currentChangeIndex}=_ref;if(!diffResult)return null;const renderDiffLine=function(line,lineNumber){let type=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'';const isCurrentChange=currentChangeIndex>=0&&line.isCurrentChange;const className=\"diff-line \".concat(type,\" \").concat(isCurrentChange?'current-change':'').trim();return/*#__PURE__*/_jsxs(\"div\",{className:className,\"data-line-number\":lineNumber,\"data-line-type\":type,children:[/*#__PURE__*/_jsx(\"span\",{className:\"line-number\",children:lineNumber}),/*#__PURE__*/_jsx(\"span\",{className:\"line-content\",dangerouslySetInnerHTML:{__html:line.content||line}})]},\"\".concat(type,\"-\").concat(lineNumber));};if(viewMode==='side-by-side'){var _diffResult$originalL,_diffResult$changedLi;return/*#__PURE__*/_jsxs(\"div\",{className:\"diff-container side-by-side\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"diff-column\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Original Text\"}),/*#__PURE__*/_jsx(\"div\",{className:\"diff-content\",children:(_diffResult$originalL=diffResult.originalLines)===null||_diffResult$originalL===void 0?void 0:_diffResult$originalL.map((line,index)=>renderDiffLine(line,index+1,line.type))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"diff-column\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Changed Text\"}),/*#__PURE__*/_jsx(\"div\",{className:\"diff-content\",children:(_diffResult$changedLi=diffResult.changedLines)===null||_diffResult$changedLi===void 0?void 0:_diffResult$changedLi.map((line,index)=>renderDiffLine(line,index+1,line.type))})]})]});}// Inline view - combine both original and changed lines\nconst createUnifiedView=()=>{var _diffResult$originalL2,_diffResult$changedLi2;const unified=[];const maxLines=Math.max(((_diffResult$originalL2=diffResult.originalLines)===null||_diffResult$originalL2===void 0?void 0:_diffResult$originalL2.length)||0,((_diffResult$changedLi2=diffResult.changedLines)===null||_diffResult$changedLi2===void 0?void 0:_diffResult$changedLi2.length)||0);for(let i=0;i<maxLines;i++){var _diffResult$originalL3,_diffResult$changedLi3;const originalLine=(_diffResult$originalL3=diffResult.originalLines)===null||_diffResult$originalL3===void 0?void 0:_diffResult$originalL3[i];const changedLine=(_diffResult$changedLi3=diffResult.changedLines)===null||_diffResult$changedLi3===void 0?void 0:_diffResult$changedLi3[i];if(originalLine&&originalLine.type==='removed'){unified.push(originalLine);}if(changedLine&&changedLine.type==='added'){unified.push(changedLine);}if(originalLine&&(!originalLine.type||originalLine.type==='unchanged')){unified.push(originalLine);}}return unified;};return/*#__PURE__*/_jsx(\"div\",{className:\"diff-container inline\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"diff-column full-width\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Unified Diff View\"}),/*#__PURE__*/_jsx(\"div\",{className:\"diff-content\",children:createUnifiedView().map((line,index)=>renderDiffLine(line,index+1,line.type))})]})});};export default DiffView;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","DiffView","_ref","diffResult","viewMode","currentChangeIndex","renderDiffLine","line","lineNumber","type","arguments","length","undefined","isCurrentChange","className","concat","trim","children","dangerouslySetInnerHTML","__html","content","_diffResult$originalL","_diffResult$changedLi","originalLines","map","index","changedLines","createUnifiedView","_diffResult$originalL2","_diffResult$changedLi2","unified","maxLines","Math","max","i","_diffResult$originalL3","_diffResult$changedLi3","originalLine","changedLine","push"],"sources":["C:/Users/Joem/quickdiff-react/src/components/DiffView.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst DiffView = ({ diffResult, viewMode, currentChangeIndex }) => {\r\n  if (!diffResult) return null;\r\n\r\n  const renderDiffLine = (line, lineNumber, type = '') => {\r\n    const isCurrentChange = currentChangeIndex >= 0 && line.isCurrentChange;\r\n    const className = `diff-line ${type} ${isCurrentChange ? 'current-change' : ''}`.trim();\r\n\r\n    return (\r\n      <div \r\n        key={`${type}-${lineNumber}`} \r\n        className={className}\r\n        data-line-number={lineNumber}\r\n        data-line-type={type}\r\n      >\r\n        <span className=\"line-number\">{lineNumber}</span>\r\n        <span \r\n          className=\"line-content\"\r\n          dangerouslySetInnerHTML={{ __html: line.content || line }}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (viewMode === 'side-by-side') {\r\n    return (\r\n      <div className=\"diff-container side-by-side\">\r\n        <div className=\"diff-column\">\r\n          <h3>Original Text</h3>\r\n          <div className=\"diff-content\">\r\n            {diffResult.originalLines?.map((line, index) => \r\n              renderDiffLine(line, index + 1, line.type)\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"diff-column\">\r\n          <h3>Changed Text</h3>\r\n          <div className=\"diff-content\">\r\n            {diffResult.changedLines?.map((line, index) => \r\n              renderDiffLine(line, index + 1, line.type)\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Inline view - combine both original and changed lines\r\n  const createUnifiedView = () => {\r\n    const unified = [];\r\n    const maxLines = Math.max(\r\n      diffResult.originalLines?.length || 0,\r\n      diffResult.changedLines?.length || 0\r\n    );\r\n    \r\n    for (let i = 0; i < maxLines; i++) {\r\n      const originalLine = diffResult.originalLines?.[i];\r\n      const changedLine = diffResult.changedLines?.[i];\r\n      \r\n      if (originalLine && originalLine.type === 'removed') {\r\n        unified.push(originalLine);\r\n      }\r\n      if (changedLine && changedLine.type === 'added') {\r\n        unified.push(changedLine);\r\n      }\r\n      if (originalLine && (!originalLine.type || originalLine.type === 'unchanged')) {\r\n        unified.push(originalLine);\r\n      }\r\n    }\r\n    \r\n    return unified;\r\n  };\r\n\r\n  return (\r\n    <div className=\"diff-container inline\">\r\n      <div className=\"diff-column full-width\">\r\n        <h3>Unified Diff View</h3>\r\n        <div className=\"diff-content\">\r\n          {createUnifiedView().map((line, index) => \r\n            renderDiffLine(line, index + 1, line.type)\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiffView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}