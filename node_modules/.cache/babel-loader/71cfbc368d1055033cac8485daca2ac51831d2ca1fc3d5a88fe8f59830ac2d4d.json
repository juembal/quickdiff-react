{"ast":null,"code":"/**\r\n * Language Auto-Detection Utility\r\n * Detects programming language based on content patterns\r\n */export class LanguageDetector{constructor(){this.patterns={javascript:[/\\b(function|const|let|var|class|import|export|require)\\b/,/\\b(console\\.log|document\\.|window\\.)\\b/,/\\b(async|await|Promise|setTimeout)\\b/,/\\b(React|useState|useEffect|props)\\b/,/\\b(npm|node|express|axios)\\b/,/\\.(js|jsx|ts|tsx)$/i,/\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*$/m,/\\b(if|else|for|while|switch|case|break|continue|return)\\b/],python:[/\\b(def|class|import|from|as|if|elif|else|for|while|try|except|finally|with|lambda)\\b/,/\\b(print|input|len|range|enumerate|zip)\\b/,/\\b(self|__init__|__name__|__main__)\\b/,/\\.(py|pyw)$/i,/#.*$/m,/\\b(True|False|None)\\b/,/\\b(and|or|not|in|is)\\b/],java:[/\\b(public|private|protected|static|final|abstract|class|interface|extends|implements)\\b/,/\\b(String|int|double|float|boolean|char|void|Object)\\b/,/\\b(System\\.out\\.println|System\\.out\\.print)\\b/,/\\.(java)$/i,/\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*$/m,/\\b(if|else|for|while|switch|case|break|continue|return|try|catch|finally)\\b/],html:[/<\\/?[a-z][\\s\\S]*>/i,/<!DOCTYPE\\s+html>/i,/<(html|head|body|div|span|p|a|img|script|style|link|meta)\\b/i,/\\.(html|htm)$/i,/<!--[\\s\\S]*?-->/,/<\\w+(\\s+\\w+(\\s*=\\s*(\"[^\"]*\"|'[^']*'|[^\\s>]+))?)*\\s*\\/?>/],css:[/\\{[^}]*\\}/,/\\.(css|scss|sass|less)$/i,/@(media|import|keyframes|font-face)/,/\\b(color|background|margin|padding|border|width|height|font|display)\\b:/,/\\/\\*[\\s\\S]*?\\*\\//,/#[a-fA-F0-9]{3,6}\\b/,/\\b(px|em|rem|vh|vw|%)\\b/],json:[/^\\s*[{[]/,/\\.(json)$/i,/\"[^\"]*\"\\s*:\\s*(\"[^\"]*\"|\\d+|true|false|null|{|\\[)/,/^\\s*\\{[\\s\\S]*\\}\\s*$/,/^\\s*\\[[\\s\\S]*\\]\\s*$/],xml:[/<\\?xml\\s+version/i,/\\.(xml|xsd|xsl|xslt)$/i,/<\\w+(\\s+\\w+\\s*=\\s*\"[^\"]*\")*\\s*\\/?>[\\s\\S]*<\\/\\w+>/,/<!--[\\s\\S]*?-->/],markdown:[/\\.(md|markdown)$/i,/^#{1,6}\\s+/m,/\\*\\*[^*]+\\*\\*|\\*[^*]+\\*/,/`[^`]+`|```[\\s\\S]*?```/,/^\\s*[-*+]\\s+/m,/^\\s*\\d+\\.\\s+/m,/\\[([^\\]]+)\\]\\(([^)]+)\\)/],sql:[/\\b(SELECT|FROM|WHERE|INSERT|UPDATE|DELETE|CREATE|DROP|ALTER|TABLE|DATABASE)\\b/i,/\\b(JOIN|INNER|LEFT|RIGHT|OUTER|ON|GROUP BY|ORDER BY|HAVING)\\b/i,/\\.(sql)$/i,/--.*$/m,/\\/\\*[\\s\\S]*?\\*\\//],php:[/<\\?php/,/\\.(php|phtml)$/i,/\\$\\w+/,/\\b(echo|print|var_dump|isset|empty|array|function|class|public|private|protected)\\b/,/\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*$|#.*$/m],c:[/\\.(c|h)$/i,/#include\\s*<[^>]+>/,/\\b(int|char|float|double|void|struct|typedef|enum)\\b/,/\\b(printf|scanf|malloc|free|sizeof)\\b/,/\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*$/m],cpp:[/\\.(cpp|cxx|cc|hpp|hxx)$/i,/#include\\s*<[^>]+>/,/\\b(std::|cout|cin|endl|vector|string|class|public|private|protected)\\b/,/\\b(int|char|float|double|void|bool|auto)\\b/,/\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*$/m],csharp:[/\\.(cs)$/i,/\\b(using|namespace|class|public|private|protected|static|void|string|int|bool)\\b/,/\\b(Console\\.WriteLine|Console\\.Write)\\b/,/\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*$/m],ruby:[/\\.(rb)$/i,/\\b(def|class|module|end|if|elsif|else|unless|case|when|for|while|until|do|begin|rescue|ensure)\\b/,/\\b(puts|print|p|gets|require|include)\\b/,/#.*$/m,/\\b(true|false|nil)\\b/],go:[/\\.(go)$/i,/\\b(package|import|func|var|const|type|struct|interface|map|chan)\\b/,/\\b(fmt\\.Print|fmt\\.Println|fmt\\.Printf)\\b/,/\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*$/m],rust:[/\\.(rs)$/i,/\\b(fn|let|mut|const|struct|enum|impl|trait|use|mod|pub|crate)\\b/,/\\b(println!|print!|panic!|vec!)\\b/,/\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*$/m],yaml:[/\\.(yml|yaml)$/i,/^[\\s]*[\\w-]+\\s*:/m,/^[\\s]*-\\s+/m,/#.*$/m],dockerfile:[/\\.(dockerfile|Dockerfile)$/i,/\\b(FROM|RUN|COPY|ADD|WORKDIR|EXPOSE|CMD|ENTRYPOINT|ENV|ARG)\\b/i],shell:[/\\.(sh|bash|zsh|fish)$/i,/^#!/,/\\b(echo|cd|ls|grep|awk|sed|cat|chmod|chown)\\b/,/#.*$/m,/\\$\\{?\\w+\\}?/]};this.fileExtensions={js:'javascript',jsx:'javascript',ts:'javascript',tsx:'javascript',py:'python',pyw:'python',java:'java',html:'html',htm:'html',css:'css',scss:'css',sass:'css',less:'css',json:'json',xml:'xml',xsd:'xml',xsl:'xml',xslt:'xml',md:'markdown',markdown:'markdown',sql:'sql',php:'php',phtml:'php',c:'c',h:'c',cpp:'cpp',cxx:'cpp',cc:'cpp',hpp:'cpp',hxx:'cpp',cs:'csharp',rb:'ruby',go:'go',rs:'rust',yml:'yaml',yaml:'yaml',sh:'shell',bash:'shell',zsh:'shell',fish:'shell'};}/**\r\n   * Detect language from filename\r\n   */detectFromFilename(filename){var _filename$split$pop;if(!filename)return null;const extension=(_filename$split$pop=filename.split('.').pop())===null||_filename$split$pop===void 0?void 0:_filename$split$pop.toLowerCase();return this.fileExtensions[extension]||null;}/**\r\n   * Detect language from content\r\n   */detectFromContent(content){if(!content||content.trim().length===0)return'plaintext';const scores={};// Initialize scores\nObject.keys(this.patterns).forEach(lang=>{scores[lang]=0;});// Score each language based on pattern matches\nObject.entries(this.patterns).forEach(_ref=>{let[language,patterns]=_ref;patterns.forEach(pattern=>{const matches=content.match(pattern);if(matches){scores[language]+=matches.length;// Bonus for strong indicators\nif(this.isStrongIndicator(pattern,language)){scores[language]+=10;}}});});// Find the language with the highest score\nconst sortedLanguages=Object.entries(scores).sort((_ref2,_ref3)=>{let[,a]=_ref2;let[,b]=_ref3;return b-a;}).filter(_ref4=>{let[,score]=_ref4;return score>0;});if(sortedLanguages.length===0){return'plaintext';}const[topLanguage,topScore]=sortedLanguages[0];// Lower threshold for better detection\nif(topScore<1){return'plaintext';}return topLanguage;}/**\r\n   * Check if pattern is a strong indicator for a language\r\n   */isStrongIndicator(pattern,language){var _strongIndicators$lan;const strongIndicators={javascript:[/\\b(React|useState|useEffect|props)\\b/,/\\b(console\\.log|document\\.|window\\.)\\b/],python:[/\\b(def|class|import|from)\\b/,/\\b(__init__|__name__|__main__)\\b/],java:[/\\b(public\\s+class|public\\s+static\\s+void\\s+main)\\b/,/\\b(System\\.out\\.println)\\b/],html:[/<!DOCTYPE\\s+html>/i,/<html\\b/i],css:[/@(media|import|keyframes)/,/\\{[^}]*\\}/],json:[/^\\s*[{[]/,/\"[^\"]*\"\\s*:\\s*/],xml:[/<\\?xml\\s+version/i],markdown:[/^#{1,6}\\s+/m,/```[\\s\\S]*?```/],sql:[/\\b(SELECT|FROM|WHERE)\\b/i],php:[/<\\?php/],shell:[/^#!/]};return((_strongIndicators$lan=strongIndicators[language])===null||_strongIndicators$lan===void 0?void 0:_strongIndicators$lan.some(indicator=>indicator.toString()===pattern.toString()))||false;}/**\r\n   * Auto-detect language with confidence score\r\n   */autoDetect(content){let filename=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;// First try filename detection\nconst filenameLanguage=this.detectFromFilename(filename);if(filenameLanguage){return{language:filenameLanguage,confidence:'high',method:'filename'};}// Then try content detection\nconst contentLanguage=this.detectFromContent(content);// Calculate confidence based on content analysis\nlet confidence='low';if(contentLanguage!=='plaintext'){const patterns=this.patterns[contentLanguage]||[];const matchCount=patterns.reduce((count,pattern)=>{const matches=content.match(pattern);return count+(matches?matches.length:0);},0);if(matchCount>=10)confidence='high';else if(matchCount>=5)confidence='medium';}return{language:contentLanguage,confidence,method:'content'};}/**\r\n   * Get all supported languages\r\n   */getSupportedLanguages(){return['plaintext',...Object.keys(this.patterns).sort()];}}export default LanguageDetector;","map":{"version":3,"names":["LanguageDetector","constructor","patterns","javascript","python","java","html","css","json","xml","markdown","sql","php","c","cpp","csharp","ruby","go","rust","yaml","dockerfile","shell","fileExtensions","js","jsx","ts","tsx","py","pyw","htm","scss","sass","less","xsd","xsl","xslt","md","phtml","h","cxx","cc","hpp","hxx","cs","rb","rs","yml","sh","bash","zsh","fish","detectFromFilename","filename","_filename$split$pop","extension","split","pop","toLowerCase","detectFromContent","content","trim","length","scores","Object","keys","forEach","lang","entries","_ref","language","pattern","matches","match","isStrongIndicator","sortedLanguages","sort","_ref2","_ref3","a","b","filter","_ref4","score","topLanguage","topScore","_strongIndicators$lan","strongIndicators","some","indicator","toString","autoDetect","arguments","undefined","filenameLanguage","confidence","method","contentLanguage","matchCount","reduce","count","getSupportedLanguages"],"sources":["C:/Users/Joem/quickdiff-react/src/utils/LanguageDetector.js"],"sourcesContent":["/**\r\n * Language Auto-Detection Utility\r\n * Detects programming language based on content patterns\r\n */\r\n\r\nexport class LanguageDetector {\r\n  constructor() {\r\n    this.patterns = {\r\n      javascript: [\r\n        /\\b(function|const|let|var|class|import|export|require)\\b/,\r\n        /\\b(console\\.log|document\\.|window\\.)\\b/,\r\n        /\\b(async|await|Promise|setTimeout)\\b/,\r\n        /\\b(React|useState|useEffect|props)\\b/,\r\n        /\\b(npm|node|express|axios)\\b/,\r\n        /\\.(js|jsx|ts|tsx)$/i,\r\n        /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*$/m,\r\n        /\\b(if|else|for|while|switch|case|break|continue|return)\\b/\r\n      ],\r\n      python: [\r\n        /\\b(def|class|import|from|as|if|elif|else|for|while|try|except|finally|with|lambda)\\b/,\r\n        /\\b(print|input|len|range|enumerate|zip)\\b/,\r\n        /\\b(self|__init__|__name__|__main__)\\b/,\r\n        /\\.(py|pyw)$/i,\r\n        /#.*$/m,\r\n        /\\b(True|False|None)\\b/,\r\n        /\\b(and|or|not|in|is)\\b/\r\n      ],\r\n      java: [\r\n        /\\b(public|private|protected|static|final|abstract|class|interface|extends|implements)\\b/,\r\n        /\\b(String|int|double|float|boolean|char|void|Object)\\b/,\r\n        /\\b(System\\.out\\.println|System\\.out\\.print)\\b/,\r\n        /\\.(java)$/i,\r\n        /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*$/m,\r\n        /\\b(if|else|for|while|switch|case|break|continue|return|try|catch|finally)\\b/\r\n      ],\r\n      html: [\r\n        /<\\/?[a-z][\\s\\S]*>/i,\r\n        /<!DOCTYPE\\s+html>/i,\r\n        /<(html|head|body|div|span|p|a|img|script|style|link|meta)\\b/i,\r\n        /\\.(html|htm)$/i,\r\n        /<!--[\\s\\S]*?-->/,\r\n        /<\\w+(\\s+\\w+(\\s*=\\s*(\"[^\"]*\"|'[^']*'|[^\\s>]+))?)*\\s*\\/?>/\r\n      ],\r\n      css: [\r\n        /\\{[^}]*\\}/,\r\n        /\\.(css|scss|sass|less)$/i,\r\n        /@(media|import|keyframes|font-face)/,\r\n        /\\b(color|background|margin|padding|border|width|height|font|display)\\b:/,\r\n        /\\/\\*[\\s\\S]*?\\*\\//,\r\n        /#[a-fA-F0-9]{3,6}\\b/,\r\n        /\\b(px|em|rem|vh|vw|%)\\b/\r\n      ],\r\n      json: [\r\n        /^\\s*[{[]/,\r\n        /\\.(json)$/i,\r\n        /\"[^\"]*\"\\s*:\\s*(\"[^\"]*\"|\\d+|true|false|null|{|\\[)/,\r\n        /^\\s*\\{[\\s\\S]*\\}\\s*$/,\r\n        /^\\s*\\[[\\s\\S]*\\]\\s*$/\r\n      ],\r\n      xml: [\r\n        /<\\?xml\\s+version/i,\r\n        /\\.(xml|xsd|xsl|xslt)$/i,\r\n        /<\\w+(\\s+\\w+\\s*=\\s*\"[^\"]*\")*\\s*\\/?>[\\s\\S]*<\\/\\w+>/,\r\n        /<!--[\\s\\S]*?-->/\r\n      ],\r\n      markdown: [\r\n        /\\.(md|markdown)$/i,\r\n        /^#{1,6}\\s+/m,\r\n        /\\*\\*[^*]+\\*\\*|\\*[^*]+\\*/,\r\n        /`[^`]+`|```[\\s\\S]*?```/,\r\n        /^\\s*[-*+]\\s+/m,\r\n        /^\\s*\\d+\\.\\s+/m,\r\n        /\\[([^\\]]+)\\]\\(([^)]+)\\)/\r\n      ],\r\n      sql: [\r\n        /\\b(SELECT|FROM|WHERE|INSERT|UPDATE|DELETE|CREATE|DROP|ALTER|TABLE|DATABASE)\\b/i,\r\n        /\\b(JOIN|INNER|LEFT|RIGHT|OUTER|ON|GROUP BY|ORDER BY|HAVING)\\b/i,\r\n        /\\.(sql)$/i,\r\n        /--.*$/m,\r\n        /\\/\\*[\\s\\S]*?\\*\\//\r\n      ],\r\n      php: [\r\n        /<\\?php/,\r\n        /\\.(php|phtml)$/i,\r\n        /\\$\\w+/,\r\n        /\\b(echo|print|var_dump|isset|empty|array|function|class|public|private|protected)\\b/,\r\n        /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*$|#.*$/m\r\n      ],\r\n      c: [\r\n        /\\.(c|h)$/i,\r\n        /#include\\s*<[^>]+>/,\r\n        /\\b(int|char|float|double|void|struct|typedef|enum)\\b/,\r\n        /\\b(printf|scanf|malloc|free|sizeof)\\b/,\r\n        /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*$/m\r\n      ],\r\n      cpp: [\r\n        /\\.(cpp|cxx|cc|hpp|hxx)$/i,\r\n        /#include\\s*<[^>]+>/,\r\n        /\\b(std::|cout|cin|endl|vector|string|class|public|private|protected)\\b/,\r\n        /\\b(int|char|float|double|void|bool|auto)\\b/,\r\n        /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*$/m\r\n      ],\r\n      csharp: [\r\n        /\\.(cs)$/i,\r\n        /\\b(using|namespace|class|public|private|protected|static|void|string|int|bool)\\b/,\r\n        /\\b(Console\\.WriteLine|Console\\.Write)\\b/,\r\n        /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*$/m\r\n      ],\r\n      ruby: [\r\n        /\\.(rb)$/i,\r\n        /\\b(def|class|module|end|if|elsif|else|unless|case|when|for|while|until|do|begin|rescue|ensure)\\b/,\r\n        /\\b(puts|print|p|gets|require|include)\\b/,\r\n        /#.*$/m,\r\n        /\\b(true|false|nil)\\b/\r\n      ],\r\n      go: [\r\n        /\\.(go)$/i,\r\n        /\\b(package|import|func|var|const|type|struct|interface|map|chan)\\b/,\r\n        /\\b(fmt\\.Print|fmt\\.Println|fmt\\.Printf)\\b/,\r\n        /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*$/m\r\n      ],\r\n      rust: [\r\n        /\\.(rs)$/i,\r\n        /\\b(fn|let|mut|const|struct|enum|impl|trait|use|mod|pub|crate)\\b/,\r\n        /\\b(println!|print!|panic!|vec!)\\b/,\r\n        /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*$/m\r\n      ],\r\n      yaml: [\r\n        /\\.(yml|yaml)$/i,\r\n        /^[\\s]*[\\w-]+\\s*:/m,\r\n        /^[\\s]*-\\s+/m,\r\n        /#.*$/m\r\n      ],\r\n      dockerfile: [\r\n        /\\.(dockerfile|Dockerfile)$/i,\r\n        /\\b(FROM|RUN|COPY|ADD|WORKDIR|EXPOSE|CMD|ENTRYPOINT|ENV|ARG)\\b/i\r\n      ],\r\n      shell: [\r\n        /\\.(sh|bash|zsh|fish)$/i,\r\n        /^#!/,\r\n        /\\b(echo|cd|ls|grep|awk|sed|cat|chmod|chown)\\b/,\r\n        /#.*$/m,\r\n        /\\$\\{?\\w+\\}?/\r\n      ]\r\n    };\r\n\r\n    this.fileExtensions = {\r\n      js: 'javascript',\r\n      jsx: 'javascript',\r\n      ts: 'javascript',\r\n      tsx: 'javascript',\r\n      py: 'python',\r\n      pyw: 'python',\r\n      java: 'java',\r\n      html: 'html',\r\n      htm: 'html',\r\n      css: 'css',\r\n      scss: 'css',\r\n      sass: 'css',\r\n      less: 'css',\r\n      json: 'json',\r\n      xml: 'xml',\r\n      xsd: 'xml',\r\n      xsl: 'xml',\r\n      xslt: 'xml',\r\n      md: 'markdown',\r\n      markdown: 'markdown',\r\n      sql: 'sql',\r\n      php: 'php',\r\n      phtml: 'php',\r\n      c: 'c',\r\n      h: 'c',\r\n      cpp: 'cpp',\r\n      cxx: 'cpp',\r\n      cc: 'cpp',\r\n      hpp: 'cpp',\r\n      hxx: 'cpp',\r\n      cs: 'csharp',\r\n      rb: 'ruby',\r\n      go: 'go',\r\n      rs: 'rust',\r\n      yml: 'yaml',\r\n      yaml: 'yaml',\r\n      sh: 'shell',\r\n      bash: 'shell',\r\n      zsh: 'shell',\r\n      fish: 'shell'\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Detect language from filename\r\n   */\r\n  detectFromFilename(filename) {\r\n    if (!filename) return null;\r\n    \r\n    const extension = filename.split('.').pop()?.toLowerCase();\r\n    return this.fileExtensions[extension] || null;\r\n  }\r\n\r\n  /**\r\n   * Detect language from content\r\n   */\r\n  detectFromContent(content) {\r\n    if (!content || content.trim().length === 0) return 'plaintext';\r\n\r\n    const scores = {};\r\n    \r\n    // Initialize scores\r\n    Object.keys(this.patterns).forEach(lang => {\r\n      scores[lang] = 0;\r\n    });\r\n\r\n    // Score each language based on pattern matches\r\n    Object.entries(this.patterns).forEach(([language, patterns]) => {\r\n      patterns.forEach(pattern => {\r\n        const matches = content.match(pattern);\r\n        if (matches) {\r\n          scores[language] += matches.length;\r\n          \r\n          // Bonus for strong indicators\r\n          if (this.isStrongIndicator(pattern, language)) {\r\n            scores[language] += 10;\r\n          }\r\n        }\r\n      });\r\n    });\r\n\r\n    // Find the language with the highest score\r\n    const sortedLanguages = Object.entries(scores)\r\n      .sort(([,a], [,b]) => b - a)\r\n      .filter(([,score]) => score > 0);\r\n\r\n    if (sortedLanguages.length === 0) {\r\n      return 'plaintext';\r\n    }\r\n\r\n    const [topLanguage, topScore] = sortedLanguages[0];\r\n    \r\n    // Lower threshold for better detection\r\n    if (topScore < 1) {\r\n      return 'plaintext';\r\n    }\r\n\r\n    return topLanguage;\r\n  }\r\n\r\n  /**\r\n   * Check if pattern is a strong indicator for a language\r\n   */\r\n  isStrongIndicator(pattern, language) {\r\n    const strongIndicators = {\r\n      javascript: [/\\b(React|useState|useEffect|props)\\b/, /\\b(console\\.log|document\\.|window\\.)\\b/],\r\n      python: [/\\b(def|class|import|from)\\b/, /\\b(__init__|__name__|__main__)\\b/],\r\n      java: [/\\b(public\\s+class|public\\s+static\\s+void\\s+main)\\b/, /\\b(System\\.out\\.println)\\b/],\r\n      html: [/<!DOCTYPE\\s+html>/i, /<html\\b/i],\r\n      css: [/@(media|import|keyframes)/, /\\{[^}]*\\}/],\r\n      json: [/^\\s*[{[]/, /\"[^\"]*\"\\s*:\\s*/],\r\n      xml: [/<\\?xml\\s+version/i],\r\n      markdown: [/^#{1,6}\\s+/m, /```[\\s\\S]*?```/],\r\n      sql: [/\\b(SELECT|FROM|WHERE)\\b/i],\r\n      php: [/<\\?php/],\r\n      shell: [/^#!/]\r\n    };\r\n\r\n    return strongIndicators[language]?.some(indicator => \r\n      indicator.toString() === pattern.toString()\r\n    ) || false;\r\n  }\r\n\r\n  /**\r\n   * Auto-detect language with confidence score\r\n   */\r\n  autoDetect(content, filename = null) {\r\n    // First try filename detection\r\n    const filenameLanguage = this.detectFromFilename(filename);\r\n    if (filenameLanguage) {\r\n      return {\r\n        language: filenameLanguage,\r\n        confidence: 'high',\r\n        method: 'filename'\r\n      };\r\n    }\r\n\r\n    // Then try content detection\r\n    const contentLanguage = this.detectFromContent(content);\r\n    \r\n    // Calculate confidence based on content analysis\r\n    let confidence = 'low';\r\n    if (contentLanguage !== 'plaintext') {\r\n      const patterns = this.patterns[contentLanguage] || [];\r\n      const matchCount = patterns.reduce((count, pattern) => {\r\n        const matches = content.match(pattern);\r\n        return count + (matches ? matches.length : 0);\r\n      }, 0);\r\n      \r\n      if (matchCount >= 10) confidence = 'high';\r\n      else if (matchCount >= 5) confidence = 'medium';\r\n    }\r\n\r\n    return {\r\n      language: contentLanguage,\r\n      confidence,\r\n      method: 'content'\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get all supported languages\r\n   */\r\n  getSupportedLanguages() {\r\n    return [\r\n      'plaintext',\r\n      ...Object.keys(this.patterns).sort()\r\n    ];\r\n  }\r\n}\r\n\r\nexport default LanguageDetector;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}